{"version":3,"sources":["modules/TileHeroLink.js","utils/url.js","components/Pagination.js","utils/misc.js","pages/Feed.js","components/Search.js","pages/NotFound.js","components/ErrorBoundary.js","components/ResultsBanner.js","actions/types.js","actions/APIActions.js","routes/Routing.js","actions/BrandActions.js","components/Logo.js","components/BrandsList.js","components/ParamLink.js","components/CategoriesList.js","components/CollapsiblePanel.js","components/NavItems.js","components/MobileNav.js","components/PartnerLogo.js","modules/Header.js","components/Nav.js","App.js","reducers/MetaReducer.js","reducers/APIReducer.js","reducers/BrandReducer.js","data/brand-defaults/youtube.js","data/brand-defaults/vimeo.js","data/brand-defaults/metacafe.js","reducers/index.js","utils/objects.js","components/Meta.js","serviceWorker.js","index.js"],"names":["TileHeroLink","props","react_default","a","createElement","className","href","link","target","src","alt","title","children","getURLParam","ctx","param","location","search","queryString","parse","updatedURLParamString","value","url","match","urlParams","concat","stringify","updateURLParams","pathWithParams","history","push","Pagination","state","currPage","MAX_PAGES","LAST_PAGE","updatePage","page","dec","_this","handlePageUpdate","inc","INITIAL","arguments","length","undefined","setState","Object","objectSpread","parseInt","onPageUpdate","dynamicPageButtons","buttons","_loop","index","i","classNames","key","onClick","this","lastPage","_this2","aria-label","ariaLabel","rel","Component","withRouter","decimal","num","rounded","Math","ceil","abbvNumber","div_k","parseFloat","div_m","div_b","div_t","Fragment","results","items","videos","video","modules_TileHeroLink","toFixed","renderFeed","components_Pagination","Search","active","classString","searchString","updateSearch","isActive","isMobile","onSearchClick","submit","document","getElementsByClassName","focus","preservePathUpdateParams","pathname","index_min_default","placeholder","onChange","event","onEnter","searchText","connect","meta","brands","NotFound","components_Search","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","error","info","console","warn","errorContent","ENDPOINT","process","DEFAULT_BRAND","getCategoriesByBrand","brand","_endpoint","dispatch","fetch","then","res","json","payload","attribute","categories","keys","type","catch","err","log","Routing","onRouteChanged","_this$props","activeBrand","params","split","updateAllBrandInfo","category","updateActiveBrand","handleCategories","delegateSearch","query","searchByQuery","searchByCategory","searchByBrandDefault","providers","allCategories","prevProps","react_router","exact","path","component","components_ErrorBoundary","pages_NotFound","components_ResultsBanner","pages_Feed","api","searchResults","infoObj","updateBrandAttribute","Logo","id","BrandsList","links","require","b","toLowerCase","react_router_dom","to","activeClassName","renderLinks","urlParam","CategoriesList","c","components_ParamLink","style","fontSize","CollapsiblePanel","_ref","data-toggle","NavItems","dist","components_CollapsiblePanel","components_BrandsList","components_CategoriesList","MobileNav","isOpen","toggleOpen","force","components_Logo","data-target","aria-controls","aria-expanded","components_NavItems","PartnerLogo","partnerLogo","viewClassName","components_MobileNav","components_PartnerLogo","Nav","App","modules_Header","components_Nav","routes_Routing","INITIAL_STATE","description","keywords","subject","robots","ogTitle","ogImage","ogDescription","ogSiteName","ogType","ogURL","window","youtube","brandName","logo","vimeo","metacafe","combineReducers","action","metaData","defaultObj","argObj","temp","mergeObjects","defineProperty","Meta","lib_default","name","content","property","Boolean","hostname","store","createStore","reducer","applyMiddleware","ReduxThunk","ReactDOM","render","es","components_Meta","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0YAoBeA,EAlBM,SAACC,GAClB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iHACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAML,EAAMM,MAAQ,IAAKF,UAAU,YAAYG,OAAQP,EAAMO,QAAU,UACxEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMQ,KAAO,oCAAqCC,IAAKT,EAAMU,OAAS,yBAElFT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcJ,EAAMU,OAAS,uBAC5CT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZJ,EAAMW,UAAY,mCCPtBC,EAAc,SAACC,EAAKC,EAAOC,GAGpC,OAFIA,IAAUA,EAAWF,EAAIE,SAASC,QACpBC,IAAYC,MAAMH,GACnBD,IAGRK,EAAwB,SAACN,EAAKC,EAAOM,GAC9C,IAAMC,EAAMR,EAAIS,MAAMD,IAChBE,EAAYN,IAAYC,MAAML,EAAIE,SAASC,QAGjD,OAFAO,EAAUT,GAASM,EACD,GAAAI,OAAMH,EAAN,KAAAG,OAAaP,IAAYQ,UAAUF,KAI5CG,EAAkB,SAACb,EAAKC,EAAOM,GACxC,IAAMO,EAAiBR,EAAsBN,EAAKC,EAAOM,GACzDP,EAAIe,QAAQC,KAAKF,ICjBfG,6MACFC,MAAQ,CACJC,SAAU,EACVC,UAAW,EACXC,UAAW,QAGfC,WAAa,SAACC,GACV,OAAOA,GACH,IAAK,KACD,IAAIC,EAAMC,EAAKP,MAAMC,SAAW,EAC7BK,EAAM,IAAGA,EAAM,GAClBC,EAAKC,iBAAiBF,GACtB,MACJ,IAAK,KACD,IAAIG,EAAMF,EAAKP,MAAMC,SAAW,EAChCM,EAAKC,iBAAiBC,GACtB,MACJ,QACIF,EAAKC,iBAAiBH,OAKlCG,iBAAmB,SAACH,GAA0B,IAApBK,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1CJ,EAAKO,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACOR,EAAKP,MADZ,CAEIC,SAAUgB,SAASZ,KACpB,WACCV,EAAgBY,EAAKtC,MAAO,OAAQgD,SAASZ,KAEzCK,GAAWH,EAAKtC,MAAMiD,cAAcX,EAAKtC,MAAMiD,oBAI3DC,mBAAqB,WAEjB,IADA,IAAMC,EAAU,GADOC,EAAA,WAGnB,IAAIC,EAAQf,EAAKP,MAAMC,SAAWsB,EAC9BC,EAAU,aAAA/B,OAAiB6B,IAAUf,EAAKP,MAAMC,SAAY,SAAW,IAC3EmB,EAAQtB,KACJ5B,EAAAC,EAAAC,cAAA,MAAIC,UAAS,GAAAoB,OAAK+B,GAAcC,IAAKH,GACnCpD,EAAAC,EAAAC,cAAA,QACEC,UAAU,YACVqD,QAAS,WAAQnB,EAAKH,WAAWkB,IACjCjB,KAAMiB,GACNA,MATJC,EAAI,EAAGA,EAAIhB,EAAKP,MAAME,UAAWqB,IAAIF,IAa7C,OAAOD,sFAKP,IAAIf,EAAOsB,KAAK1D,MAAMoC,MAAQxB,EAAY8C,KAAK1D,MAAO,SAAW,EACjE0D,KAAKb,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAmBY,KAAK3B,MAAxB,CAA+BC,SAAUgB,SAASZ,MAG/CsB,KAAK1D,MAAM2D,UAAaD,KAAK1D,MAAMgC,UAAY0B,KAAK1D,MAAM2D,UACzDD,KAAKb,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAkBY,KAAK3B,MAAvB,CAA8BG,UAAWc,SAASU,KAAK1D,MAAM2D,8CAI5D,IAAAC,EAAAF,KACL,OACEzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoByD,aAAYH,KAAK1D,MAAM8D,WACxD7D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVsD,KAAK3B,MAAMC,SAAW,EACpB/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYoD,IAAI,MAC5BvD,EAAAC,EAAAC,cAAA,QACEC,UAAU,YACVqD,QAAS,WAAQG,EAAKzB,WAAW,OACjCC,KAAK,KACL2B,IAAI,YAJN,SAOJ,KAEDL,KAAKR,sBAEHQ,KAAK3B,MAAMG,WAAcwB,KAAK3B,MAAMC,UAAY0B,KAAK3B,MAAME,UAAY,GAAKyB,KAAK3B,MAAMG,UACtFjC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYoD,IAAI,MAC5BvD,EAAAC,EAAAC,cAAA,QACEC,UAAU,YACVqD,QAAS,WAAQG,EAAKzB,WAAW,OACjCC,KAAK,KACL2B,IAAI,QAJN,SAOJ,cA1FSC,aAiGVC,cAAWnC,GC/FboC,EAAU,SAACC,GACpB,IAAIC,EAAUC,KAAKC,KAAW,GAANH,GAAY,GAEpC,OAAIC,EAAU,EAAK,EACRA,EAIApB,SAASoB,IAIXG,EAAa,SAACJ,GACvB,IAAIK,EAAQC,WAAWN,EAAM,KACzBO,EAAQD,WAAWD,EAAQ,KAC3BG,EAAQF,WAAWC,EAAQ,KAC3BE,EAAQH,WAAWE,EAAQ,KAE/B,OAAGH,EAAQ,IACAN,EAAQM,GAAS,IAEpBE,EAAQ,IACLR,EAAQQ,GAAS,IAEpBC,EAAQ,IACLT,EAAQS,GAAS,IAGjBT,EAAQU,GAAS,KCejBX,cA1CF,SAACjE,GAwBV,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACM7E,EAAM8E,QAzBG,SAACA,GAEhB,IADA,IAAIC,EAAQ,GACJzB,EAAI,EAAGA,EAAI,IAAMA,EAAIwB,EAAQE,OAAOrC,OAAQW,IAAI,CACpD,IAAI2B,EAAQH,EAAQE,OAAO1B,GAC3ByB,EAAMlD,KACF5B,EAAAC,EAAAC,cAAC+E,EAAD,CACIxE,MAAOuE,EAAK,MACZzE,IAAKyE,EAAK,cACV3E,KAAM2E,EAAK,IACXzB,IAAG,GAAAhC,OAAKyD,EAAK,GAAV,KAAAzD,OAAoB8B,IAEvBrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVmE,EAAWU,EAAK,OADrB,eACgDhF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWqE,WAAWQ,EAAK,QAAYE,QAAQ,GAA/D,MAEhDlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqB6E,EAAK,aAKzD,OAAOF,EAKgBK,CAAWpF,EAAM8E,SAAW,KAE7C9E,EAAM8E,QACJ7E,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SACdH,EAAAC,EAAAC,cAACkF,EAAD,CACIvB,UAAU,oBACVb,aAAc,aACdb,KAAMxB,EAAYZ,EAAO,QACzB2D,SAAS,QAGnB,iCCrCR2B,6MACFvD,MAAQ,CACJwD,QAAQ,EACRC,YAAa,aACbC,aAAc,MAIlBD,YAAc,WACV,oBAAAhE,OAAsBc,EAAKP,MAAMwD,OAAU,SAAW,aAI1DG,aAAe,SAACtE,GACZkB,EAAKO,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAkBR,EAAKP,MAAvB,CAA8B0D,aAAcrE,QAGhDuE,SAAW,WAEP,OAAIC,YACStD,EAAKP,MAAMwD,UAI5BM,cAAgB,SAACzE,GACVkB,EAAKP,MAAMwD,QACPjD,EAAKP,MAAM0D,cAAcnD,EAAKwD,SAG9BF,YAAUtD,EAAKO,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAkBR,EAAKP,MAAvB,CAA8BwD,QAAQ,MAInDjD,EAAKO,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACOR,EAAKP,MADZ,CAEIwD,QAAQ,IACT,WAAOQ,SAASC,uBAAuB,4BAA4B,GAAGC,aAKjFC,yBAA2B,WACvB5D,EAAKtC,MAAMsB,MAAMD,IAAMiB,EAAKtC,MAAMe,SAASoF,SAC3C7D,EAAKtC,MAAM4B,QAAQC,KAAKV,EAAsBmB,EAAKtC,MAAO,IAAKsC,EAAKP,MAAM0D,kBAG9EK,OAAS,WACLxD,EAAK4D,2BAGL5D,EAAKO,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACOR,EAAKP,MADZ,CAEI0D,aAAc,GACdF,QAASK,kGAKblC,KAAKb,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACOY,KAAK3B,MADZ,CAEIwD,OAAQ7B,KAAKiC,aACdjC,KAAKb,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACIY,KAAK3B,MADT,CAECyD,YAAa9B,KAAK8B,mDAIlB,IAAA5B,EAAAF,KACJ,OACIzD,EAAAC,EAAAC,cAACiG,EAAAlG,EAAD,CACEmG,YAAY,YACZC,SAAU,SAAClF,EAAOmF,GAAY3C,EAAK8B,aAAatE,IAChDoF,QAAS,SAACpF,EAAOmF,GAAY3C,EAAKkC,UAClCD,cAAe,SAACzE,EAAOmF,GAAY3C,EAAKiC,cAAczE,IACtDqF,WAAY/C,KAAK3B,MAAM0D,aACvBlC,WAAYG,KAAK8B,uBA3EVxB,aAwFN0C,cAPS,SAAC3E,GACrB,MAAO,CACH4E,KAAM5E,EAAM4E,KACZC,OAAQ7E,EAAM6E,SAIkB,GAAzBF,CAA6BzC,YAAWqB,IClFxCuB,EAVE,WACb,OACI5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,SACAH,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAC2G,EAAD,SCsBzBC,cA1BX,SAAAA,EAAY/G,GAAO,IAAAsC,EAAA,OAAAQ,OAAAkE,EAAA,EAAAlE,CAAAY,KAAAqD,IACfzE,EAAAQ,OAAAmE,EAAA,EAAAnE,CAAAY,KAAAZ,OAAAoE,EAAA,EAAApE,CAAAiE,GAAAI,KAAAzD,KAAM1D,KACD+B,MAAQ,CAAEqF,UAAU,GAFV9E,iFAUD+E,EAAOC,GAErBC,QAAQC,KAAK,uBAAwBH,GACrCE,QAAQC,KAAK,sBAAuBF,GACpC5D,KAAKb,SAAS,CAACuE,UAAU,qCAIzB,OAAI1D,KAAK3B,MAAMqF,SAEJ1D,KAAK1D,MAAMyH,aAEf/D,KAAK1D,MAAMW,4DAjBU0G,GAE5B,MAAO,CAAED,UAAU,UARCpD,aCYbC,cAXO,SAACjE,GACnB,OAAGY,EAAYZ,EAAO,KAEdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,2BAC4BH,EAAAC,EAAAC,cAAA,YAAOS,EAAYZ,EAAO,OAIvD,OCHE0H,EAAWC,2DAIXC,EAAgBD,UCwChBE,EAAuB,SAACC,GACjC,IAAMC,EAAS,GAAAvG,OAAMkG,EAAN,KAAAlG,OAAkBsG,EAAlB,eACf,OAAO,SAAAE,GACHC,MAAMF,GACDG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACF,IAAIE,EAAU,CAACP,MAAOA,EAAOQ,UAAW,gBAAiBlH,MAAO+G,EAAII,YAIhEJ,EAAII,WAAW,IAAgD,IAA1CzF,OAAO0F,KAAKL,EAAII,WAAW,IAAI5F,SACpD0F,EAAO,MAAY,CAAC,KAExBL,EAAS,CAACS,KDhDY,yBCgDkBJ,QAASA,MAEpDK,MAAM,SAAAC,GACHpB,QAAQqB,IAAR,iCAAApH,OAA8CsG,EAA9C,KAAwDa,GAKxDX,EAAS,CAACS,KDxDY,yBCwDkBJ,QAD1B,CAACP,MAAOA,EAAOQ,UAAW,gBAAiBlH,MAAO,CAAC,WCrD3EyH,6MAEFC,eAAiB,WAAK,IAAAC,EACMzG,EAAKtC,MAAxBsB,EADayH,EACbzH,MAAOP,EADMgI,EACNhI,SACRQ,EAAYN,IAAYC,MAAMoB,EAAKtC,MAAMe,SAASC,QAClDgI,EAAc1H,EAAM2H,OAAOnB,OAAS/G,EAASoF,SAAS+C,MAAM,KAAK,IAAMtB,EAG3EtF,EAAKtC,MAAMmJ,mBAAmB,CAC1BH,YAAaA,EACb5G,KAAMb,EAAS,MAAY,EAC3BP,OAAQO,EAAS,GAAS,GAC1B6H,SAAU7H,EAAS,UAAgB,GACnCN,YAAaF,EAASC,QAAU,KAIpCsB,EAAKtC,MAAMqJ,kBAAkBL,GAG7B1G,EAAKgH,iBAAiBN,GAItB1G,EAAKiH,eAAeP,EAAazH,EAAS,EAAOA,EAAS,aAI9DgI,eAAiB,SAACzB,EAAO0B,EAAOJ,GAC5BtB,EAAQA,GAASxF,EAAKtC,MAAM4G,OAAOoC,YACnCQ,EAAQA,GAAS5I,EAAY0B,EAAKtC,MAAO,KACzCoJ,EAAWA,GAAYxI,EAAY0B,EAAKtC,MAAO,YAE5CwJ,GACCjC,QAAQqB,IAAI,oBAAqBd,EAAOxF,EAAKtC,MAAMe,SAASC,QAG5DsB,EAAKtC,MAAMyJ,cAAc3B,EAAOxF,EAAKtC,MAAMe,SAASC,SAEhDoI,GACJ7B,QAAQqB,IAAI,uBAAwBd,EAAOsB,GAE3C9G,EAAKtC,MAAM0J,iBAAiB5B,EAAOsB,KAGnC7B,QAAQqB,IAAI,4BAA6Bd,GAIzCxF,EAAKtC,MAAM2J,qBAAqB7B,OAKxCwB,iBAAmB,SAACxB,GAEhB,IAAIS,GADJT,EAAQA,GAASxF,EAAKtC,MAAM4J,UAAUtH,EAAKtC,MAAMgJ,cAC1Ba,cAGnBtB,GAAoC,IAAtBA,EAAW5F,QACzBL,EAAKtC,MAAM6H,qBAAqBC,sFAIrBgC,GACXpG,KAAK1D,MAAMe,WAAa+I,EAAU/I,UAClC2C,KAAKoF,6DAKTvB,QAAQqB,IAAI,iBAAkBlF,KAAK1D,OACnC0D,KAAKoF,kDAGD,IAAAlF,EAAAF,KACJ,OACIzD,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,KACI9J,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIzG,IAAI,WAAW0G,UAAW,WAC5C,OACIjK,EAAAC,EAAAC,cAACgK,EAAD,CAAe1C,aAAcxH,EAAAC,EAAAC,cAACiK,EAAD,OACzBnK,EAAAC,EAAAC,cAACkK,EAAD,MACApK,EAAAC,EAAAC,cAACmK,EAAD,CAAMxF,QAASlB,EAAK5D,MAAMuK,IAAIC,oBAI9CvK,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAOzG,IAAI,UAAU0G,UAAWrD,IAC9C5G,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAOE,KAAK,UAAUzG,IAAI,QAAQ0G,UAAW,WACzC,OACIjK,EAAAC,EAAAC,cAACgK,EAAD,CAAe1C,aAAcxH,EAAAC,EAAAC,cAACiK,EAAD,OACzBnK,EAAAC,EAAAC,cAACkK,EAAD,MACApK,EAAAC,EAAAC,cAACmK,EAAD,CAAMxF,QAASlB,EAAK5D,MAAMuK,IAAIC,oBAI9CvK,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAOvG,IAAI,cAAc0G,UAAWrD,YA/F1B7C,aA4GP0C,cAPS,SAAC3E,GACrB,MAAO,CACH6E,OAAQ7E,EAAM6E,OACd2D,IAAKxI,EAAMwI,MAIqB,CACpCpB,mBC9G8B,SAACsB,GAC/B,MAAO,CAAChC,KHHyB,wBGGIJ,QAASoC,ID8G9CpB,kBCnH6B,SAACvB,GAC9B,MAAO,CAACW,KHAuB,sBGAIJ,QAASP,IDmH5C4C,qBC5GgC,SAAC5C,EAAOQ,EAAWlH,GACnD,MAAO,CAACqH,KHN0B,yBGMIJ,QAAS,CAACP,QAAOQ,YAAWlH,WD4GlEyG,uBACA4B,cDhIyB,SAAC3B,EAAO7G,GACjC,OAAO,SAAA+G,GACH,IAAID,EAAS,GAAAvG,OAAMkG,EAAN,KAAAlG,OAAkBsG,GAAlBtG,OAA0BP,GACvCsG,QAAQqB,IAAR,WAAApH,OAAuBuG,EAAvB,QACAE,MAAMF,GACDG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACFH,EAAS,CAACS,KDFK,WCEkBJ,QAASF,MAE7CO,MAAM,SAAAC,GACHpB,QAAQqB,IAAR,wCAAApH,OAAoDuG,EAApD,KAAkEY,OCuH9Ee,iBDjH4B,SAAC5B,EAAO7G,GACpC,OAAO,SAAA+G,GACH,IAAID,EAAS,GAAAvG,OAAMkG,EAAN,KAAAlG,OAAkBsG,GAAlBtG,OAA0BP,GACvCsG,QAAQqB,IAAR,WAAApH,OAAuBuG,EAAvB,QACAE,MAAMF,GACDG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACFH,EAAS,CAACS,KDlBK,WCkBkBJ,QAASF,MAE7CO,MAAM,SAAAC,GACHpB,QAAQqB,IAAR,wCAAApH,OAAoDuG,EAApD,KAAkEY,OCwG9EgB,qBDlGgC,SAAC7B,GACjC,OAAO,SAAAE,GACH,IAAID,EAAS,GAAAvG,OAAMkG,EAAN,KAAAlG,OAAkBsG,GAC/BP,QAAQqB,IAAR,WAAApH,OAAuBuG,EAAvB,QACAE,MAAMF,GACDG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACFH,EAAS,CAACS,KDlCK,WCkCkBJ,QAASF,MAE7CO,MAAM,SAAAC,GACHpB,QAAQqB,IAAR,wCAAApH,OAAoDuG,EAApD,KAAkEY,QCiFnEjC,CAQZzC,YAAW4E,IE9HC8B,EARF,WACT,OACI1K,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAwBC,KAAK,KACtCJ,EAAAC,EAAAC,cAAA,OAAKyK,GAAG,QAAR,SAAqB3K,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,QAArB,OCoBGyK,EAtBI,WAef,OACI5K,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAfE,WAChB,IAAI0K,EAAQ,GACRlE,EAASmE,EAAQ,IAErB,IAAI,IAAIC,KAAKpE,EAAM,OAAW,CAC1B,IAAIkB,EAAQlB,EAAM,OAAWoE,GAAGlD,MAAMmD,cACtCH,EAAMjJ,KACF5B,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAASC,GAAE,IAAA3J,OAAMsG,GAAS1H,UAAU,kCAAkCgL,gBAAgB,SAAS5H,IAAKwH,GAAIlD,IAIhH,OAAOgD,EAKFO,KCoBEpH,cAnCG,SAACjE,GAEf,IAAMsL,EAAW1K,EAAYZ,EAAOA,EAAMc,OAuB1C,OACIb,EAAAC,EAAAC,cAAA,OACIC,UAAYkL,IAAatL,EAAMoB,MAApB,GAAAI,OAAgCxB,EAAMI,UAAtC,KAAAoB,OAAmDxB,EAAMoL,iBAAoBpL,EAAMI,UAC9FqD,QAAS,WAtBbzD,EAAMsB,MAAMD,IAAMrB,EAAMe,SAASoF,SACjCnG,EAAM4B,QAAQC,KAAKV,EAAsBnB,EAAOA,EAAMc,MAAOd,EAAMoB,UAuB9DpB,EAAMW,YCdJ4K,EAlBQ,SAACvL,GAepB,OAAQC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,IAdY,WAChB,IAAI0K,EAAQ,GAEZ,IAAI,IAAIU,KAAKxL,EAAMuI,WAAW,CAC1B,IAAIa,EAAWpJ,EAAMuI,WAAWiD,GAAGpC,SAAS6B,cAC5CH,EAAMjJ,KACF5B,EAAAC,EAAAC,cAACsL,EAAD,CAAWrL,UAAU,kCAAkCgL,gBAAgB,SAAStK,MAAM,WAAW0C,IAAKgI,EAAGpK,MAAOgI,GAAWA,IAKnI,OADoB,IAAjB0B,EAAMnI,SAAcmI,EAAQ7K,EAAAC,EAAAC,cAAA,KAAGuL,MAAO,CAACC,SAAY,SAAvB,yBACxBb,EAG0BO,GAA7B,MCGGO,EAnBU,SAAAC,GAA2B,IAAzBjB,EAAyBiB,EAAzBjB,GAAIlK,EAAqBmL,EAArBnL,MAAOC,EAAckL,EAAdlL,SAClC,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB0L,cAAY,WAAWzL,KAAI,IAAAmB,OAAMoJ,IAC/DlK,KAITT,EAAAC,EAAAC,cAAA,OAAKyK,GAAIA,EAAIxK,UAAU,2BACrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcO,OCJrCoL,mLAGE,OACI9L,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACI5E,EAAAC,EAAAC,cAAC6L,EAAA,YAAD,KACI/L,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACVH,EAAAC,EAAAC,cAAC2G,EAAD,SAIZ7G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACVH,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAASC,GAAG,IAAI/K,UAAU,oBAAoBgL,gBAAgB,WAA9D,cAIJnL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACVH,EAAAC,EAAAC,cAAC8L,EAAD,CACIrB,GAAG,mBACHlK,MAAM,UAENT,EAAAC,EAAAC,cAAC+L,EAAD,QAGRjM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACVH,EAAAC,EAAAC,cAAC8L,EAAD,CACIrB,GAAG,uBACHlK,MAAM,cAENT,EAAAC,EAAAC,cAACgM,EAAD,CAAgB5D,WACZ7E,KAAK1D,MAAM4J,UAAUlG,KAAK1D,MAAMgJ,aAAaa,2BAhCtD7F,aA8CR0C,cAJS,SAAC3E,GACrB,OAAAe,OAAAC,EAAA,EAAAD,CAAA,GAAWf,EAAM6E,SAGmB,CAACiB,wBAA1BnB,CAAiDzC,YAAW8H,ICnDrEK,6MACFrK,MAAO,CAACsK,QAAQ,KAEhBC,WAAa,SAACC,GACU,qBAAVA,EACNjK,EAAKO,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAkBR,EAAKP,MAAvB,CAA8BsK,OAAQE,KAGtCjK,EAAKO,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAkBR,EAAKP,MAAvB,CAA8BsK,QAAS/J,EAAKP,MAAMsK,6FAIvCvC,GACXpG,KAAK1D,MAAMe,WAAa+I,EAAU/I,UAClC2C,KAAK4I,YAAW,oCAIhB,IAAA1I,EAAAF,KACJ,OACIzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXH,EAAAC,EAAAC,cAACqM,EAAD,MAEAvM,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iDAAiDqI,KAAK,SAASqD,cAAY,WAAWW,cAAY,2BAA2BC,gBAAc,0BAA0BC,gBAAgBjJ,KAAK3B,MAAMsK,OAAU,OAAS,QAASxI,aAAW,oBAAoBJ,QAAS,WAAOG,EAAK0I,gBAElSrM,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAoB,OAAMkC,KAAK3B,MAAMsK,OAAU,OAAS,WAApC,oBAAkEzB,GAAG,2BAC/E3K,EAAAC,EAAAC,cAACyM,EAAD,eA3BI5I,aAmCTC,cAAWmI,GCpCpBS,mLAEE,OACI5M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OACIyK,GAAG,eACHxK,UAAWsD,KAAK1D,MAAMI,UACtBI,IAAKkD,KAAK1D,MAAM8M,YAChBrM,IAAKiD,KAAK1D,MAAMS,KAAOiD,KAAK1D,MAAMgJ,sBAR5BhF,aAmBX0C,cAJS,SAAC3E,GACrB,OAAAe,OAAAC,EAAA,EAAAD,CAAA,GAAWf,EAAM6E,SAGmB,GAAzBF,CAA6BzC,YAAW4I,ICExC5I,cAjBA,SAACjE,GACZ,IAAI8H,EAAQ9H,EAAMsB,MAAM2H,OAAOnB,OAAS9H,EAAMe,SAASoF,SAAS+C,MAAM,KAAK,GAC3E,OACIjJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdH,EAAAC,EAAAC,cAAC6L,EAAA,WAAD,CAAYe,cAAc,cACtB9M,EAAAC,EAAAC,cAAC6M,EAAD,MACA/M,EAAAC,EAAAC,cAAC2G,EAAD,OAEJ7G,EAAAC,EAAAC,cAAC6L,EAAA,YAAD,KACI/L,EAAAC,EAAAC,cAACqM,EAAD,MACE1E,EAAS7H,EAAAC,EAAAC,cAAC8M,EAAD,MAAkBhN,EAAAC,EAAAC,cAAC2G,EAAD,UCJ9BoG,GAVH,WACR,OACIjN,EAAAC,EAAAC,cAAC6L,EAAA,YAAD,CAAae,cAAc,mEACvB9M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACyM,EAAD,SCFVO,+LAGE5F,QAAQqB,IAAI,cAAelF,KAAK1D,wCAIhC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACiN,EAAD,MACAnN,EAAAC,EAAAC,cAACkN,GAAD,MAEApN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uEACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACbH,EAAAC,EAAAC,cAACmN,EAAD,gBAdAtJ,aAsBHC,eAAWkJ,aCzBpBI,GAAgB,CAClB7M,MAAS,6BACT8M,YAAe,0CACfC,SAAY,GACZC,QAAW,GACXC,OAAU,eACVC,QAAW,YACXC,QAAW,2BACXC,cAAiB,0CACjBC,WAAc,YACdC,OAAU,GACVC,MAASC,OAAOnN,SAASV,MCZvBkN,GAAgB,CAAC/C,cAAe,MCQhC+C,GAAgB,CAClBvE,YAAapB,EACbxF,KAAM,EACNpB,OAAQ,GACRoI,SAAU,GACVnI,YAAa,GACb6L,YAAa,KACblD,UAAW,CACPuE,QClBe,CACnBC,UAAW,UACXC,KACI,gFACJjM,KAAM,EACNpB,OAAQ,GACRoI,SAAU,GACVnI,YAAa,GACb4I,cAAe,IDWXyE,MEnBa,CACjBF,UAAW,QACXC,KACI,+GACJjM,KAAM,EACNpB,OAAQ,GACRoI,SAAU,GACVnI,YAAa,GACb4I,cAAe,IFYX0E,SGpBgB,CACpBH,UAAW,WACXC,KAAM,gDACNjM,KAAM,EACNpB,OAAQ,GACRoI,SAAU,GACVnI,YAAa,GACb4I,cAAe,MCFJ2E,eAAgB,CAC3B7H,KNWW,WAAmC,IAAlC5E,EAAkCW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1B6K,GAAekB,EAAW/L,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAO6L,EAAOhG,MACV,IfdY,OeeR,IAAIiG,EOaY,SAACC,EAAYC,GACrC,IAAIC,EAAO,GACX,IAAI,IAAIrL,KAAOmL,EACVC,EAAOpL,GAAQqL,EAAKrL,GAAOoL,EAAOpL,GAAOqL,EAAKrL,GAAOmL,EAAWnL,GAErE,OAAOqL,EPlBgBC,CAAavB,GAAekB,EAAOpG,SAClD,OAAAvF,OAAAC,EAAA,EAAAD,CAAA,GAAUf,EAAU2M,GAExB,IfjBkB,aekBd,OAAA5L,OAAAC,EAAA,EAAAD,CAAA,GAAUf,EAAUwL,IAExB,QACI,OAAOxL,IMpBfwI,ILHW,WAAmC,IAAlCxI,EAAkCW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1B6K,GAAekB,EAAW/L,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAO6L,EAAOhG,MACV,IhBIuB,WgBFnB,OADAlB,QAAQqB,IAAI,sBAAuB6F,EAAOpG,SAC1CvF,OAAAC,EAAA,EAAAD,CAAA,GAAUf,EAAV,CAAiByI,cAAeiE,EAAOpG,UAE3C,QACI,OAAOtG,IKHf6E,OJgBW,WAAmC,IAAlC7E,EAAkCW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1B6K,GAAekB,EAAW/L,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAO6L,EAAOhG,MACV,IjBV2B,sBiBWvB,OAAA3F,OAAAC,EAAA,EAAAD,CAAA,GACOf,EADP,CAEIiH,YAAayF,EAAOpG,QACpByE,YAAa/K,EAAM6H,UAAU6E,EAAOpG,SAASgG,KAC7CjM,KAAML,EAAM6H,UAAU6E,EAAOpG,SAASjG,KACtCpB,OAAQe,EAAM6H,UAAU6E,EAAOpG,SAASrH,OACxCoI,SAAUrH,EAAM6H,UAAU6E,EAAOpG,SAASe,SAC1CnI,YAAac,EAAM6H,UAAU6E,EAAOpG,SAASpH,cAGrD,IjBpB6B,wBiBqBzB,OAAA6B,OAAAC,EAAA,EAAAD,CAAA,GACOf,EADP,CAEIiH,YAAayF,EAAOpG,QAAQW,YAC5B5G,KAAMqM,EAAOpG,QAAQjG,KACrBpB,OAAQyN,EAAOpG,QAAQrH,OACvBoI,SAAUqF,EAAOpG,QAAQe,SACzBnI,YAAawN,EAAOpG,QAAQpH,YAC5B2I,UAAU9G,OAAAC,EAAA,EAAAD,CAAA,GACHf,EAAM6H,UADJ9G,OAAAiM,GAAA,EAAAjM,CAAA,GAEJ2L,EAAOpG,QAAQW,YAFXlG,OAAAC,EAAA,EAAAD,CAAA,GAGEf,EAAM6H,UAAU6E,EAAOpG,QAAQW,aAHjC,CAID5G,KAAMqM,EAAOpG,QAAQjG,KACrBpB,OAAQyN,EAAOpG,QAAQrH,OACvBoI,SAAUqF,EAAOpG,QAAQe,SACzBnI,YAAawN,EAAOpG,QAAQpH,kBAK5C,IjBvC8B,yBiBwC1B,OAAA6B,OAAAC,EAAA,EAAAD,CAAA,GACOf,EADP,CAEI6H,UAAU9G,OAAAC,EAAA,EAAAD,CAAA,GACHf,EAAM6H,UADJ9G,OAAAiM,GAAA,EAAAjM,CAAA,GAEJ2L,EAAOpG,QAAQP,MAFXhF,OAAAC,EAAA,EAAAD,CAAA,GAGEf,EAAM6H,UAAU6E,EAAOpG,QAAQP,OAHjChF,OAAAiM,GAAA,EAAAjM,CAAA,GAIA2L,EAAOpG,QAAQC,UAAYmG,EAAOpG,QAAQjH,YAK3D,IjBvDmB,ciBwDf,OAAA0B,OAAAC,EAAA,EAAAD,CAAA,GACOf,EADP,CAEI6H,UAAU9G,OAAAiM,GAAA,EAAAjM,CAAA,GACL2L,EAAOpG,QAAUkF,GAAc3D,UAAU6E,EAAOpG,YAI7D,IjB9DwB,mBiB+DpB,OAAAvF,OAAAC,EAAA,EAAAD,CAAA,GAAUf,EAAUwL,IAExB,QACI,OAAOxL,0BM7EbiN,oLAEE,OACI/O,EAAAC,EAAAC,cAAC8O,GAAA/O,EAAD,KACID,EAAAC,EAAAC,cAAA,aAAQuD,KAAK1D,MAAMU,OACnBT,EAAAC,EAAAC,cAAA,QAAM+O,KAAK,cAAcC,QAASzL,KAAK1D,MAAMwN,cAC7CvN,EAAAC,EAAAC,cAAA,QAAM+O,KAAK,WAAWC,QAASzL,KAAK1D,MAAMyN,WAC1CxN,EAAAC,EAAAC,cAAA,QAAM+O,KAAK,UAAUC,QAASzL,KAAK1D,MAAM0N,UACzCzN,EAAAC,EAAAC,cAAA,QAAM+O,KAAK,SAASC,QAASzL,KAAK1D,MAAM2N,SACxC1N,EAAAC,EAAAC,cAAA,QAAMiP,SAAS,WAAWD,QAASzL,KAAK1D,MAAM4N,UAC9C3N,EAAAC,EAAAC,cAAA,QAAMiP,SAAS,WAAWD,QAASzL,KAAK1D,MAAM6N,UAC9C5N,EAAAC,EAAAC,cAAA,QAAMiP,SAAS,eAAeD,QAASzL,KAAK1D,MAAM+N,aAClD9N,EAAAC,EAAAC,cAAA,QAAMiP,SAAS,iBAAiBD,QAASzL,KAAK1D,MAAM8N,eAAiBpK,KAAK1D,MAAMwN,cAChFvN,EAAAC,EAAAC,cAAA,QAAMiP,SAAS,SAASD,QAASzL,KAAK1D,MAAMiO,OAASC,OAAOnN,SAASV,eAblE2D,aAuBJ0C,eAJS,SAAC3E,GACrB,OAAOe,OAAAC,EAAA,EAAAD,CAAA,GAAIf,EAAM4E,OAGmB,GAAzBD,CAA6BsI,ICfxBK,QACW,cAA7BnB,OAAOnN,SAASuO,UAEe,UAA7BpB,OAAOnN,SAASuO,UAEhBpB,OAAOnN,SAASuO,SAAShO,MACvB,2DCLN,IAAMiO,GAAQC,YAAYC,GAAS,GAAIC,YAAgBC,MAEvDC,IAASC,OACL5P,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAUP,MAAOA,IACbtP,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,KACIjL,EAAAC,EAAAC,cAAC4P,GAAD,MACA9P,EAAAC,EAAAC,cAAC6P,GAAD,QAGVjK,SAASkK,eAAe,SD2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlI,KAAK,SAAAmI,GACjCA,EAAaC","file":"static/js/main.4e86e971.chunk.js","sourcesContent":["import React from 'react';\n\nconst TileHeroLink = (props) => {\n    return(\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-auto mr-auto ml-auto tile tile-hero-link border-all rounded\">\n          <a href={props.link || '#'} className=\"tile-link\" target={props.target || \"_blank\"}>\n            <div className=\"tile-hero\">\n              <img src={props.src || 'http://www.fillmurray.com/300/200'} alt={props.title || 'Content Unavailable'}/>\n            </div>\n            <div className=\"tile-info\">\n              <div className=\"tile-title\">{props.title || 'Content Unavailable'}</div>\n              <div className=\"tile-details\">\n                {props.children || 'Nothing to see here.'}\n              </div>\n            </div>\n          </a>\n        </div>\n    );\n}\n\nexport default TileHeroLink;\n","import queryString from 'query-string';\n\n// Query string requires props to be able to access location.search\n// Pass in props as ctx when calling query-string related functions \n\nexport const getURLParam = (ctx, param, location) => {\n    if(!location) location = ctx.location.search;\n    const urlParams = queryString.parse(location);\n    return urlParams[param];\n}\n\nexport const updatedURLParamString = (ctx, param, value) => {\n    const url = ctx.match.url;\n    const urlParams = queryString.parse(ctx.location.search);\n    urlParams[param] = value;\n    let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n    return pathWithParams;\n}\n\nexport const updateURLParams = (ctx, param, value) => {\n    const pathWithParams = updatedURLParamString(ctx, param, value);\n    ctx.history.push(pathWithParams);\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { updateURLParams, getURLParam } from \"../utils/url\";\n\nclass Pagination extends Component {\n    state = {\n        currPage: 1,\n        MAX_PAGES: 3,\n        LAST_PAGE: null\n    }\n\n    updatePage = (page) => {\n        switch(page){\n            case '-1':\n                let dec = this.state.currPage - 1;\n                if(dec < 1) dec = 1;\n                this.handlePageUpdate(dec);\n                break;\n            case '+1':\n                let inc = this.state.currPage + 1;\n                this.handlePageUpdate(inc);\n                break;\n            default:\n                this.handlePageUpdate(page);\n                break;\n        }\n    }\n\n    handlePageUpdate = (page, INITIAL = false) => {\n        this.setState({\n            ...this.state,\n            currPage: parseInt(page)\n        }, () => {\n            updateURLParams(this.props, \"page\", parseInt(page));\n            // INITIAL flag was added to prevent unintentional callback on page load\n            if(!INITIAL && this.props.onPageUpdate) this.props.onPageUpdate();\n        });\n    }\n\n    dynamicPageButtons = () => {\n        const buttons = []\n        for(var i = 0; i < this.state.MAX_PAGES; i++){\n            let index = this.state.currPage + i;\n            let classNames = `page-item ${(index === this.state.currPage) ? 'active' : ''}`;\n            buttons.push(\n                <li className={`${classNames}`} key={index}>\n                  <span\n                    className=\"page-link\"\n                    onClick={() => { this.updatePage(index); }}\n                    page={index}\n                  >{index}</span>\n                </li>\n            );\n        }\n        return buttons;\n    }\n\n    componentDidMount(){\n        // Accept current page as a prop otherwise grab it as a url param\n        let page = this.props.page || getURLParam(this.props, 'page') || 1;\n        this.setState({ ...this.state, currPage: parseInt(page) });\n\n        // Allow setting a limit on the number of pages\n        if(this.props.lastPage && (this.props.currPage <= this.props.lastPage)){\n            this.setState({...this.state, LAST_PAGE: parseInt(this.props.lastPage)});\n        }\n    }\n\n    render() {\n        return (\n          <nav className=\"pagination-holder\" aria-label={this.props.ariaLabel}>\n            <ul className=\"pagination\">\n              {(this.state.currPage > 1) ?\n                  <li className=\"page-item\" key=\"-1\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('-1'); }}\n                      page=\"-1\"\n                      rel=\"previous\"\n                    >&laquo;</span>\n                  </li>\n              : null}\n\n              {this.dynamicPageButtons()}\n\n              {(!this.state.LAST_PAGE || (this.state.currPage + (this.state.MAX_PAGES - 1) < this.state.LAST_PAGE)) ?\n                  <li className=\"page-item\" key=\"+1\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('+1'); }}\n                      page=\"+1\"\n                      rel=\"next\"\n                    >&raquo;</span>\n                  </li>\n              : null}\n            </ul>\n          </nav>\n        );\n    }\n}\n\nexport default withRouter(Pagination);\n","export const randomNumber = (min, max) => {\n    min = min || 0;\n    max = max || 10;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const decimal = (num) => {\n    let rounded = Math.ceil(num * 10) / 10;\n\n    if((rounded % 1) > 0){\n        return rounded;\n    }\n    else{\n        // Strip .0 for even numbers\n        return parseInt(rounded);\n    }\n}\n\nexport const abbvNumber = (num) => {\n    let div_k = parseFloat(num / 1000);\n    let div_m = parseFloat(div_k / 1000);\n    let div_b = parseFloat(div_m / 1000);\n    let div_t = parseFloat(div_b / 1000);\n\n    if(div_k < 1000){\n        return decimal(div_k) + 'K';\n    }\n    else if(div_m < 1000){\n        return decimal(div_m) + 'M';\n    }\n    else if(div_b < 1000){\n        return decimal(div_b) + 'B';\n    }\n    else{\n        return decimal(div_t) + 'T';\n    }\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport TileHeroLink from '../modules/TileHeroLink';\nimport Pagination from '../components/Pagination';\nimport {abbvNumber} from '../utils/misc';\nimport { getURLParam } from \"../utils/url\";\n\nconst Feed = (props) => {\n    const renderFeed = (results) => {\n        let items = [];\n        for(var i = 0; i < 12 && i < results.videos.length; i++){\n            let video = results.videos[i];\n            items.push(\n                <TileHeroLink\n                    title={video['title']}\n                    src={video['default_thumb']}\n                    link={video['url']}\n                    key={`${video['id']}_${i}`}\n                >\n                    <div className=\"row\">\n                        <div className=\"single-detail col\">\n                            {abbvNumber(video['views'])} Views &middot; <span className=\"success\">{parseFloat(video['rating']).toFixed(1)}%</span>\n                    </div>\n                        <div className=\"single-detail col\">{video['duration']}</div>\n                    </div>\n                </TileHeroLink>\n            );\n        }\n        return items;\n    }\n\n    return(\n        <>\n            {(props.results) ? renderFeed(props.results) : null}\n\n            {(props.results) ?\n                <center className=\"clear\">\n                    <Pagination\n                        ariaLabel=\"footer-pagination\"\n                        onPageUpdate={() => {}}\n                        page={getURLParam(props, 'page')}\n                        lastPage=\"10\"\n                    />\n                </center>\n            : null}\n        </>\n    );\n}\n\nexport default withRouter(Feed);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { isMobile } from \"react-device-detect\";\nimport SearchField from \"react-search-field\";\nimport { withRouter } from \"react-router-dom\";\nimport {updatedURLParamString} from \"../utils/url\";\n\nclass Search extends Component {\n    state = {\n        active: false,\n        classString: 'search-bar',\n        searchString: ''\n    }\n\n    // Control visibility of search field\n    classString = () => {\n        return `search-bar ${(this.state.active) ? 'active' : 'hidden'}`;\n    }\n\n    // Handle input typing\n    updateSearch = (value) => {\n        this.setState({...this.state, searchString: value});\n    }\n\n    isActive = () => {\n        // Web is always active, mobile toggles\n        if(!isMobile){ return true; }\n        else{ return this.state.active; }\n    }\n\n    // On click of the search icon\n    onSearchClick = (value) => {\n        if(this.state.active){\n            if(this.state.searchString) this.submit();\n\n            // Toggle search field visibility off for mobile after submit\n            if(isMobile) this.setState({...this.state, active: false});\n        }\n        else{\n            // Toggle search field visibility for mobile\n            this.setState({\n                ...this.state,\n                active: true\n            }, () => {document.getElementsByClassName('react-search-field-input')[0].focus()});\n        }\n    }\n\n    // Preserve the active path and then update the query param\n    preservePathUpdateParams = () => {\n        this.props.match.url = this.props.location.pathname;\n        this.props.history.push(updatedURLParamString(this.props, 'q', this.state.searchString));\n    }\n\n    submit = () => {\n        this.preservePathUpdateParams();\n\n        // Clear field and toggle search bar\n        this.setState({\n            ...this.state,\n            searchString: '',\n            active: (isMobile) ? false : true\n        });\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            active: this.isActive()\n        }, this.setState({\n            ...this.state,\n            classString: this.classString()\n        }));\n    }\n\n    render(){\n        return(\n            <SearchField\n              placeholder=\"Search...\"\n              onChange={(value, event) => { this.updateSearch(value) }}\n              onEnter={(value, event) => { this.submit() }}\n              onSearchClick={(value, event) => { this.onSearchClick(value) }}\n              searchText={this.state.searchString}\n              classNames={this.classString()}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        meta: state.meta,\n        brands: state.brands\n    };\n}\n\nexport default connect(mapStateToProps, {})(withRouter(Search));\n","import React from 'react';\nimport Search from '../components/Search';\n\nconst NotFound = () => {\n    return(\n        <div className=\"not-found\">\n            <h1 className=\"brand-color\">Oops!</h1>\n            <div>Looks like we couldn't find what you were looking for.</div>\n            <div className=\"try-search\"><Search /></div>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\n// https://reactjs.org/docs/error-boundaries.html\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.warn('ErrorBoundary Error:', error);\n        console.warn('ErrorBoundary Info:', info);\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.errorContent;\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport {getURLParam} from '../utils/url';\n\nconst ResultsBanner = (props) => {\n    if(getURLParam(props, 'q')){\n        return(\n            <div className=\"results-banner\">\n                Displaying Results for: <span>{getURLParam(props, 'q')}</span>\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default withRouter(ResultsBanner);\n","// Handle all the definitions for\n// All of the different types of dispatches\n// Prevents typos and throws more intelligent errors\n\n// Meta\nexport const META = 'meta';\nexport const RESET_META = 'reset_meta';\n\n// API\nexport const ENDPOINT = process.env.REACT_APP_DEFAULT_ENDPOINT;\nexport const SEARCH_BY_QUERY = 'get_data';\n\n// BRANDS\nexport const DEFAULT_BRAND = process.env.REACT_APP_DEFAULT_BRAND;\nexport const RESET_BRAND = 'reset_brand';\nexport const RESET_ALL_BRANDS = 'reset_all_brands';\nexport const UPDATE_ACTIVE_BRAND = 'update_active_brand';\nexport const UPDATE_ALL_BRAND_INFO = 'update_all_brand_info';\nexport const UPDATE_BRAND_ATTRIBUTE = 'update_brand_attribute';\n","import {ENDPOINT, SEARCH_BY_QUERY, UPDATE_BRAND_ATTRIBUTE} from \"./types\";\n\n// Call API with full query string\n// REQUIRED: q= (search)\n// Optional: category, brand, page\nexport const searchByQuery = (brand, queryString) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}${queryString}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Test function, will need to update once the real endpoint is built\nexport const searchByCategory = (brand, queryString) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}${queryString}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Test function, will need to update once the real endpoint is built\nexport const searchByBrandDefault = (brand) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Call our service to get a list of categories for the active brand\nexport const getCategoriesByBrand = (brand) => {\n    const _endpoint = `${ENDPOINT}/${brand}/categories`;\n    return dispatch => {\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                let payload = {brand: brand, attribute: 'allCategories', value: res.categories}\n\n                // If an empty response is returned, return an array with an empty object\n                // Prevent errors later on in the event chain\n                if(!res.categories[0] || Object.keys(res.categories[0]).length === 0){\n                    payload['value'] = [{}];\n                }\n                dispatch({type: UPDATE_BRAND_ATTRIBUTE, payload: payload});\n            })\n            .catch(err => {\n                console.log( `Error fetching categories for ${brand}:`, err );\n\n                // If there is an error, return an array with an empty object\n                // Prevent further errors later on in the event chain\n                let payload = {brand: brand, attribute: 'allCategories', value: [{}]};\n                dispatch({type: UPDATE_BRAND_ATTRIBUTE, payload: payload});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport Feed from '../pages/Feed';\nimport NotFound from '../pages/NotFound';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport ResultsBanner from '../components/ResultsBanner';\nimport {getURLParam} from \"../utils/url\";\nimport {\n    updateAllBrandInfo,\n    updateActiveBrand,\n    updateBrandAttribute,\n    getCategoriesByBrand,\n    searchByQuery,\n    searchByCategory,\n    searchByBrandDefault\n} from '../actions';\nimport {DEFAULT_BRAND} from '../actions/types';\n\nclass Routing extends Component {\n    // Listen for changes in the URL params and update the state accordingly\n    onRouteChanged = () =>{\n        let {match, location} = this.props;\n        let urlParams = queryString.parse(this.props.location.search);\n        let activeBrand = match.params.brand || location.pathname.split('/')[1] || DEFAULT_BRAND;\n\n        // Update the global brand info\n        this.props.updateAllBrandInfo({\n            activeBrand: activeBrand,\n            page: urlParams['page'] || 1,\n            search: urlParams['q'] || '',\n            category: urlParams['category'] || '',\n            queryString: location.search || ''\n        });\n\n        // Update the active brand\n        this.props.updateActiveBrand(activeBrand);\n\n        // Check if we need to fetch the categories list\n        this.handleCategories(activeBrand);\n\n        // Wait until all brand info has been updated, then\n        // Search for results to populate the feed\n        this.delegateSearch(activeBrand, urlParams['q'], urlParams['category']);\n    }\n\n    // Decide what kind of search to perform based on url params\n    delegateSearch = (brand, query, category) => {\n        brand = brand || this.props.brands.activeBrand;\n        query = query || getURLParam(this.props, 'q');\n        category = category || getURLParam(this.props, 'category');\n\n        if(query){\n            console.log('search by query: ', brand, this.props.location.search);\n            // Search by brand and full query string\n            // (May also include category and page)\n            this.props.searchByQuery(brand, this.props.location.search);\n        }\n        else if(category){\n            console.log('search by category: ', brand, category);\n            // Search by brand and category\n            this.props.searchByCategory(brand, category);\n        }\n        else{\n            console.log('search by brand default: ', brand);\n            // If no results exist in state then\n            // call the API and get default search\n            // results by brand\n            this.props.searchByBrandDefault(brand);\n        }\n    }\n\n    // Fetch a list of categories to search based on brand\n    handleCategories = (brand) => {\n        brand = brand || this.props.providers[this.props.activeBrand];\n        let categories = brand.allCategories;\n\n        // If there are no categories, fetch and populate\n        if(!categories || categories.length === 0){\n            this.props.getCategoriesByBrand(brand);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.onRouteChanged();\n        }\n    }\n\n    componentDidMount(){\n        console.log('Router props: ', this.props);\n        this.onRouteChanged();\n    }\n\n    render(){\n        return(\n            <Switch>\n                <Route exact path=\"/\" key=\"homeFeed\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <ResultsBanner />\n                            <Feed results={this.props.api.searchResults} />\n                        </ErrorBoundary>\n                    );\n                }} />\n            <Route exact path=\"/404\" key=\"404page\" component={NotFound} />\n                <Route path=\"/:brand\" key=\"brand\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <ResultsBanner />\n                            <Feed results={this.props.api.searchResults} />\n                        </ErrorBoundary>\n                    );\n                }} />\n            <Route key=\"404fallback\" component={NotFound} />\n            </Switch>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        brands: state.brands,\n        api: state.api\n    };\n}\n\nexport default connect(mapStateToProps, {\n    updateAllBrandInfo,\n    updateActiveBrand,\n    updateBrandAttribute,\n    getCategoriesByBrand,\n    searchByQuery,\n    searchByCategory,\n    searchByBrandDefault\n})(withRouter(Routing));\n","import {\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO,\n    UPDATE_BRAND_ATTRIBUTE\n} from './types';\n\nexport const resetBrand = (brand) => {\n    if(brand === 'all'){\n        return {type: RESET_ALL_BRANDS}\n    }\n    return {type: RESET_BRAND, payload: brand}\n}\n\nexport const updateActiveBrand = (brand) => {\n    return {type: UPDATE_ACTIVE_BRAND, payload: brand}\n}\n\nexport const updateAllBrandInfo = (infoObj) => {\n    return {type: UPDATE_ALL_BRAND_INFO, payload: infoObj}\n}\n\nexport const updateBrandAttribute = (brand, attribute, value) => {\n    return {type: UPDATE_BRAND_ATTRIBUTE, payload: {brand, attribute, value}}\n}\n","import React from 'react';\n\nconst Logo = () => {\n    return(\n        <a className=\"home-button secondary\" href=\"/\">\n            <div id=\"logo\"> Video<span className=\"brand-color\">Feed</span> </div>\n        </a>\n    );\n}\n\nexport default Logo;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nconst BrandsList = () => {\n    const renderLinks = () => {\n        let links = [];\n        let brands = require('../data/sample/brands.json');\n\n        for(let b in brands['brands']){\n            let brand = brands['brands'][b].brand.toLowerCase();\n            links.push(\n                <NavLink to={`/${brand}`} className=\"nav-link border-bottom truncate\" activeClassName=\"active\" key={b}>{brand}</NavLink>\n            );\n        }\n\n        return links;\n    }\n\n    return(\n        <ul className=\"navbar-nav\">{}\n            {renderLinks()}\n        </ul>\n    );\n}\n\nexport default BrandsList;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n// import { NavLink } from \"react-router-dom\";\nimport {getURLParam, updatedURLParamString} from '../utils/url';\n\nconst ParamLink = (props) => {\n    // Get the url's value of this ParamLink's param (used for active class)\n    const urlParam = getURLParam(props, props.param);\n\n    // Preserve the active path and then update the query param\n    const preservePathUpdateParams = () => {\n        props.match.url = props.location.pathname;\n        props.history.push(updatedURLParamString(props, props.param, props.value));\n    }\n\n    /*\n        // Results in youtube?/?caregory=test&page=1&q=query\n        // Beacause of updatedURLParamString()\n        <NavLink\n            to={{\n                pathname: props.location.pathname,\n                search: updatedURLParamString(props, props.param, props.value)\n            }}\n            className={props.className}\n            activeClassName={props.activeClassName}\n        >\n            {props.children}\n        </NavLink>\n    */\n\n    return(\n        <div\n            className={(urlParam === props.value) ? `${props.className} ${props.activeClassName}` : props.className}\n            onClick={() => {preservePathUpdateParams()}}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default withRouter(ParamLink);\n","import React from 'react';\nimport ParamLink from \"./ParamLink\";\n\nconst CategoriesList = (props) => {\n    const renderLinks = () => {\n        let links = [];\n\n        for(let c in props.categories){\n            let category = props.categories[c].category.toLowerCase();\n            links.push(\n                <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" key={c} value={category}>{category}</ParamLink>\n            );\n        }\n\n        if(links.length === 0) links = <i style={{'fontSize': '12px'}}>No Categories Found.</i>;\n        return links;\n    }\n\n    return( <ul className=\"navbar-nav\"> {renderLinks()} </ul> );\n}\n\nexport default CategoriesList;\n","import React from 'react';\n\nconst CollapsiblePanel = ({id, title, children}) => {\n    return(\n        <div className=\"panel-group\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <div className=\"panel-title\">\n                <div className=\"nav-link truncate\" data-toggle=\"collapse\" href={`#${id}`}>\n                    {title}\n                </div>\n            </div>\n            </div>\n            <div id={id} className=\"panel-collapse collapse\">\n              <div className=\"panel-body\">{children}</div>\n            </div>\n          </div>\n      </div>\n    );\n}\n\nexport default CollapsiblePanel;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserView} from \"react-device-detect\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport BrandsList from \"./BrandsList\";\nimport CategoriesList from \"./CategoriesList\";\nimport CollapsiblePanel from \"./CollapsiblePanel\";\nimport { getCategoriesByBrand } from '../actions';\n\nclass NavItems extends Component {\n\n    render(){\n        return(\n            <>\n                <BrowserView>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item border-bottom\">\n                            <Search />\n                        </li>\n                    </ul>\n                </BrowserView>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item border-bottom\">\n                        <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"default\">\n                            Home Feed\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item border-bottom truncate\">\n                        <CollapsiblePanel\n                            id=\"brands-accordion\"\n                            title=\"Brands\"\n                        >\n                            <BrandsList />\n                        </CollapsiblePanel>\n                    </li>\n                    <li className=\"nav-item border-bottom truncate\">\n                        <CollapsiblePanel\n                            id=\"categories-accordion\"\n                            title=\"Categories\"\n                        >\n                            <CategoriesList categories={\n                                this.props.providers[this.props.activeBrand].allCategories\n                            }/>\n                        </CollapsiblePanel>\n                    </li>\n                </ul>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{ ...state.brands};\n}\n\nexport default connect(mapStateToProps, {getCategoriesByBrand})(withRouter(NavItems));\n","import React, {Component} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Logo from \"./Logo\";\nimport NavItems from './NavItems';\n\nclass MobileNav extends Component {\n    state ={isOpen: false}\n\n    toggleOpen = (force) => {\n        if(typeof force !== 'undefined'){\n            this.setState({...this.state, isOpen: force});\n        }\n        else{\n            this.setState({...this.state, isOpen: !this.state.isOpen});\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.toggleOpen(false);\n        }\n    }\n\n    render(){\n        return (\n            <nav className=\"navbar\">\n\n                <Logo />\n\n                <button className=\"navbar-toggler border-top border-bottom over-5\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded={(this.state.isOpen) ? 'true' : 'false'} aria-label=\"Toggle navigation\" onClick={() => {this.toggleOpen()}}></button>\n\n                <div className={`${(this.state.isOpen) ? 'show' : 'collapse'} navbar-collapse`} id=\"navbarSupportedContent1\">\n                    <NavItems />\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(MobileNav);\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\nclass PartnerLogo extends Component {\n    render(){\n        return(\n            <div className=\"dynamic-partner-logo\">\n                <img\n                    id=\"partner-logo\"\n                    className={this.props.className}\n                    src={this.props.partnerLogo}\n                    alt={this.props.alt || this.props.activeBrand}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{ ...state.brands};\n}\n\nexport default connect(mapStateToProps, {})(withRouter(PartnerLogo));\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {MobileView, BrowserView} from \"react-device-detect\";\nimport Logo from \"../components/Logo\";\nimport MobileNav from \"../components/MobileNav\";\nimport Search from \"../components/Search\";\nimport PartnerLogo from \"../components/PartnerLogo\";\n\nconst Header = (props) => {\n    let brand = props.match.params.brand || props.location.pathname.split('/')[1];\n    return (\n        <header className=\"super container-fluid\">\n            <MobileView viewClassName=\"mobile-nav\">\n                <MobileNav />\n                <Search />\n            </MobileView>\n            <BrowserView>\n                <Logo />\n                {(brand) ? <PartnerLogo /> : <Search /> }\n            </BrowserView>\n\n        </header>\n    );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport NavItems from './NavItems';\n\nconst Nav = () => {\n    return(\n        <BrowserView viewClassName=\"siderail-nav nav-left col-lg-2 col-xl-2 float-left border-right\">\n            <nav className=\"navbar web-nav\">\n                <NavItems />\n            </nav>\n        </BrowserView>\n    );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Routing from \"./routes/Routing\";\nimport Header from \"./modules/Header\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        console.log('App props: ', this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"app clear\">\n              <Header />\n              <Nav />\n\n              <div className=\"container col-sm-12 col-md-12 col-lg-10 col-xl-10 float-right clear\">\n                <div className=\"feed-wrapper row col float-right\">\n                  <Routing />\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { META, RESET_META } from '../actions/types';\nimport { mergeObjects } from '../utils/objects';\n\nconst INITIAL_STATE = {\n    'title': 'VideoFeed | Clean React UI',\n    'description': 'Reuseable React & SASS based components',\n    'keywords': '',\n    'subject': '',\n    'robots': 'index,follow',\n    'ogTitle': 'VideoFeed',\n    'ogImage': '../../public/favicon.ico',\n    'ogDescription': 'Reuseable React & SASS based components',\n    'ogSiteName': 'VideoFeed',\n    'ogType': '',\n    'ogURL': window.location.href\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case META:\n            let metaData = mergeObjects(INITIAL_STATE, action.payload);\n            return{...state, ...metaData}\n\n        case RESET_META:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","import { SEARCH_BY_QUERY } from '../actions/types';\n\nconst INITIAL_STATE = {searchResults: null}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case SEARCH_BY_QUERY:\n            console.log('Got Search Results:', action.payload)\n            return{...state, searchResults: action.payload}\n\n        default:\n            return state;\n    }\n}\n","import {\n    DEFAULT_BRAND,\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO,\n    UPDATE_BRAND_ATTRIBUTE\n} from '../actions/types';\nimport * as brands from '../data/brand-defaults';\n\nconst INITIAL_STATE = {\n    activeBrand: DEFAULT_BRAND,\n    page: 1,\n    search: '',\n    category: '',\n    queryString: '',\n    partnerLogo: null,\n    providers: {\n        youtube: brands.youtube,\n        vimeo: brands.vimeo,\n        metacafe: brands.metacafe\n    }\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case UPDATE_ACTIVE_BRAND:\n            return{\n                ...state,\n                activeBrand: action.payload,\n                partnerLogo: state.providers[action.payload].logo,\n                page: state.providers[action.payload].page,\n                search: state.providers[action.payload].search,\n                category: state.providers[action.payload].category,\n                queryString: state.providers[action.payload].queryString\n            }\n\n        case UPDATE_ALL_BRAND_INFO:\n            return{\n                ...state,\n                activeBrand: action.payload.activeBrand,\n                page: action.payload.page,\n                search: action.payload.search,\n                category: action.payload.category,\n                queryString: action.payload.queryString,\n                providers: {\n                    ...state.providers,\n                    [action.payload.activeBrand]: {\n                        ...state.providers[action.payload.activeBrand],\n                        page: action.payload.page,\n                        search: action.payload.search,\n                        category: action.payload.category,\n                        queryString: action.payload.queryString\n                    }\n                }\n            }\n\n        case UPDATE_BRAND_ATTRIBUTE:\n            return{\n                ...state,\n                providers: {\n                    ...state.providers,\n                    [action.payload.brand]: {\n                        ...state.providers[action.payload.brand],\n                        [action.payload.attribute]: action.payload.value\n                    }\n                }\n            }\n\n        case RESET_BRAND:\n            return{\n                ...state,\n                providers: {\n                    [action.payload]: INITIAL_STATE.providers[action.payload]\n                }\n            }\n\n        case RESET_ALL_BRANDS:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","export const youtube = {\n    brandName: \"youtube\",\n    logo:\n        \"https://www.freeiconspng.com/uploads/youtube-logo-png-transparent-image-5.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const vimeo = {\n    brandName: \"vimeo\",\n    logo:\n        \"https://prowly-uploads.s3.eu-west-1.amazonaws.com/uploads/PressRoom/563/cover_photo/large_slack-imgs.com.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const metacafe = {\n    brandName: \"metacafe\",\n    logo: \"https://logonoid.com/images/metacafe-logo.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","import {combineReducers} from 'redux';\nimport MetaReducer from './MetaReducer';\nimport APIReducer from './APIReducer';\nimport BrandReducer from './BrandReducer';\n\nexport default combineReducers({\n    meta: MetaReducer,\n    api: APIReducer,\n    brands: BrandReducer\n});\n","// Grab a nested object by a given key and that key's value\nexport const getObjectByKeyVal = (arr, key, val) => {\n    var index = 0;\n    var r = arr.filter((obj, i) => {\n        if(obj[key] === val) index = i;\n        return obj[key] === val\n    })\n    return {[index]: r};\n}\n\nexport const getDeepObjectByKey = (obj, deepKey, val) => {\n    var result = null;\n    if(obj instanceof Array) {\n        for(var i = 0; i < obj.length; i++) {\n            result = getDeepObjectByKey(obj[i]);\n        }\n    }\n    else{\n        for(var prop in obj) {\n            if(prop === deepKey) {\n                if(val && obj[prop] === val) {\n                    return obj;\n                }\n                return obj;\n            }\n            if(obj[prop] instanceof Object || obj[prop] instanceof Array){\n                result = getDeepObjectByKey(obj[prop], deepKey);\n            }\n        }\n    }\n    return result;\n}\n\nexport const mergeObjects = (defaultObj, argObj) => {\n    let temp = {}\n    for(let key in defaultObj){\n        (argObj[key]) ? temp[key] = argObj[key] : temp[key] = defaultObj[key];\n    }\n    return temp;\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport MetaTags from 'react-meta-tags';\n\nclass Meta extends Component {\n    render(){\n        return(\n            <MetaTags>\n                <title>{this.props.title}</title>\n                <meta name=\"description\" content={this.props.description} />\n                <meta name=\"keywords\" content={this.props.keywords} />\n                <meta name=\"subject\" content={this.props.subject} />\n                <meta name=\"robots\" content={this.props.robots} />\n                <meta property=\"og:title\" content={this.props.ogTitle} />\n                <meta property=\"og:image\" content={this.props.ogImage} />\n                <meta property=\"og:site_name\" content={this.props.ogSiteName} />\n                <meta property=\"og:description\" content={this.props.ogDescription || this.props.description} />\n                <meta property=\"og:url\" content={this.props.ogURL || window.location.href} />\n            </MetaTags>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {...state.meta};\n}\n\nexport default connect(mapStateToProps, {})(Meta);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers'\nimport Meta from './components/Meta';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, {}, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Meta />\n            <App />\n        </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}