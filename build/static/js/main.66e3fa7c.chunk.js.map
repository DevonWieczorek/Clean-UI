{"version":3,"sources":["modules/TileHeroLink.js","helpers/url.js","components/Pagination.js","helpers/misc.js","pages/Feed.js","pages/NotFound.js","components/ErrorBoundary.js","actions/types.js","routes/Routing.js","actions/BrandActions.js","components/Logo.js","components/Search.js","actions/APIActions.js","components/ParamLink.js","components/CollapsiblePanel.js","components/NavItems.js","components/MobileNav.js","modules/Header.js","components/Nav.js","App.js","reducers/MetaReducer.js","reducers/APIReducer.js","reducers/BrandReducer.js","data/brand-defaults/youtube.js","data/brand-defaults/vimeo.js","data/brand-defaults/metacafe.js","reducers/index.js","helpers/objects.js","components/Meta.js","serviceWorker.js","index.js"],"names":["TileHeroLink","props","react_default","a","createElement","className","href","link","target","src","alt","title","children","getURLParam","ctx","param","location","search","queryString","parse","updatedURLParamString","value","url","match","urlParams","concat","stringify","updateURLParams","pathWithParams","history","push","Pagination","state","currPage","MAX_PAGES","LAST_PAGE","updatePage","page","dec","_this","handlePageUpdate","inc","INITIAL","arguments","length","undefined","setState","Object","objectSpread","parseInt","onPageUpdate","dynamicPageButtons","buttons","_loop","index","i","classNames","onClick","this","lastPage","_this2","aria-label","ariaLabel","Component","withRouter","decimal","num","rounded","Math","ceil","abbvNumber","div_k","parseFloat","div_m","div_b","div_t","Fragment","min","max","items","modules_TileHeroLink","floor","random","renderFeed","components_Pagination","NotFound","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","error","info","console","warn","errorContent","ENDPOINT","Routing","_this$props","updateAllBrandInfo","activeBrand","params","brand","pathname","split","category","prevProps","onRouteChanged","react_router","exact","path","key","component","components_ErrorBoundary","pages_NotFound","pages_Feed","connect","brands","infoObj","type","payload","Logo","id","Search","active","classString","searchString","updateSearch","isActive","isMobile","onSearchClick","submit","document","getElementsByClassName","focus","preservePathUpdateParams","getData","index_min_default","placeholder","onChange","event","onEnter","searchText","meta","dispatch","log","fetch","then","res","json","catch","err","urlParam","activeClassName","CollapsiblePanel","_ref","data-toggle","NavItems","dist","components_Search","react_router_dom","to","components_CollapsiblePanel","components_ParamLink","MobileNav","components_Logo","data-target","aria-controls","aria-expanded","components_NavItems","Header","viewClassName","components_MobileNav","Nav","App","updateURL","modules_Header","components_Nav","routes_Routing","INITIAL_STATE","description","keywords","subject","robots","ogTitle","ogImage","ogDescription","ogSiteName","ogType","ogURL","window","data","partnerLogo","providers","youtube","brandName","logo","vimeo","metacafe","combineReducers","action","metaData","defaultObj","argObj","temp","mergeObjects","api","defineProperty","Meta","lib_default","name","content","property","Boolean","hostname","store","createStore","reducer","applyMiddleware","ReduxThunk","ReactDOM","render","es","components_Meta","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66e3fa7c.chunk.js","sourcesContent":["import React from 'react';\n\nconst TileHeroLink = (props) => {\n    return(\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-auto mr-auto ml-auto tile tile-hero-link border-all rounded\">\n          <a href={props.link || '#'} className=\"tile-link\" target={props.target || \"_blank\"}>\n            <div className=\"tile-hero\">\n              <img src={props.src || 'http://www.fillmurray.com/300/200'} alt={props.title || 'Content Unavailable'}/>\n            </div>\n            <div className=\"tile-info\">\n              <div className=\"tile-title\">{props.title || 'Content Unavailable'}</div>\n              <div className=\"tile-details\">\n                {props.children || 'Nothing to see here.'}\n              </div>\n            </div>\n          </a>\n        </div>\n    );\n}\n\nexport default TileHeroLink;\n","import queryString from 'query-string';\n\nexport const getURLParam = (ctx, param, location) => {\n    if(!location) location = ctx.location.search;\n    const urlParams = queryString.parse(location);\n    return urlParams[param];\n}\n\nexport const updatedURLParamString = (ctx, param, value) => {\n    const url = ctx.match.url;\n    const urlParams = queryString.parse(ctx.location.search);\n    urlParams[param] = value;\n    let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n    return pathWithParams;\n}\n\nexport const updateURLParams = (ctx, param, value) => {\n    const pathWithParams = updatedURLParamString(ctx, param, value);\n    ctx.history.push(pathWithParams);\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { updateURLParams, getURLParam } from \"../helpers/url\";\n\nclass Pagination extends Component {\n    state = {\n        currPage: 1,\n        MAX_PAGES: 3,\n        LAST_PAGE: null\n    }\n\n    updatePage = (page) => {\n        switch(page){\n            case '-1':\n                let dec = this.state.currPage - 1;\n                if(dec < 1) dec = 1;\n                this.handlePageUpdate(dec);\n                break;\n            case '+1':\n                let inc = this.state.currPage + 1;\n                this.handlePageUpdate(inc);\n                break;\n            default:\n                this.handlePageUpdate(page);\n                break;\n        }\n    }\n\n    handlePageUpdate = (page, INITIAL = false) => {\n        this.setState({\n            ...this.state,\n            currPage: parseInt(page)\n        }, () => {\n            updateURLParams(this.props, \"page\", parseInt(page));\n            // INITIAL flag was added to prevent unintentional callback on page load\n            if(!INITIAL && this.props.onPageUpdate) this.props.onPageUpdate();\n        });\n    }\n\n    dynamicPageButtons = () => {\n        const buttons = []\n        for(var i = 0; i < this.state.MAX_PAGES; i++){\n            let index = this.state.currPage + i;\n            let classNames = `page-item ${(index === this.state.currPage) ? 'active' : ''}`;\n            buttons.push(\n                <li className={`${classNames}`}>\n                  <span\n                    className=\"page-link\"\n                    onClick={() => { this.updatePage(index); }}\n                    page={index}\n                  >{index}</span>\n                </li>\n            );\n        }\n        return buttons;\n    }\n\n    componentDidMount(){\n        // Accept current page as a prop otherwise grab it as a url param\n        let page = this.props.page || getURLParam(this.props, 'page') || 1;\n        this.setState({ ...this.state, currPage: parseInt(page) });\n\n        // Allow setting a limit on the number of pages\n        if(this.props.lastPage && (this.props.currPage <= this.props.lastPage)){\n            this.setState({...this.state, LAST_PAGE: parseInt(this.props.lastPage)});\n        }\n    }\n\n    render() {\n        return (\n          <nav className=\"pagination-holder\" aria-label={this.props.ariaLabel}>\n            <ul className=\"pagination\">\n              {(this.state.currPage > 1) ?\n                  <li className=\"page-item\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('-1'); }}\n                      page=\"-1\"\n                    >&laquo;</span>\n                  </li>\n              : null}\n\n              {this.dynamicPageButtons()}\n\n              {(!this.state.LAST_PAGE || (this.state.currPage + (this.state.MAX_PAGES - 1) < this.state.LAST_PAGE)) ?\n                  <li className=\"page-item\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('+1'); }}\n                      page=\"+1\"\n                    >&raquo;</span>\n                  </li>\n              : null}\n            </ul>\n          </nav>\n        );\n    }\n}\n\nexport default withRouter(Pagination);\n","export const randomNumber = (min, max) => {\n    min = min || 0;\n    max = max || 10;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const decimal = (num) => {\n    let rounded = Math.ceil(num * 10) / 10;\n\n    if((rounded % 1) > 0){\n        return rounded;\n    }\n    else{\n        // Strip .0 for even numbers\n        return parseInt(rounded);\n    }\n}\n\nexport const abbvNumber = (num) => {\n    let div_k = parseFloat(num / 1000);\n    let div_m = parseFloat(div_k / 1000);\n    let div_b = parseFloat(div_m / 1000);\n    let div_t = parseFloat(div_b / 1000);\n\n    if(div_k < 1000){\n        return decimal(div_k) + 'K';\n    }\n    else if(div_m < 1000){\n        return decimal(div_m) + 'M';\n    }\n    else if(div_b < 1000){\n        return decimal(div_b) + 'B';\n    }\n    else{\n        return decimal(div_t) + 'T';\n    }\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport TileHeroLink from '../modules/TileHeroLink';\nimport Pagination from '../components/Pagination';\nimport {randomNumber, abbvNumber} from '../helpers/misc';\nimport { getURLParam } from \"../helpers/url\";\n\nconst Feed = (props) => {\n    const renderFeed = () => {\n        let items = [];\n        for(var i = 0; i < 12; i++){\n            items.push(\n                <TileHeroLink\n                    title=\"Dynamic Title\"\n                    src=\"http://www.fillmurray.com/300/200\"\n                    link=\"#\"\n                >\n                    <div className=\"row\">\n                        <div className=\"single-detail col\">{abbvNumber(randomNumber(10000, 76526173))} Views &middot; <span className=\"success\">78.6%</span></div>\n                        <div className=\"single-detail col\">31:24</div>\n                    </div>\n                </TileHeroLink>\n            );\n        }\n        return items;\n    }\n\n    return(\n        <>\n            {renderFeed()}\n\n            <center className=\"clear\">\n                <Pagination\n                    ariaLabel=\"footer-pagination\"\n                    onPageUpdate={() => {}}\n                    page={getURLParam(props, 'page')}\n                    lastPage=\"10\"\n                />\n            </center>\n        </>\n    );\n}\n\nexport default withRouter(Feed);\n","import React from 'react';\n\nconst NotFound = () => {\n    return(\n        <div>\n            <h1 className=\"brand-color\">Oops!</h1>\n            <div>Looks like we couldn't find what you were looking for.</div>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\n// https://reactjs.org/docs/error-boundaries.html\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.warn('ErrorBoundary Error:', error);\n        console.warn('ErrorBoundary Info:', info);\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.errorContent;\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","// Handle all the definitions for\n// All of the different types of dispatches\n// Prevents typos and throws more intelligent errors\n\n// Meta\nexport const META = 'meta';\nexport const RESET_META = 'reset_meta';\n\n// API\nexport const ENDPOINT = 'https://videofeed-api-git-master.devonwieczorek93.now.sh/';\nexport const GET_DATA = 'get_data';\n\n// BRANDS\nexport const DEFAULT_BRAND = 'youtube';\nexport const RESET_BRAND = 'reset_brand';\nexport const RESET_ALL_BRANDS = 'reset_all_brands';\nexport const UPDATE_ACTIVE_BRAND = 'update_active_brand';\nexport const UPDATE_ALL_BRAND_INFO = 'update_all_brand_info';\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport Feed from '../pages/Feed';\nimport NotFound from '../pages/NotFound';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport {updateAllBrandInfo} from '../actions';\nimport {DEFAULT_BRAND} from '../actions/types';\n\nclass Routing extends Component {\n    // Listen for changes in the URL params and update the state accordingly \n    onRouteChanged(){\n        let {match, location} = this.props;\n        let urlParams = queryString.parse(this.props.location.search);\n\n        this.props.updateAllBrandInfo({\n            activeBrand: match.params.brand || location.pathname.split('/')[1] || DEFAULT_BRAND,\n            page: urlParams['page'] || 1,\n            search: urlParams['search'] || '',\n            category: urlParams['category'] || '',\n            queryString: location.search || ''\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.onRouteChanged();\n        }\n    }\n\n    componentDidMount(){\n        this.onRouteChanged();\n    }\n\n    render(){\n        return(\n            <Switch>\n                <Route exact path=\"/\" key=\"homeFeed\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <Feed />\n                        </ErrorBoundary>\n                    );\n                }} />\n                <Route path=\"/:brand\" key=\"brand\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <Feed />\n                        </ErrorBoundary>\n                    );\n                }} />\n                <Route key=\"404\" component={NotFound} />\n            </Switch>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{ ...state.brands};\n}\n\nexport default connect(mapStateToProps, {updateAllBrandInfo})(withRouter(Routing));\n","import {\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO\n} from './types';\n\nexport const resetBrand = (brand) => {\n    if(brand === 'all'){\n        return {type: RESET_ALL_BRANDS}\n    }\n    return {type: RESET_BRAND, payload: brand}\n}\n\nexport const updateActiveBrand = (brand) => {\n    return {type: UPDATE_ACTIVE_BRAND, payload: brand}\n}\n\nexport const updateAllBrandInfo = (infoObj) => {\n    return {type: UPDATE_ALL_BRAND_INFO, payload: infoObj}\n}\n","import React from 'react';\n\nconst Logo = () => {\n    return(\n        <a className=\"home-button secondary\" href=\"/\">\n            <div id=\"logo\"> Video<span className=\"brand-color\">Feed</span> </div>\n        </a>\n    );\n}\n\nexport default Logo;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { isMobile } from \"react-device-detect\";\nimport SearchField from \"react-search-field\";\nimport { withRouter } from \"react-router-dom\";\nimport {updatedURLParamString} from \"../helpers/url\";\nimport {getData} from \"../actions\";\n\nclass Search extends Component {\n    state = {\n        active: false,\n        classString: 'search-bar',\n        searchString: ''\n    }\n\n    // Control visibility of search field\n    classString = () => {\n        return `search-bar ${(this.state.active) ? 'active' : 'hidden'}`;\n    }\n\n    updateSearch = (value) => {\n        this.setState({...this.state, searchString: value});\n    }\n\n    isActive = () => {\n        // Web is always active, mobile toggles\n        if(!isMobile){ return true; }\n        else{ return this.state.active; }\n    }\n\n    onSearchClick = (value) => {\n        if(this.state.active){\n            if(this.state.searchString) this.submit();\n            if(isMobile) this.setState({...this.state, active: false});\n        }\n        else{\n            this.setState({\n                ...this.state,\n                active: true\n            }, () => {document.getElementsByClassName('react-search-field-input')[0].focus()});\n        }\n    }\n\n    // Preserve the active path and then update the query param\n    preservePathUpdateParams = () => {\n        this.props.match.url = this.props.location.pathname;\n        this.props.history.push(updatedURLParamString(this.props, 'q', this.state.searchString));\n    }\n\n    submit = () => {\n        this.preservePathUpdateParams();\n\n        // Clear field and toggle search bar\n        this.setState({\n            ...this.state,\n            searchString: '',\n            active: (isMobile) ? false : true\n        }, () => {\n            // Wait for URL to update then make the API call\n            this.props.getData(this.props.location.search);\n        });\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            active: this.isActive()\n        }, this.setState({\n            ...this.state,\n            classString: this.classString()\n        }));\n    }\n\n    render(){\n        return(\n            <SearchField\n              placeholder=\"Search...\"\n              onChange={(value, event) => { this.updateSearch(value) }}\n              onEnter={(value, event) => { this.submit() }}\n              onSearchClick={(value, event) => { this.onSearchClick(value) }}\n              searchText={this.state.searchString}\n              classNames={this.classString()}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {...state.meta};\n}\n\nexport default connect(mapStateToProps, { getData })(withRouter(Search));\n","import {ENDPOINT, GET_DATA} from \"./types\";\n\nexport const getData = queryString => {\n    return dispatch => {\n        console.log(`Calling ${ENDPOINT}${queryString}...`);\n        fetch(`${ENDPOINT}${queryString}`)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: GET_DATA, payload: res});\n            })\n            .catch(err => {\n                console.log(\n                    `There was an error getting data from ${ENDPOINT}${queryString}:`,\n                    err\n                );\n            });\n    };\n};\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n// import { NavLink } from \"react-router-dom\";\nimport {getURLParam, updatedURLParamString} from '../helpers/url';\n\nconst ParamLink = (props) => {\n    // Get the url's value of this ParamLink's param (used for active class)\n    const urlParam = getURLParam(props, props.param);\n\n    // Preserve the active path and then update the query param\n    const preservePathUpdateParams = () => {\n        props.match.url = props.location.pathname;\n        props.history.push(updatedURLParamString(props, props.param, props.value));\n    }\n\n    /*\n        // Results in youtube?/?caregory=test&page=1&q=query\n        // Beacause of updatedURLParamString()\n        <NavLink\n            to={{\n                pathname: props.location.pathname,\n                search: updatedURLParamString(props, props.param, props.value)\n            }}\n            className={props.className}\n            activeClassName={props.activeClassName}\n        >\n            {props.children}\n        </NavLink>\n    */\n\n    return(\n        <div\n            className={(urlParam === props.value) ? `${props.className} ${props.activeClassName}` : props.className}\n            onClick={() => {preservePathUpdateParams()}}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default withRouter(ParamLink);\n","import React from 'react';\n\nconst CollapsiblePanel = ({id, title, children}) => {\n    return(\n        <div className=\"panel-group\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <div className=\"panel-title\">\n                <div className=\"nav-link truncate\" data-toggle=\"collapse\" href={`#${id}`}>\n                    {title}\n                </div>\n            </div>\n            </div>\n            <div id={id} className=\"panel-collapse collapse\">\n              <div className=\"panel-body\">{children}</div>\n            </div>\n          </div>\n      </div>\n    );\n}\n\nexport default CollapsiblePanel;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport { NavLink } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport ParamLink from \"./ParamLink\";\nimport CollapsiblePanel from \"./CollapsiblePanel\";\n\nconst NavItems = () => {\n    return(\n        <>\n            <BrowserView>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item border-bottom active\">\n                        <Search />\n                    </li>\n                </ul>\n            </BrowserView>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item border-bottom active\">\n                    <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"active\">\n                        Home Feed\n                    </NavLink>\n                </li>\n                <li className=\"nav-item border-bottom truncate\">\n                    <CollapsiblePanel\n                        id=\"brands-accordion\"\n                        title=\"Brands\"\n                    >\n                        <ul className=\"navbar-nav\">\n                            <NavLink to=\"/youtube\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Youtube</NavLink>\n                            <NavLink to=\"/vimeo\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Vimeo</NavLink>\n                            <NavLink to=\"/metacafe\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Metacafe</NavLink>\n                        </ul>\n                    </CollapsiblePanel>\n                </li>\n                <li className=\"nav-item border-bottom truncate\">\n                    <CollapsiblePanel\n                        id=\"categories-accordion\"\n                        title=\"Categories\"\n                    >\n                        <ul className=\"navbar-nav\">\n                            <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" value=\"sports\">\n                                Sports\n                            </ParamLink>\n                            <ParamLink className=\"nav-link border-bottom truncate\"activeClassName=\"active\"  param=\"category\" value=\"comedy\">\n                                Comedy\n                            </ParamLink>\n                            <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" value=\"action\">\n                                Action\n                            </ParamLink>\n                            <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" value=\"live\">\n                                Live\n                            </ParamLink>\n                        </ul>\n                    </CollapsiblePanel>\n                </li>\n            </ul>\n        </>\n    );\n}\n\nexport default NavItems;\n","import React from 'react';\nimport Logo from \"./Logo\";\nimport NavItems from './NavItems';\n\nconst MobileNav = () => {\n    return (\n        <nav className=\"navbar\">\n\n            <Logo />\n\n            <button className=\"navbar-toggler border-top border-bottom\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent1\">\n                <NavItems />\n            </div>\n\n        </nav>\n    );\n}\n\nexport default MobileNav;\n","import React from \"react\";\nimport {MobileView, BrowserView} from \"react-device-detect\";\nimport Logo from \"../components/Logo\";\nimport MobileNav from \"../components/MobileNav\";\nimport Search from \"../components/Search\";\n\nconst Header = () => {\n    return (\n        <header className=\"super container-fluid\">\n            <MobileView viewClassName=\"mobile-nav\">\n                <MobileNav />\n            </MobileView>\n            <BrowserView>\n                <Logo />\n            </BrowserView>\n            <Search />\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport NavItems from './NavItems';\n\nconst Nav = () => {\n    return(\n        <BrowserView viewClassName=\"siderail-nav nav-left col-lg-2 col-xl-2 float-left border-right\">\n            <nav className=\"navbar web-nav\">\n                <NavItems />\n            </nav>\n        </BrowserView>\n    );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from 'query-string'\nimport Routing from \"./routes/Routing\";\nimport Header from \"./modules/Header\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n\n    getURLParam = (param) => {\n        const urlParams = queryString.parse(this.props.location.search);\n        return urlParams[param];\n    }\n\n    updateURLParams = (param, value, updateURL) => {\n        const url = this.props.match.url;\n        const urlParams = queryString.parse(this.props.location.search);\n        urlParams[param] = value;\n        let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n\n        if(updateURL){\n            this.props.history.push(pathWithParams);\n        }\n        else{\n            return pathWithParams;\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"app clear\">\n              <Header />\n              <Nav />\n\n              <div className=\"container col-sm-12 col-md-12 col-lg-10 col-xl-10 float-right clear\">\n                <div className=\"feed-wrapper row col float-right\">\n                  <Routing />\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { META, RESET_META } from '../actions/types';\nimport { mergeObjects } from '../helpers/objects';\n\nconst INITIAL_STATE = {\n    'title': 'VideoFeed | Clean React UI',\n    'description': 'Reuseable React & SASS based components',\n    'keywords': '',\n    'subject': '',\n    'robots': 'index,follow',\n    'ogTitle': 'VideoFeed',\n    'ogImage': '../../public/favicon.ico',\n    'ogDescription': 'Reuseable React & SASS based components',\n    'ogSiteName': 'VideoFeed',\n    'ogType': '',\n    'ogURL': window.location.href\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case META:\n            let metaData = mergeObjects(INITIAL_STATE, action.payload);\n            return{...state, ...metaData}\n\n        case RESET_META:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","import { GET_DATA } from '../actions/types';\n\nconst INITIAL_STATE = {data: null}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case GET_DATA:\n            console.log('Got Data:', action.payload)\n            return{...state, data: action.payload}\n\n        default:\n            return state;\n    }\n}\n","import {\n    DEFAULT_BRAND,\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO\n} from '../actions/types';\nimport * as brands from '../data/brand-defaults';\n\nconst INITIAL_STATE = {\n    activeBrand: DEFAULT_BRAND,\n    page: 1,\n    search: '',\n    category: '',\n    queryString: '',\n    partnerLogo: null,\n    providers: {\n        youtube: brands.youtube,\n        vimeo: brands.vimeo,\n        metacafe: brands.metacafe\n    }\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case UPDATE_ACTIVE_BRAND:\n            return{\n                ...state,\n                activeBrand: action.payload,\n                partnerLogo: state.providers[action.payload].logo,\n                page: state.providers[action.payload].page,\n                search: state.providers[action.payload].search,\n                category: state.providers[action.payload].category,\n                queryString: state.providers[action.payload].queryString\n            }\n\n        case UPDATE_ALL_BRAND_INFO:\n            return{\n                ...state,\n                activeBrand: action.payload.activeBrand,\n                page: action.payload.page,\n                search: action.payload.search,\n                category: action.payload.category,\n                queryString: action.payload.queryString,\n                providers: {\n                    ...state.providers,\n                    [action.payload.activeBrand]: {\n                        ...state.providers[action.payload.activeBrand],\n                        page: action.payload.page,\n                        search: action.payload.search,\n                        category: action.payload.category,\n                        queryString: action.payload.queryString\n                    }\n                }\n            }\n\n        case RESET_BRAND:\n            return{\n                ...state,\n                providers: {\n                    [action.payload]: INITIAL_STATE.providers[action.payload]\n                }\n            }\n\n        case RESET_ALL_BRANDS:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","export const youtube = {\n    brandName: \"youtube\",\n    logo:\n        \"https://www.freeiconspng.com/uploads/youtube-logo-png-transparent-image-5.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\"\n};\n","export const vimeo = {\n    brandName: \"vimeo\",\n    logo:\n        \"https://prowly-uploads.s3.eu-west-1.amazonaws.com/uploads/PressRoom/563/cover_photo/large_slack-imgs.com.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\"\n};\n","export const metacafe = {\n    brandName: \"metacafe\",\n    logo: \"https://logonoid.com/images/metacafe-logo.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\"\n};\n","import {combineReducers} from 'redux';\nimport MetaReducer from './MetaReducer';\nimport APIReducer from './APIReducer';\nimport BrandReducer from './BrandReducer';\n\nexport default combineReducers({\n    meta: MetaReducer,\n    api: APIReducer,\n    brands: BrandReducer\n});\n","// Grab a nested object by a given key and that key's value\nexport const getObjectByKeyVal = (arr, key, val) => {\n    var index = 0;\n    var r = arr.filter((obj, i) => {\n        if(obj[key] === val) index = i;\n        return obj[key] === val\n    })\n    return {[index]: r};\n}\n\nexport const getDeepObjectByKey = (obj, deepKey, val) => {\n    var result = null;\n    if(obj instanceof Array) {\n        for(var i = 0; i < obj.length; i++) {\n            result = getDeepObjectByKey(obj[i]);\n        }\n    }\n    else{\n        for(var prop in obj) {\n            if(prop === deepKey) {\n                if(val && obj[prop] === val) {\n                    return obj;\n                }\n                return obj;\n            }\n            if(obj[prop] instanceof Object || obj[prop] instanceof Array){\n                result = getDeepObjectByKey(obj[prop], deepKey);\n            }\n        }\n    }\n    return result;\n}\n\nexport const mergeObjects = (defaultObj, argObj) => {\n    let temp = {}\n    for(let key in defaultObj){\n        (argObj[key]) ? temp[key] = argObj[key] : temp[key] = defaultObj[key];\n    }\n    return temp;\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport MetaTags from 'react-meta-tags';\n\nclass Meta extends Component {\n    render(){\n        return(\n            <MetaTags>\n                <title>{this.props.title}</title>\n                <meta name=\"description\" content={this.props.description} />\n                <meta name=\"keywords\" content={this.props.keywords} />\n                <meta name=\"subject\" content={this.props.subject} />\n                <meta name=\"robots\" content={this.props.robots} />\n                <meta property=\"og:title\" content={this.props.ogTitle} />\n                <meta property=\"og:image\" content={this.props.ogImage} />\n                <meta property=\"og:site_name\" content={this.props.ogSiteName} />\n                <meta property=\"og:description\" content={this.props.ogDescription || this.props.description} />\n                <meta property=\"og:url\" content={this.props.ogURL || window.location.href} />\n            </MetaTags>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {...state.meta};\n}\n\nexport default connect(mapStateToProps, {})(Meta);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers'\nimport Meta from './components/Meta';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, {}, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Meta />\n            <App />\n        </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}