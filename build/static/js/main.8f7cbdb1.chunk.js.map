{"version":3,"sources":["modules/TileHeroLink.js","components/Pagination.js","pages/Feed.js","pages/NotFound.js","routes/Routing.js","components/Logo.js","components/Search.js","components/CollapsiblePanel.js","components/NavItems.js","components/MobileNav.js","modules/Header.js","components/Nav.js","App.js","reducers/MetaReducer.js","reducers/index.js","actions/types.js","components/Meta.js","serviceWorker.js","index.js"],"names":["TileHeroLink","props","react_default","a","createElement","className","href","link","target","src","alt","title","children","Pagination","aria-label","Feed","Fragment","items","i","push","modules_TileHeroLink","renderFeed","components_Pagination","NotFound","Routing","react_router","exact","path","key","component","Logo","id","Search","state","active","classString","searchString","concat","_this","updateSearch","value","setState","Object","objectSpread","isActive","isMobile","onSearchClick","console","log","submit","document","getElementsByClassName","focus","updateURLParams","param","updateURL","url","match","urlParams","queryString","parse","location","search","pathWithParams","stringify","history","this","_this2","index_min_default","placeholder","onChange","event","onEnter","searchText","classNames","Component","withRouter","CollapsiblePanel","_ref","data-toggle","NavItems","dist","components_Search","react_router_dom","to","activeClassName","components_CollapsiblePanel","MobileNav","components_Logo","type","data-target","aria-controls","aria-expanded","components_NavItems","Header","viewClassName","components_MobileNav","Nav","App","getURLParam","modules_Header","components_Nav","routes_Routing","INITIAL_STATE","combineReducers","meta","arguments","length","undefined","action","payload","Meta","lib_default","name","content","property","Boolean","window","hostname","store","createStore","reducer","applyMiddleware","ReduxThunk","ReactDOM","render","es","components_Meta","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f7cbdb1.chunk.js","sourcesContent":["import React from 'react';\n\nconst TileHeroLink = (props) => {\n    return(\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-auto mr-auto ml-auto tile tile-hero-link border-all rounded\">\n          <a href={props.link || '#'} className=\"tile-link\" target={props.target || \"_blank\"}>\n            <div className=\"tile-hero\">\n              <img src={props.src || 'http://www.fillmurray.com/300/200'} alt={props.title || 'Content Unavailable'}/>\n            </div>\n            <div className=\"tile-info\">\n              <div className=\"tile-title\">{props.title || 'Content Unavailable'}</div>\n              <div className=\"tile-details\">\n                {props.children || 'Nothing to see here.'}\n              </div>\n            </div>\n          </a>\n        </div>\n    );\n}\n\nexport default TileHeroLink;\n","import React from 'react';\n\nconst Pagination = () => {\n    return(\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination\">\n            <li className=\"page-item\"><a className=\"page-link\" href=\"#\">&laquo;</a></li>\n            <li className=\"active page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n            <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n            <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n            <li className=\"page-item\"><a className=\"page-link\" href=\"#\">&raquo;</a></li>\n          </ul>\n        </nav>\n    );\n}\n\nexport default Pagination;\n","import React from 'react';\nimport TileHeroLink from '../modules/TileHeroLink';\nimport Pagination from '../components/Pagination';\n\nconst Feed = () => {\n    const renderFeed = () => {\n        let items = [];\n        for(var i = 0; i < 12; i++){\n            items.push(\n                <TileHeroLink\n                    title=\"Dynamic Title\"\n                    src=\"http://www.fillmurray.com/300/200\"\n                    link=\"#\"\n                >\n                    <div className=\"row\">\n                        <div className=\"single-detail col\">21.3k Views &middot; <span className=\"success\">78.6%</span></div>\n                        <div className=\"single-detail col\">31:24</div>\n                    </div>\n                </TileHeroLink>\n            );\n        }\n        return items;\n    }\n\n    return(\n        <>\n            {renderFeed()}\n\n            <center className=\"clear\">\n                <Pagination />\n            </center>\n        </>\n    );\n}\n\nexport default Feed;\n","import React from 'react';\n\nconst NotFound = () => {\n    return(\n        <div>\n            <h1 className=\"brand-color\">Oops!</h1>\n            <div>Looks like we couldn't find what you were looking for.</div>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport Feed from '../pages/Feed';\nimport NotFound from '../pages/NotFound';\nimport { Route, Switch } from \"react-router-dom\";\n\nconst Routing = () => {\n    return(\n        <Switch>\n            <Route exact path=\"/\" key=\"/-Feed\" component={Feed} />\n            <Route path=\"/:subdir\" key=\"/:subdir-Feed\"component={Feed} />\n            <Route key=\"404\" component={NotFound} />\n        </Switch>\n    );\n}\n\nexport default Routing;\n","import React from 'react';\n\nconst Logo = () => {\n    return(\n        <a className=\"home-button secondary\" href=\"#\">\n            <div id=\"logo\"> Video<span className=\"brand-color\">Feed</span> </div>\n        </a>\n    );\n}\n\nexport default Logo;\n","import React, {Component} from 'react';\nimport { isMobile } from \"react-device-detect\";\nimport SearchField from \"react-search-field\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from 'query-string'\n\nclass Search extends Component {\n    state = {\n        active: false,\n        classString: 'search-bar',\n        searchString: ''\n    }\n\n    classString = () => {\n        return `search-bar ${(this.state.active) ? 'active' : 'hidden'}`;\n    }\n\n    updateSearch = (value) => {\n        this.setState({...this.state, searchString: value});\n    }\n\n    isActive = () => {\n        if(!isMobile){ return true; }\n        else{ return this.state.active; }\n    }\n\n    onSearchClick = (value) => {\n        console.log('search: ', value);\n        if(this.state.active){\n            if(this.state.searchString) this.submit();\n            if(isMobile) this.setState({...this.state, active: false});\n        }\n        else{\n            this.setState({\n                ...this.state,\n                active: true\n            }, () => {document.getElementsByClassName('react-search-field-input')[0].focus()});\n        }\n    }\n\n    updateURLParams = (param, value, updateURL) => {\n        const url = this.props.match.url;\n        const urlParams = queryString.parse(this.props.location.search);\n        urlParams[param] = value;\n        let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n\n        if(updateURL){\n            this.props.history.push(pathWithParams);\n        }\n        else{\n            return pathWithParams;\n        }\n    }\n\n    submit = () => {\n        console.log('submit: ', this.state.searchString);\n        this.updateURLParams('q', this.state.searchString, true);\n        this.setState({...this.state, searchString: ''});\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            active: this.isActive()\n        }, this.setState({\n            ...this.state,\n            classString: this.classString()\n        }));\n    }\n\n    render(){\n        return(\n            <SearchField\n              placeholder=\"Search...\"\n              onChange={(value, event) => { this.updateSearch(value) }}\n              onEnter={(value, event) => { this.submit() }}\n              onSearchClick={(value, event) => { this.onSearchClick(value) }}\n              searchText={this.state.searchString}\n              classNames={this.classString()}\n            />\n        );\n    }\n}\n\nexport default withRouter(Search);\n","import React from 'react';\n\nconst CollapsiblePanel = ({id, title, children}) => {\n    return(\n        <div className=\"panel-group\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <div className=\"panel-title\">\n                <div className=\"nav-link truncate\" data-toggle=\"collapse\" href={`#${id}`}>\n                    {title}\n                </div>\n            </div>\n            </div>\n            <div id={id} className=\"panel-collapse collapse\">\n              <div className=\"panel-body\">{children}</div>\n            </div>\n          </div>\n      </div>\n    );\n}\n\nexport default CollapsiblePanel;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport { NavLink } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport CollapsiblePanel from \"./CollapsiblePanel\";\n\nconst NavItems = () => {\n    return(\n        <>\n            <BrowserView>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item border-bottom active\">\n                        <Search />\n                    </li>\n                </ul>\n            </BrowserView>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item border-bottom active\">\n                    <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"active\">Nav 1</NavLink>\n                </li>\n                <li className=\"nav-item border-bottom\">\n                    <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"active\">\n                        Nav 2 with very very very long name goes here\n                    </NavLink>\n                </li>\n                <li className=\"nav-item border-bottom\">\n                    <NavLink to=\"/\" className=\"nav-link\" activeClassName=\"active\">\n                        Nav 3 also has a very very long name but wraps instead\n                    </NavLink>\n                </li>\n                <li className=\"nav-item border-bottom truncate\">\n                    <CollapsiblePanel\n                        id=\"subnav1\"\n                        title=\"Nav with Subnav\"\n                    >\n                        <ul className=\"navbar-nav\">\n                            <NavLink to=\"/\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Sub 1</NavLink>\n                            <NavLink to=\"/\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Sub 2</NavLink>\n                            <NavLink to=\"/\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Sub 3 Has a very long name</NavLink>\n                        </ul>\n                    </CollapsiblePanel>\n                </li>\n                <li className=\"nav-item border-bottom\">\n                    <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"active\">Sub 1</NavLink>\n                </li>\n            </ul>\n        </>\n    );\n}\n\nexport default NavItems;\n","import React from 'react';\nimport Logo from \"./Logo\";\nimport NavItems from './NavItems';\n\nconst MobileNav = () => {\n    return (\n        <nav className=\"navbar\">\n\n            <Logo />\n\n            <button className=\"navbar-toggler border-top border-bottom\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent1\">\n                <NavItems />\n            </div>\n\n        </nav>\n    );\n}\n\nexport default MobileNav;\n","import React from \"react\";\nimport {MobileView, BrowserView} from \"react-device-detect\";\nimport Logo from \"../components/Logo\";\nimport MobileNav from \"../components/MobileNav\";\nimport Search from \"../components/Search\";\n\nconst Header = () => {\n    return (\n        <header className=\"super container-fluid\">\n            <MobileView viewClassName=\"mobile-nav\">\n                <MobileNav />\n            </MobileView>\n            <BrowserView>\n                <Logo />\n            </BrowserView>\n            <Search />\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport NavItems from './NavItems';\n\nconst Nav = () => {\n    return(\n        <BrowserView viewClassName=\"siderail-nav nav-left col-lg-2 col-xl-2 float-left border-right\">\n            <nav className=\"navbar web-nav\">\n                <NavItems />\n            </nav>\n        </BrowserView>\n    );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from 'query-string'\nimport Routing from \"./routes/Routing\";\nimport Header from \"./modules/Header\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n\n    getURLParam = (param) => {\n        const urlParams = queryString.parse(this.props.location.search);\n        return urlParams[param];\n    }\n\n    updateURLParams = (param, value, updateURL) => {\n        const url = this.props.match.url;\n        const urlParams = queryString.parse(this.props.location.search);\n        urlParams[param] = value;\n        let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n\n        if(updateURL){\n            this.props.history.push(pathWithParams);\n        }\n        else{\n            return pathWithParams;\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"app clear\">\n              <Header />\n              <Nav />\n\n              <div className=\"container col-sm-12 col-md-12 col-lg-10 col-xl-10 float-right clear\">\n                <div className=\"feed-wrapper row col float-right\">\n                  <Routing />\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { META } from '../actions/types';\n\nconst INITIAL_STATE = {}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case META:\n            return{...state, ...action.payload}\n\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from 'redux';\nimport MetaReducer from './MetaReducer';\n\nexport default combineReducers({\n    meta: MetaReducer\n});\n","// Handle all the definitions for\n// All of the different types of dispatches\n// Prevents typos and throws more intelligent errors\n\n// Meta\nexport const META = 'meta';\n","import React from 'react';\nimport MetaTags from 'react-meta-tags'\n\nconst Meta = () => {\n    return(\n        <MetaTags>\n            <title>VideoFeed | Clean React UI</title>\n            <meta name=\"description\" content=\"Reuseable React & SASS based components\" />\n            <meta property=\"og:title\" content=\"VideoFeed\" />\n            <meta property=\"og:image\" content=\"../../public/favicon.ico\" />\n        </MetaTags>\n    );\n}\n\nexport default Meta;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers'\nimport Meta from './components/Meta';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, {}, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Meta />\n            <App />\n        </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}