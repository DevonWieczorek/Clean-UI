{"version":3,"sources":["modules/TileHeroLink.js","utils/url.js","components/Pagination.js","utils/misc.js","pages/Feed.js","components/Search.js","pages/NotFound.js","components/ErrorBoundary.js","components/ResultsBanner.js","actions/types.js","actions/APIActions.js","routes/Routing.js","actions/BrandActions.js","components/Logo.js","components/BrandsList.js","components/ParamLink.js","components/CategoriesList.js","components/CollapsiblePanel.js","components/NavItems.js","components/MobileNav.js","components/PartnerLogo.js","modules/Header.js","components/Nav.js","App.js","reducers/MetaReducer.js","reducers/APIReducer.js","reducers/BrandReducer.js","data/brand-defaults/pornhub.js","data/brand-defaults/redtube.js","data/brand-defaults/tube8.js","data/brand-defaults/youporn.js","data/brand-defaults/xtube.js","data/brand-defaults/spankwire.js","data/brand-defaults/keezmovies.js","data/brand-defaults/extremetube.js","reducers/index.js","utils/objects.js","components/Meta.js","serviceWorker.js","index.js"],"names":["TileHeroLink","props","react_default","a","createElement","className","href","link","target","src","alt","title","children","getURLParam","ctx","param","location","search","queryString","parse","updatedURLParamString","paramObj","url","match","urlParams","Object","keys","_key","concat","stringify","updateURLParams","pathWithParams","history","push","preservePathUpdateParams","params","pathname","Pagination","state","currPage","MAX_PAGES","LAST_PAGE","updatePage","page","dec","_this","handlePageUpdate","inc","INITIAL","arguments","length","undefined","setState","objectSpread","parseInt","onPageUpdate","dynamicPageButtons","buttons","_loop","index","i","classNames","key","onClick","this","lastPage","_this2","aria-label","ariaLabel","rel","Component","withRouter","decimal","num","rounded","Math","ceil","abbvNumber","div_k","parseFloat","div_m","div_b","div_t","Fragment","results","items","MAX","process","videos","video","modules_TileHeroLink","toFixed","renderFeed","components_Pagination","Search","active","classString","searchString","updateSearch","value","isActive","isMobile","onSearchClick","submit","document","getElementsByClassName","focus","q","index_min_default","placeholder","onChange","event","onEnter","searchText","connect","meta","brands","NotFound","components_Search","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","error","info","console","warn","errorContent","ENDPOINT","DEFAULT_BRAND","getCategoriesByBrand","brand","_endpoint","dispatch","fetch","then","res","json","payload","attribute","categories","type","catch","err","log","Routing","onRouteChanged","_this$props","activeBrand","split","updateAllBrandInfo","category","updateActiveBrand","handleCategories","delegateSearch","query","searchByQuery","searchByCategory","searchByBrandDefault","providers","allCategories","prevProps","react_router","exact","path","component","components_ErrorBoundary","pages_NotFound","components_ResultsBanner","pages_Feed","api","searchResults","infoObj","updateBrandAttribute","Logo","id","BrandsList","links","require","b","toLowerCase","react_router_dom","to","activeClassName","renderLinks","urlParam","_preservePathUpdatePa","defineProperty","CategoriesList","c","components_ParamLink","style","fontSize","CollapsiblePanel","_ref","data-toggle","NavItems","dist","components_CollapsiblePanel","components_BrandsList","components_CategoriesList","MobileNav","isOpen","toggleOpen","force","components_Logo","data-target","aria-controls","aria-expanded","components_NavItems","PartnerLogo","partnerLogo","viewClassName","components_MobileNav","components_PartnerLogo","Nav","App","modules_Header","components_Nav","routes_Routing","INITIAL_STATE","description","keywords","subject","robots","ogTitle","ogImage","ogDescription","ogSiteName","ogType","ogURL","window","pornhub","brandName","logo","redtube","tube8","youporn","xtube","spankwire","keezmovies","extremetube","combineReducers","action","metaData","defaultObj","argObj","temp","mergeObjects","Meta","lib_default","name","content","property","Boolean","hostname","store","createStore","reducer","applyMiddleware","ReduxThunk","ReactDOM","render","es","components_Meta","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5ed4f4b.chunk.js","sourcesContent":["import React from 'react';\n\nconst TileHeroLink = (props) => {\n    return(\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-auto mr-auto ml-auto tile tile-hero-link border-all rounded\">\n          <a href={props.link || '#'} className=\"tile-link\" target={props.target || \"_blank\"}>\n            <div className=\"tile-hero\">\n              <img src={props.src || 'http://www.fillmurray.com/300/200'} alt={props.title || 'Content Unavailable'}/>\n            </div>\n            <div className=\"tile-info\">\n              <div className=\"tile-title\">{props.title || 'Content Unavailable'}</div>\n              <div className=\"tile-details\">\n                {props.children || 'Nothing to see here.'}\n              </div>\n            </div>\n          </a>\n        </div>\n    );\n}\n\nexport default TileHeroLink;\n","import queryString from 'query-string';\n\n// Query string requires props to be able to access location.search\n// Pass in props as ctx when calling query-string related functions\n\n// Return URL param's value by param\nexport const getURLParam = (ctx, param, location) => {\n    if(!location) location = ctx.location.search;\n    const urlParams = queryString.parse(location);\n    return urlParams[param];\n}\n\n// Update url params for given argument and return the full string\nexport const updatedURLParamString = (ctx, paramObj) => {\n    const url = ctx.match.url;\n    const urlParams = queryString.parse(ctx.location.search);\n\n    // Loop through the object and update url params\n    for(let param in Object.keys(paramObj)){\n    \tlet _key = Object.keys(paramObj)[param];\n        urlParams[_key] = paramObj[_key];\n    }\n\n    // Re-create the full url with params and return\n    let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n    return pathWithParams;\n}\n\n// Update URL params and push into history\nexport const updateURLParams = (ctx, paramObj) => {\n    const pathWithParams = updatedURLParamString(ctx, paramObj);\n    ctx.history.push(pathWithParams);\n}\n\n// Preserve the active path and then update the query param\nexport const preservePathUpdateParams = (ctx, params) => {\n    ctx.match.url = ctx.location.pathname;\n    ctx.history.push(updatedURLParamString(ctx, params));\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { updateURLParams, getURLParam } from \"../utils/url\";\n\nclass Pagination extends Component {\n    state = {\n        currPage: 1,\n        MAX_PAGES: 3,\n        LAST_PAGE: null\n    }\n\n    updatePage = (page) => {\n        switch(page){\n            case '-1':\n                let dec = this.state.currPage - 1;\n                if(dec < 1) dec = 1;\n                this.handlePageUpdate(dec);\n                break;\n            case '+1':\n                let inc = this.state.currPage + 1;\n                this.handlePageUpdate(inc);\n                break;\n            default:\n                this.handlePageUpdate(page);\n                break;\n        }\n    }\n\n    handlePageUpdate = (page, INITIAL = false) => {\n        this.setState({\n            ...this.state,\n            currPage: parseInt(page)\n        }, () => {\n            updateURLParams(this.props, {\"page\": parseInt(page)});\n            // INITIAL flag was added to prevent unintentional callback on page load\n            if(!INITIAL && this.props.onPageUpdate) this.props.onPageUpdate();\n        });\n    }\n\n    dynamicPageButtons = () => {\n        const buttons = []\n        for(var i = 0; i < this.state.MAX_PAGES; i++){\n            let index = this.state.currPage + i;\n            let classNames = `page-item ${(index === this.state.currPage) ? 'active' : ''}`;\n            buttons.push(\n                <li className={`${classNames}`} key={index}>\n                  <span\n                    className=\"page-link\"\n                    onClick={() => { this.updatePage(index); }}\n                    page={index}\n                  >{index}</span>\n                </li>\n            );\n        }\n        return buttons;\n    }\n\n    componentDidMount(){\n        // Accept current page as a prop otherwise grab it as a url param\n        let page = this.props.page || getURLParam(this.props, 'page') || 1;\n        this.setState({ ...this.state, currPage: parseInt(page) });\n\n        // Allow setting a limit on the number of pages\n        if(this.props.lastPage && (this.props.currPage <= this.props.lastPage)){\n            this.setState({...this.state, LAST_PAGE: parseInt(this.props.lastPage)});\n        }\n    }\n\n    render() {\n        return (\n          <nav className=\"pagination-holder\" aria-label={this.props.ariaLabel}>\n            <ul className=\"pagination\">\n              {(this.state.currPage > 1) ?\n                  <li className=\"page-item\" key=\"-1\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('-1'); }}\n                      page=\"-1\"\n                      rel=\"previous\"\n                    >&laquo;</span>\n                  </li>\n              : null}\n\n              {this.dynamicPageButtons()}\n\n              {(!this.state.LAST_PAGE || (this.state.currPage + (this.state.MAX_PAGES - 1) < this.state.LAST_PAGE)) ?\n                  <li className=\"page-item\" key=\"+1\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('+1'); }}\n                      page=\"+1\"\n                      rel=\"next\"\n                    >&raquo;</span>\n                  </li>\n              : null}\n            </ul>\n          </nav>\n        );\n    }\n}\n\nexport default withRouter(Pagination);\n","export const randomNumber = (min, max) => {\n    min = min || 0;\n    max = max || 10;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const decimal = (num) => {\n    let rounded = Math.ceil(num * 10) / 10;\n\n    if((rounded % 1) > 0){\n        return rounded;\n    }\n    else{\n        // Strip .0 for even numbers\n        return parseInt(rounded);\n    }\n}\n\nexport const abbvNumber = (num) => {\n    let div_k = parseFloat(num / 1000);\n    let div_m = parseFloat(div_k / 1000);\n    let div_b = parseFloat(div_m / 1000);\n    let div_t = parseFloat(div_b / 1000);\n\n    if(div_k < 1000){\n        return decimal(div_k) + 'K';\n    }\n    else if(div_m < 1000){\n        return decimal(div_m) + 'M';\n    }\n    else if(div_b < 1000){\n        return decimal(div_b) + 'B';\n    }\n    else{\n        return decimal(div_t) + 'T';\n    }\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport TileHeroLink from '../modules/TileHeroLink';\nimport Pagination from '../components/Pagination';\nimport {abbvNumber} from '../utils/misc';\nimport { getURLParam } from \"../utils/url\";\n\nconst Feed = (props) => {\n    const renderFeed = (results) => {\n        let items = [];\n        const MAX = parseInt(process.env.REACT_APP_MAX_RESULTS_PER_PAGE);\n        for(var i = 0; i < MAX && i < results.videos.length; i++){\n            let video = results.videos[i];\n            items.push(\n                <TileHeroLink\n                    title={video['title']}\n                    src={video['default_thumb']}\n                    link={video['url']}\n                    key={`${video['id']}_${i}`}\n                >\n                    <div className=\"row\">\n                        <div className=\"single-detail col\">\n                            {abbvNumber(video['views'])} Views &middot; <span className=\"success\">{parseFloat(video['rating']).toFixed(1)}%</span>\n                        </div>\n                        <div className=\"single-detail col\">{video['duration']}</div>\n                    </div>\n                </TileHeroLink>\n            );\n        }\n        return items;\n    }\n\n    return(\n        <>\n            {(props.results) ? renderFeed(props.results) : null}\n\n            {(props.results) ?\n                <center className=\"clear\">\n                    <Pagination\n                        ariaLabel=\"footer-pagination\"\n                        onPageUpdate={() => {}}\n                        page={getURLParam(props, 'page')}\n                        lastPage=\"10\"\n                    />\n                </center>\n            : null}\n        </>\n    );\n}\n\nexport default withRouter(Feed);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { isMobile } from \"react-device-detect\";\nimport SearchField from \"react-search-field\";\nimport { withRouter } from \"react-router-dom\";\nimport {preservePathUpdateParams} from \"../utils/url\";\n\nclass Search extends Component {\n    state = {\n        active: false,\n        classString: 'search-bar',\n        searchString: ''\n    }\n\n    // Control visibility of search field\n    classString = () => {\n        return `search-bar ${(this.state.active) ? 'active' : 'hidden'}`;\n    }\n\n    // Handle input typing\n    updateSearch = (value) => {\n        this.setState({...this.state, searchString: value});\n    }\n\n    isActive = () => {\n        // Web is always active, mobile toggles\n        if(!isMobile){ return true; }\n        else{ return this.state.active; }\n    }\n\n    // On click of the search icon\n    onSearchClick = (value) => {\n        if(this.state.active){\n            if(this.state.searchString) this.submit();\n\n            // Toggle search field visibility off for mobile after submit\n            if(isMobile) this.setState({...this.state, active: false});\n        }\n        else{\n            // Toggle search field visibility for mobile\n            this.setState({\n                ...this.state,\n                active: true\n            }, () => {document.getElementsByClassName('react-search-field-input')[0].focus()});\n        }\n    }\n\n    submit = () => {\n        preservePathUpdateParams(this.props, {\n            'q': this.state.searchString,\n            'page': 1 // Reset the page to 1 for new searches\n        });\n\n        // Clear field and toggle search bar\n        this.setState({\n            ...this.state,\n            searchString: '',\n            active: (isMobile) ? false : true\n        });\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            active: this.isActive()\n        }, this.setState({\n            ...this.state,\n            classString: this.classString()\n        }));\n    }\n\n    render(){\n        return(\n            <SearchField\n              placeholder=\"Search...\"\n              onChange={(value, event) => { this.updateSearch(value) }}\n              onEnter={(value, event) => { this.submit() }}\n              onSearchClick={(value, event) => { this.onSearchClick(value) }}\n              searchText={this.state.searchString}\n              classNames={this.classString()}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        meta: state.meta,\n        brands: state.brands\n    };\n}\n\nexport default connect(mapStateToProps, {})(withRouter(Search));\n","import React from 'react';\nimport Search from '../components/Search';\n\nconst NotFound = () => {\n    return(\n        <div className=\"not-found\">\n            <h1 className=\"brand-color\">Oops!</h1>\n            <div>Looks like we couldn't find what you were looking for.</div>\n            <div className=\"try-search\"><Search /></div>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\n// https://reactjs.org/docs/error-boundaries.html\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.warn('ErrorBoundary Error:', error);\n        console.warn('ErrorBoundary Info:', info);\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.errorContent;\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport {getURLParam} from '../utils/url';\n\nconst ResultsBanner = (props) => {\n    if(getURLParam(props, 'q')){\n        return(\n            <div className=\"results-banner\">\n                Displaying Results for: <span>{getURLParam(props, 'q')}</span>\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default withRouter(ResultsBanner);\n","// Handle all the definitions for\n// All of the different types of dispatches\n// Prevents typos and throws more intelligent errors\n\n// Meta\nexport const META = 'meta';\nexport const RESET_META = 'reset_meta';\n\n// API\nexport const ENDPOINT = process.env.REACT_APP_DEFAULT_ENDPOINT;\nexport const SEARCH_BY_QUERY = 'get_data';\n\n// BRANDS\nexport const DEFAULT_BRAND = process.env.REACT_APP_DEFAULT_BRAND;\nexport const RESET_BRAND = 'reset_brand';\nexport const RESET_ALL_BRANDS = 'reset_all_brands';\nexport const UPDATE_ACTIVE_BRAND = 'update_active_brand';\nexport const UPDATE_ALL_BRAND_INFO = 'update_all_brand_info';\nexport const UPDATE_BRAND_ATTRIBUTE = 'update_brand_attribute';\n","import {ENDPOINT, SEARCH_BY_QUERY, UPDATE_BRAND_ATTRIBUTE} from \"./types\";\n\n// Call API with full query string\n// REQUIRED: q= (search)\n// Optional: category, brand, page\nexport const searchByQuery = (brand, queryString) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}${queryString}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Test function, will need to update once the real endpoint is built\n// Call the API and return the default results for a given category\nexport const searchByCategory = (brand, queryString) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}${queryString}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Test function, will need to update once the real endpoint is built\n// Call the API and return the default results for a given brand\nexport const searchByBrandDefault = (brand) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Call our service to get a list of categories for the active brand\nexport const getCategoriesByBrand = (brand) => {\n    const _endpoint = `${ENDPOINT}/${brand}/categories`;\n    return dispatch => {\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                let payload = {brand: brand, attribute: 'allCategories', value: res.categories}\n\n                // If an empty response is returned, return an array with an empty object\n                // Prevent errors later on in the event chain\n                if(!res.categories[0] || Object.keys(res.categories[0]).length === 0){\n                    payload['value'] = [{}];\n                }\n                dispatch({type: UPDATE_BRAND_ATTRIBUTE, payload: payload});\n            })\n            .catch(err => {\n                console.log( `Error fetching categories for ${brand}:`, err );\n\n                // If there is an error, return an array with an empty object\n                // Prevent further errors later on in the event chain\n                let payload = {brand: brand, attribute: 'allCategories', value: [{}]};\n                dispatch({type: UPDATE_BRAND_ATTRIBUTE, payload: payload});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport Feed from '../pages/Feed';\nimport NotFound from '../pages/NotFound';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport ResultsBanner from '../components/ResultsBanner';\nimport {getURLParam} from \"../utils/url\";\nimport {\n    updateAllBrandInfo,\n    updateActiveBrand,\n    updateBrandAttribute,\n    getCategoriesByBrand,\n    searchByQuery,\n    searchByCategory,\n    searchByBrandDefault\n} from '../actions';\nimport {DEFAULT_BRAND} from '../actions/types';\n\nclass Routing extends Component {\n    // Listen for changes in the URL params and update the state accordingly\n    onRouteChanged = () =>{\n        let {match, location} = this.props;\n        let urlParams = queryString.parse(this.props.location.search);\n        let activeBrand = match.params.brand || location.pathname.split('/')[1] || DEFAULT_BRAND;\n\n        // Update the global brand info\n        this.props.updateAllBrandInfo({\n            activeBrand: activeBrand,\n            page: urlParams['page'] || 1,\n            search: urlParams['q'] || '',\n            category: urlParams['category'] || '',\n            queryString: location.search || ''\n        });\n\n        // Update the active brand\n        this.props.updateActiveBrand(activeBrand);\n\n        // Check if we need to fetch the categories list\n        this.handleCategories(activeBrand);\n\n        // Wait until all brand info has been updated, then\n        // Search for results to populate the feed\n        this.delegateSearch(activeBrand, urlParams['q'], urlParams['category']);\n    }\n\n    // Decide what kind of search to perform based on url params\n    delegateSearch = (brand, query, category) => {\n        brand = brand || this.props.brands.activeBrand || process.env.REACT_APP_DEFAULT_BRAND;\n        query = query || getURLParam(this.props, 'q');\n        category = category || getURLParam(this.props, 'category');\n\n        if(query){\n            console.log('search by query: ', brand, this.props.location.search);\n            // Search by brand and full query string\n            // (May also include category and page)\n            this.props.searchByQuery(brand, this.props.location.search);\n        }\n        else if(category){\n            console.log('search by category: ', brand, category);\n            // Search by brand and category\n            // Use entire query string to allow for paginated category search \n            this.props.searchByCategory(brand, this.props.location.search);\n        }\n        else{\n            console.log('search by brand default: ', brand);\n            // If no results exist in state then\n            // call the API and get default search\n            // results by brand\n            this.props.searchByBrandDefault(brand);\n        }\n    }\n\n    // Fetch a list of categories to search based on brand\n    handleCategories = (brand) => {\n        brand = brand || this.props.providers[this.props.activeBrand];\n        let categories = brand.allCategories;\n\n        // If there are no categories, fetch and populate\n        if(!categories || categories.length === 0){\n            this.props.getCategoriesByBrand(brand);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.onRouteChanged();\n        }\n    }\n\n    componentDidMount(){\n        console.log('Router props: ', this.props);\n        this.onRouteChanged();\n    }\n\n    render(){\n        return(\n            <Switch>\n                <Route exact path=\"/\" key=\"homeFeed\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <ResultsBanner />\n                            <Feed results={this.props.api.searchResults} />\n                        </ErrorBoundary>\n                    );\n                }} />\n            <Route exact path=\"/404\" key=\"404page\" component={NotFound} />\n                <Route path=\"/:brand\" key=\"brand\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <ResultsBanner />\n                            <Feed results={this.props.api.searchResults} />\n                        </ErrorBoundary>\n                    );\n                }} />\n            <Route key=\"404fallback\" component={NotFound} />\n            </Switch>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        brands: state.brands,\n        api: state.api\n    };\n}\n\nexport default connect(mapStateToProps, {\n    updateAllBrandInfo,\n    updateActiveBrand,\n    updateBrandAttribute,\n    getCategoriesByBrand,\n    searchByQuery,\n    searchByCategory,\n    searchByBrandDefault\n})(withRouter(Routing));\n","import {\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO,\n    UPDATE_BRAND_ATTRIBUTE\n} from './types';\n\nexport const resetBrand = (brand) => {\n    if(brand === 'all'){\n        return {type: RESET_ALL_BRANDS}\n    }\n    return {type: RESET_BRAND, payload: brand}\n}\n\nexport const updateActiveBrand = (brand) => {\n    return {type: UPDATE_ACTIVE_BRAND, payload: brand}\n}\n\nexport const updateAllBrandInfo = (infoObj) => {\n    return {type: UPDATE_ALL_BRAND_INFO, payload: infoObj}\n}\n\nexport const updateBrandAttribute = (brand, attribute, value) => {\n    return {type: UPDATE_BRAND_ATTRIBUTE, payload: {brand, attribute, value}}\n}\n","import React from 'react';\n\nconst Logo = () => {\n    return(\n        <a className=\"home-button secondary\" href=\"/\">\n            <div id=\"logo\">Porn<span className=\"brand-color\">Feed</span></div>\n        </a>\n    );\n}\n\nexport default Logo;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nconst BrandsList = () => {\n    const renderLinks = () => {\n        let links = [];\n        let brands = require('../data/brands.json');\n\n        for(let b in brands['brands']){\n            let brand = brands['brands'][b].brand.toLowerCase();\n            links.push(\n                <NavLink to={`/${brand}`} className=\"nav-link border-bottom truncate\" activeClassName=\"active\" key={b}>{brand}</NavLink>\n            );\n        }\n\n        return links;\n    }\n\n    return(\n        <ul className=\"navbar-nav\">{}\n            {renderLinks()}\n        </ul>\n    );\n}\n\nexport default BrandsList;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n// import { NavLink } from \"react-router-dom\";\nimport {getURLParam, preservePathUpdateParams} from '../utils/url';\n\nconst ParamLink = (props) => {\n    // Get the url's value of this ParamLink's param (used for active class)\n    const urlParam = getURLParam(props, props.param);\n\n    return(\n        <div\n            className={(urlParam === props.value) ?\n                `${props.className} ${props.activeClassName}`\n            : props.className}\n            onClick={() => {\n                preservePathUpdateParams(props, {[props.param]: props.value, 'page': 1})\n            }}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default withRouter(ParamLink);\n","import React from 'react';\nimport ParamLink from \"./ParamLink\";\n\nconst CategoriesList = (props) => {\n    const renderLinks = () => {\n        let links = [];\n\n        for(let c in props.categories){\n            let category = props.categories[c].category.toLowerCase();\n            links.push(\n                <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" key={c} value={category}>{category}</ParamLink>\n            );\n        }\n\n        if(links.length === 0) links = <i style={{'fontSize': '12px'}}>No Categories Found.</i>;\n        return links;\n    }\n\n    return( <ul className=\"navbar-nav\"> {renderLinks()} </ul> );\n}\n\nexport default CategoriesList;\n","import React from 'react';\n\nconst CollapsiblePanel = ({id, title, children}) => {\n    return(\n        <div className=\"panel-group\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <div className=\"panel-title\">\n                <div className=\"nav-link truncate\" data-toggle=\"collapse\" href={`#${id}`}>\n                    {title}\n                </div>\n            </div>\n            </div>\n            <div id={id} className=\"panel-collapse collapse\">\n              <div className=\"panel-body\">{children}</div>\n            </div>\n          </div>\n      </div>\n    );\n}\n\nexport default CollapsiblePanel;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserView} from \"react-device-detect\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport BrandsList from \"./BrandsList\";\nimport CategoriesList from \"./CategoriesList\";\nimport CollapsiblePanel from \"./CollapsiblePanel\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport { getCategoriesByBrand } from '../actions';\n\nclass NavItems extends Component {\n\n    render(){\n        return(\n            <>\n                <BrowserView>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item border-bottom\">\n                            <ErrorBoundary><Search /></ErrorBoundary>\n                        </li>\n                    </ul>\n                </BrowserView>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item border-bottom\">\n                        <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"default\">\n                            Home Feed\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item border-bottom truncate\">\n                        <CollapsiblePanel\n                            id=\"brands-accordion\"\n                            title=\"Brands\"\n                        >\n                            <ErrorBoundary errorContent={<em>Error finding brands.</em>}>\n                                <BrandsList />\n                            </ErrorBoundary>\n                        </CollapsiblePanel>\n                    </li>\n                    <li className=\"nav-item border-bottom truncate\">\n                        <CollapsiblePanel\n                            id=\"categories-accordion\"\n                            title=\"Categories\"\n                        >\n                            <ErrorBoundary errorContent={<em>Error finding categories.</em>}>\n                                <CategoriesList categories={\n                                    this.props.providers[this.props.activeBrand].allCategories\n                                }/>\n                            </ErrorBoundary>\n                        </CollapsiblePanel>\n                    </li>\n                </ul>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{ ...state.brands};\n}\n\nexport default connect(mapStateToProps, {getCategoriesByBrand})(withRouter(NavItems));\n","import React, {Component} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Logo from \"./Logo\";\nimport NavItems from './NavItems';\n\nclass MobileNav extends Component {\n    state ={isOpen: false}\n\n    toggleOpen = (force) => {\n        if(typeof force !== 'undefined'){\n            this.setState({...this.state, isOpen: force});\n        }\n        else{\n            this.setState({...this.state, isOpen: !this.state.isOpen});\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.toggleOpen(false);\n        }\n    }\n\n    render(){\n        return (\n            <nav className=\"navbar\">\n\n                <Logo />\n\n                <button className=\"navbar-toggler border-top border-bottom over-5\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded={(this.state.isOpen) ? 'true' : 'false'} aria-label=\"Toggle navigation\" onClick={() => {this.toggleOpen()}}></button>\n\n                <div className={`${(this.state.isOpen) ? 'show' : 'collapse'} navbar-collapse`} id=\"navbarSupportedContent1\">\n                    <NavItems />\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(MobileNav);\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nclass PartnerLogo extends Component {\n    render(){\n        return(\n            <div className=\"dynamic-partner-logo\">\n                <NavLink to={`/${this.props.activeBrand}`} key={this.props.activeBrand}>\n                    <img\n                        id=\"partner-logo\"\n                        className={this.props.className}\n                        src={this.props.partnerLogo}\n                        alt={this.props.alt || this.props.activeBrand}\n                    />\n                </NavLink>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{ ...state.brands};\n}\n\nexport default connect(mapStateToProps, {})(withRouter(PartnerLogo));\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {MobileView, BrowserView} from \"react-device-detect\";\nimport Logo from \"../components/Logo\";\nimport MobileNav from \"../components/MobileNav\";\nimport Search from \"../components/Search\";\nimport PartnerLogo from \"../components/PartnerLogo\";\n\nconst Header = (props) => {\n    let brand = props.match.params.brand || props.location.pathname.split('/')[1];\n    return (\n        <header className=\"super container-fluid\">\n            <MobileView viewClassName=\"mobile-nav\">\n                <MobileNav />\n                <Search />\n            </MobileView>\n            <BrowserView>\n                <Logo />\n                {(brand) ? <PartnerLogo /> : <Search /> }\n            </BrowserView>\n\n        </header>\n    );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport NavItems from './NavItems';\n\nconst Nav = () => {\n    return(\n        <BrowserView viewClassName=\"siderail-nav nav-left col-lg-2 col-xl-2 float-left border-right\">\n            <nav className=\"navbar web-nav\">\n                <NavItems />\n            </nav>\n        </BrowserView>\n    );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Routing from \"./routes/Routing\";\nimport Header from \"./modules/Header\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        console.log('App props: ', this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"app clear\">\n              <Header />\n              <Nav />\n\n              <div className=\"container col-sm-12 col-md-12 col-lg-10 col-xl-10 float-right clear\">\n                <div className=\"feed-wrapper row col float-right\">\n                  <Routing />\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { META, RESET_META } from '../actions/types';\nimport { mergeObjects } from '../utils/objects';\n\nconst INITIAL_STATE = {\n    'title': 'VideoFeed | Clean React UI',\n    'description': 'Reuseable React & SASS based components',\n    'keywords': '',\n    'subject': '',\n    'robots': 'index,follow',\n    'ogTitle': 'VideoFeed',\n    'ogImage': '../../public/favicon.ico',\n    'ogDescription': 'Reuseable React & SASS based components',\n    'ogSiteName': 'VideoFeed',\n    'ogType': '',\n    'ogURL': window.location.href\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case META:\n            let metaData = mergeObjects(INITIAL_STATE, action.payload);\n            return{...state, ...metaData}\n\n        case RESET_META:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","import { SEARCH_BY_QUERY } from '../actions/types';\n\nconst INITIAL_STATE = {searchResults: null}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case SEARCH_BY_QUERY:\n            console.log('Got Search Results:', action.payload)\n            return{...state, searchResults: action.payload}\n\n        default:\n            return state;\n    }\n}\n","import {\n    DEFAULT_BRAND,\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO,\n    UPDATE_BRAND_ATTRIBUTE\n} from '../actions/types';\nimport * as brands from '../data/brand-defaults';\n\nconst INITIAL_STATE = {\n    activeBrand: DEFAULT_BRAND,\n    page: 1,\n    search: '',\n    category: '',\n    queryString: '',\n    partnerLogo: null,\n    providers: {\n        pornhub: brands.pornhub,\n        redtube: brands.redtube,\n        tube8: brands.tube8,\n        youporn: brands.youporn,\n        xtube: brands.xtube,\n        spankwire: brands.spankwire,\n        keezmovies: brands.keezmovies,\n        extremetube: brands.extremetube\n    }\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case UPDATE_ACTIVE_BRAND:\n            return{\n                ...state,\n                activeBrand: action.payload,\n                partnerLogo: state.providers[action.payload].logo,\n                page: state.providers[action.payload].page,\n                search: state.providers[action.payload].search,\n                category: state.providers[action.payload].category,\n                queryString: state.providers[action.payload].queryString\n            }\n\n        case UPDATE_ALL_BRAND_INFO:\n            return{\n                ...state,\n                activeBrand: action.payload.activeBrand,\n                page: action.payload.page,\n                search: action.payload.search,\n                category: action.payload.category,\n                queryString: action.payload.queryString,\n                providers: {\n                    ...state.providers,\n                    [action.payload.activeBrand]: {\n                        ...state.providers[action.payload.activeBrand],\n                        page: action.payload.page,\n                        search: action.payload.search,\n                        category: action.payload.category,\n                        queryString: action.payload.queryString\n                    }\n                }\n            }\n\n        case UPDATE_BRAND_ATTRIBUTE:\n            return{\n                ...state,\n                providers: {\n                    ...state.providers,\n                    [action.payload.brand]: {\n                        ...state.providers[action.payload.brand],\n                        [action.payload.attribute]: action.payload.value\n                    }\n                }\n            }\n\n        case RESET_BRAND:\n            return{\n                ...state,\n                providers: {\n                    [action.payload]: INITIAL_STATE.providers[action.payload]\n                }\n            }\n\n        case RESET_ALL_BRANDS:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","export const pornhub = {\n    brandName: \"pornhub\",\n    logo:\n        \"/logos/pornhub.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const redtube = {\n    brandName: \"redtube\",\n    logo:\n        \"/logos/redtube.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const tube8 = {\n    brandName: \"tube8\",\n    logo:\n        \"/logos/tube8.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const youporn = {\n    brandName: \"youporn\",\n    logo:\n        \"/logos/youporn.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const xtube = {\n    brandName: \"xtube\",\n    logo:\n        \"/logos/xtube.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const spankwire = {\n    brandName: \"spankwire\",\n    logo:\n        \"/logos/spankwire.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const keezmovies = {\n    brandName: \"keezmovies\",\n    logo:\n        \"/logos/keezmovies.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const extremetube = {\n    brandName: \"extremetube\",\n    logo:\n        \"/logos/extremetube.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","import {combineReducers} from 'redux';\nimport MetaReducer from './MetaReducer';\nimport APIReducer from './APIReducer';\nimport BrandReducer from './BrandReducer';\n\nexport default combineReducers({\n    meta: MetaReducer,\n    api: APIReducer,\n    brands: BrandReducer\n});\n","// Grab a nested object by a given key and that key's value\nexport const getObjectByKeyVal = (arr, key, val) => {\n    var index = 0;\n    var r = arr.filter((obj, i) => {\n        if(obj[key] === val) index = i;\n        return obj[key] === val\n    })\n    return {[index]: r};\n}\n\nexport const getDeepObjectByKey = (obj, deepKey, val) => {\n    var result = null;\n    if(obj instanceof Array) {\n        for(var i = 0; i < obj.length; i++) {\n            result = getDeepObjectByKey(obj[i]);\n        }\n    }\n    else{\n        for(var prop in obj) {\n            if(prop === deepKey) {\n                if(val && obj[prop] === val) {\n                    return obj;\n                }\n                return obj;\n            }\n            if(obj[prop] instanceof Object || obj[prop] instanceof Array){\n                result = getDeepObjectByKey(obj[prop], deepKey);\n            }\n        }\n    }\n    return result;\n}\n\nexport const mergeObjects = (defaultObj, argObj) => {\n    let temp = {}\n    for(let key in defaultObj){\n        (argObj[key]) ? temp[key] = argObj[key] : temp[key] = defaultObj[key];\n    }\n    return temp;\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport MetaTags from 'react-meta-tags';\n\nclass Meta extends Component {\n    render(){\n        return(\n            <MetaTags>\n                <title>{this.props.title}</title>\n                <meta name=\"description\" content={this.props.description} />\n                <meta name=\"keywords\" content={this.props.keywords} />\n                <meta name=\"subject\" content={this.props.subject} />\n                <meta name=\"robots\" content={this.props.robots} />\n                <meta property=\"og:title\" content={this.props.ogTitle} />\n                <meta property=\"og:image\" content={this.props.ogImage} />\n                <meta property=\"og:site_name\" content={this.props.ogSiteName} />\n                <meta property=\"og:description\" content={this.props.ogDescription || this.props.description} />\n                <meta property=\"og:url\" content={this.props.ogURL || window.location.href} />\n            </MetaTags>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {...state.meta};\n}\n\nexport default connect(mapStateToProps, {})(Meta);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers'\nimport Meta from './components/Meta';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, {}, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Meta />\n            <App />\n        </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}