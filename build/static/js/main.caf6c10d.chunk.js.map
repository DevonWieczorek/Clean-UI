{"version":3,"sources":["modules/TileHeroLink.js","utils/url.js","components/Pagination.js","utils/misc.js","pages/Feed.js","components/Search.js","pages/NotFound.js","components/ErrorBoundary.js","components/ResultsBanner.js","actions/types.js","actions/MetaActions.js","actions/APIActions.js","actions/BrandActions.js","routes/Routing.js","components/Logo.js","components/BrandsList.js","components/ParamLink.js","components/CategoriesList.js","components/CollapsiblePanel.js","components/NavItems.js","components/MobileNav.js","components/PartnerLogo.js","modules/Header.js","components/Nav.js","App.js","reducers/MetaReducer.js","Hooks.js","reducers/APIReducer.js","reducers/BrandReducer.js","data/brand-defaults/youtube.js","data/brand-defaults/vimeo.js","data/brand-defaults/metacafe.js","reducers/index.js","utils/objects.js","components/Meta.js","plugins/test/index.js","plugins/test2/index.js","components/PluginStore.js","serviceWorker.js","index.js"],"names":["TileHeroLink","props","react_default","a","createElement","className","href","link","target","src","alt","title","children","getURLParam","ctx","param","location","search","queryString","parse","updatedURLParamString","paramObj","url","match","urlParams","Object","keys","_key","concat","stringify","updateURLParams","pathWithParams","history","push","preservePathUpdateParams","params","pathname","Pagination","state","currPage","MAX_PAGES","LAST_PAGE","updatePage","page","dec","_this","handlePageUpdate","inc","INITIAL","arguments","length","undefined","setState","objectSpread","parseInt","onPageUpdate","dynamicPageButtons","buttons","_loop","index","i","classNames","key","onClick","this","lastPage","_this2","aria-label","ariaLabel","rel","Component","withRouter","decimal","num","rounded","Math","ceil","abbvNumber","div_k","parseFloat","div_m","div_b","div_t","Fragment","results","items","MAX","process","videos","video","modules_TileHeroLink","toFixed","renderFeed","window","scroll","components_Pagination","Search","active","classString","searchString","updateSearch","value","isActive","isMobile","onSearchClick","submit","document","getElementsByClassName","focus","q","index_min_default","placeholder","onChange","event","onEnter","searchText","connect","meta","brands","NotFound","components_Search","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","error","info","console","warn","errorContent","ENDPOINT","DEFAULT_BRAND","updateMeta","metaInfo","type","payload","resetMeta","searchByQuery","brand","dispatch","_endpoint","log","fetch","then","res","json","catch","err","searchByCategory","searchByBrandDefault","getCategoriesByBrand","attribute","categories","resetBrand","updateActiveBrand","updateAllBrandInfo","infoObj","updateBrandAttribute","Routing","onRouteChanged","_this$props","activeBrand","split","category","handleCategories","delegateSearch","query","providers","allCategories","prevProps","react_router","exact","path","component","components_ErrorBoundary","pages_NotFound","components_ResultsBanner","pages_Feed","api","searchResults","Logo","id","BrandsList","links","require","b","toLowerCase","react_router_dom","to","activeClassName","renderLinks","urlParam","_preservePathUpdatePa","defineProperty","CategoriesList","c","components_ParamLink","style","fontSize","CollapsiblePanel","_ref","data-toggle","NavItems","dist","components_CollapsiblePanel","components_BrandsList","components_CategoriesList","MobileNav","isOpen","toggleOpen","force","components_Logo","data-target","aria-controls","aria-expanded","components_NavItems","PartnerLogo","partnerLogo","viewClassName","components_MobileNav","components_PartnerLogo","Nav","App","modules_Header","components_Nav","routes_Routing","INITIAL_STATE","description","keywords","subject","robots","ogTitle","ogImage","ogDescription","ogSiteName","ogType","ogURL","HookStore","createHooks","youtube","brandName","logo","vimeo","metacafe","combineReducers","action","metaData","defaultObj","argObj","temp","mergeObjects","applyFilters","Meta","lib_default","name","content","property","TestPlugin","_Component","_getPrototypeOf2","_len","args","Array","apply","logData","data","toConsumableArray","listen","addAction","addFilter","inherits","createClass","OtherTestPlugin","PluginStore","connectPluginsToComponent","_plugins","plugin","plugins","React","connectedPlugins","Children","map","child","cloneElement","doAction","actions","Boolean","hostname","store","createStore","reducer","applyMiddleware","ReduxThunk","rootElement","getElementById","_app","es","components_PluginStore","components_Meta","src_App","hasChildNodes","ReactDOM","hydrate","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.caf6c10d.chunk.js","sourcesContent":["import React from 'react';\n\nconst TileHeroLink = (props) => {\n    return(\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-auto mr-auto ml-auto tile tile-hero-link border-all rounded\">\n          <a href={props.link || '#'} className=\"tile-link\" target={props.target || \"_blank\"}>\n            <div className=\"tile-hero\">\n              <img src={props.src || 'http://www.fillmurray.com/300/200'} alt={props.title || 'Content Unavailable'}/>\n            </div>\n            <div className=\"tile-info\">\n              <div className=\"tile-title\">{props.title || 'Content Unavailable'}</div>\n              <div className=\"tile-details\">\n                {props.children || 'Nothing to see here.'}\n              </div>\n            </div>\n          </a>\n        </div>\n    );\n}\n\nexport default TileHeroLink;\n","import queryString from 'query-string';\n\n// Query string requires props to be able to access location.search\n// Pass in props as ctx when calling query-string related functions\n\n// Return URL param's value by param\nexport const getURLParam = (ctx, param, location) => {\n    if(!location) location = ctx.location.search;\n    const urlParams = queryString.parse(location);\n    return urlParams[param];\n}\n\n// Update url params for given argument and return the full string\nexport const updatedURLParamString = (ctx, paramObj) => {\n    const url = ctx.match.url;\n    const urlParams = queryString.parse(ctx.location.search);\n\n    // Loop through the object and update url params\n    for(let param in Object.keys(paramObj)){\n    \tlet _key = Object.keys(paramObj)[param];\n        urlParams[_key] = paramObj[_key];\n    }\n\n    // Re-create the full url with params and return\n    let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n    return pathWithParams;\n}\n\n// Update URL params and push into history\nexport const updateURLParams = (ctx, paramObj) => {\n    const pathWithParams = updatedURLParamString(ctx, paramObj);\n    ctx.history.push(pathWithParams);\n}\n\n// Preserve the active path and then update the query param\nexport const preservePathUpdateParams = (ctx, params) => {\n    ctx.match.url = ctx.location.pathname;\n    ctx.history.push(updatedURLParamString(ctx, params));\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { updateURLParams, getURLParam } from \"../utils/url\";\n\nclass Pagination extends Component {\n    state = {\n        currPage: 1,\n        MAX_PAGES: 3,\n        LAST_PAGE: null\n    }\n\n    updatePage = (page) => {\n        switch(page){\n            case '-1':\n                let dec = this.state.currPage - 1;\n                if(dec < 1) dec = 1;\n                this.handlePageUpdate(dec);\n                break;\n            case '+1':\n                let inc = this.state.currPage + 1;\n                this.handlePageUpdate(inc);\n                break;\n            default:\n                this.handlePageUpdate(page);\n                break;\n        }\n    }\n\n    handlePageUpdate = (page, INITIAL = false) => {\n        this.setState({\n            ...this.state,\n            currPage: parseInt(page)\n        }, () => {\n            updateURLParams(this.props, {\"page\": parseInt(page)});\n            // INITIAL flag was added to prevent unintentional callback on page load\n            if(!INITIAL && this.props.onPageUpdate) this.props.onPageUpdate();\n        });\n    }\n\n    dynamicPageButtons = () => {\n        const buttons = []\n        for(var i = 0; i < this.state.MAX_PAGES; i++){\n            let index = this.state.currPage + i;\n            let classNames = `page-item ${(index === this.state.currPage) ? 'active' : ''}`;\n            buttons.push(\n                <li className={`${classNames}`} key={index}>\n                  <span\n                    className=\"page-link\"\n                    onClick={() => { this.updatePage(index); }}\n                    page={index}\n                  >{index}</span>\n                </li>\n            );\n        }\n        return buttons;\n    }\n\n    componentDidMount(){\n        // Accept current page as a prop otherwise grab it as a url param\n        let page = this.props.page || getURLParam(this.props, 'page') || 1;\n        this.setState({ ...this.state, currPage: parseInt(page) });\n\n        // Allow setting a limit on the number of pages\n        if(this.props.lastPage && (this.props.currPage <= this.props.lastPage)){\n            this.setState({...this.state, LAST_PAGE: parseInt(this.props.lastPage)});\n        }\n    }\n\n    render() {\n        return (\n          <nav className=\"pagination-holder\" aria-label={this.props.ariaLabel}>\n            <ul className=\"pagination\">\n              {(this.state.currPage > 1) ?\n                  <li className=\"page-item\" key=\"-1\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('-1'); }}\n                      page=\"-1\"\n                      rel=\"previous\"\n                    >&laquo;</span>\n                  </li>\n              : null}\n\n              {this.dynamicPageButtons()}\n\n              {(!this.state.LAST_PAGE || (this.state.currPage + (this.state.MAX_PAGES - 1) < this.state.LAST_PAGE)) ?\n                  <li className=\"page-item\" key=\"+1\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('+1'); }}\n                      page=\"+1\"\n                      rel=\"next\"\n                    >&raquo;</span>\n                  </li>\n              : null}\n            </ul>\n          </nav>\n        );\n    }\n}\n\nexport default withRouter(Pagination);\n","export const randomNumber = (min, max) => {\n    min = min || 0;\n    max = max || 10;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const decimal = (num) => {\n    let rounded = Math.ceil(num * 10) / 10;\n\n    if((rounded % 1) > 0){\n        return rounded;\n    }\n    else{\n        // Strip .0 for even numbers\n        return parseInt(rounded);\n    }\n}\n\nexport const abbvNumber = (num) => {\n    let div_k = parseFloat(num / 1000);\n    let div_m = parseFloat(div_k / 1000);\n    let div_b = parseFloat(div_m / 1000);\n    let div_t = parseFloat(div_b / 1000);\n\n    if(div_k < 1000){\n        return decimal(div_k) + 'K';\n    }\n    else if(div_m < 1000){\n        return decimal(div_m) + 'M';\n    }\n    else if(div_b < 1000){\n        return decimal(div_b) + 'B';\n    }\n    else{\n        return decimal(div_t) + 'T';\n    }\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport TileHeroLink from '../modules/TileHeroLink';\nimport Pagination from '../components/Pagination';\nimport {abbvNumber} from '../utils/misc';\nimport { getURLParam } from \"../utils/url\";\n\nconst Feed = (props) => {\n    const renderFeed = (results) => {\n        let items = [];\n        const MAX = parseInt(process.env.REACT_APP_MAX_RESULTS_PER_PAGE);\n        for(var i = 0; i < MAX && i < results.videos.length; i++){\n            let video = results.videos[i];\n            items.push(\n                <TileHeroLink\n                    title={video['title']}\n                    src={video['default_thumb']}\n                    link={video['url']}\n                    key={`${video['id']}_${i}`}\n                >\n                    <div className=\"row\">\n                        <div className=\"single-detail col\">\n                            {abbvNumber(video['views'])} Views &middot; <span className=\"success\">{parseFloat(video['rating']).toFixed(1)}%</span>\n                        </div>\n                        <div className=\"single-detail col\">{video['duration']}</div>\n                    </div>\n                </TileHeroLink>\n            );\n        }\n        return items;\n    }\n\n    return(\n        <>\n            {(props.results) ? renderFeed(props.results) : null}\n\n            {window.scroll(0,0)}\n\n            {(props.results) ?\n                <center className=\"clear\">\n                    <Pagination\n                        ariaLabel=\"footer-pagination\"\n                        onPageUpdate={() => {}}\n                        page={getURLParam(props, 'page')}\n                        lastPage=\"10\"\n                    />\n                </center>\n            : null}\n        </>\n    );\n}\n\nexport default withRouter(Feed);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { isMobile } from \"react-device-detect\";\nimport SearchField from \"react-search-field\";\nimport { withRouter } from \"react-router-dom\";\nimport {preservePathUpdateParams} from \"../utils/url\";\n\nclass Search extends Component {\n    state = {\n        active: false,\n        classString: 'search-bar',\n        searchString: ''\n    }\n\n    // Control visibility of search field\n    classString = () => {\n        return `search-bar ${(this.state.active) ? 'active' : 'hidden'}`;\n    }\n\n    // Handle input typing\n    updateSearch = (value) => {\n        this.setState({...this.state, searchString: value});\n    }\n\n    isActive = () => {\n        // Web is always active, mobile toggles\n        if(!isMobile){ return true; }\n        else{ return this.state.active; }\n    }\n\n    // On click of the search icon\n    onSearchClick = (value) => {\n        if(this.state.active){\n            if(this.state.searchString) this.submit();\n\n            // Toggle search field visibility off for mobile after submit\n            if(isMobile) this.setState({...this.state, active: false});\n        }\n        else{\n            // Toggle search field visibility for mobile\n            this.setState({\n                ...this.state,\n                active: true\n            }, () => {document.getElementsByClassName('react-search-field-input')[0].focus()});\n        }\n    }\n\n    submit = () => {\n        preservePathUpdateParams(this.props, {\n            'q': this.state.searchString,\n            'page': 1 // Reset the page to 1 for new searches\n        });\n\n        // Clear field and toggle search bar\n        this.setState({\n            ...this.state,\n            searchString: '',\n            active: (isMobile) ? false : true\n        });\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            active: this.isActive()\n        }, this.setState({\n            ...this.state,\n            classString: this.classString()\n        }));\n    }\n\n    render(){\n        return(\n            <SearchField\n              placeholder=\"Search...\"\n              onChange={(value, event) => { this.updateSearch(value) }}\n              onEnter={(value, event) => { this.submit() }}\n              onSearchClick={(value, event) => { this.onSearchClick(value) }}\n              searchText={this.state.searchString}\n              classNames={this.classString()}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        meta: state.meta,\n        brands: state.brands\n    };\n}\n\nexport default connect(mapStateToProps, {})(withRouter(Search));\n","import React from 'react';\nimport Search from '../components/Search';\n\nconst NotFound = () => {\n    return(\n        <div className=\"not-found\">\n            <h1 className=\"brand-color\">Oops!</h1>\n            <div>Looks like we couldn't find what you were looking for.</div>\n            <div className=\"try-search\"><Search /></div>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\n// https://reactjs.org/docs/error-boundaries.html\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.warn('ErrorBoundary Error:', error);\n        console.warn('ErrorBoundary Info:', info);\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.errorContent;\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport {getURLParam} from '../utils/url';\n\nconst ResultsBanner = (props) => {\n    if(getURLParam(props, 'q')){\n        return(\n            <div className=\"results-banner\">\n                Displaying Results for: <span>{getURLParam(props, 'q')}</span>\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default withRouter(ResultsBanner);\n","// Handle all the definitions for\n// All of the different types of dispatches\n// Prevents typos and throws more intelligent errors\n\n// Meta\nexport const META = 'meta';\nexport const RESET_META = 'reset_meta';\n\n// API\nexport const ENDPOINT = process.env.REACT_APP_DEFAULT_ENDPOINT;\nexport const SEARCH_BY_QUERY = 'get_data';\n\n// BRANDS\nexport const DEFAULT_BRAND = process.env.REACT_APP_DEFAULT_BRAND;\nexport const RESET_BRAND = 'reset_brand';\nexport const RESET_ALL_BRANDS = 'reset_all_brands';\nexport const UPDATE_ACTIVE_BRAND = 'update_active_brand';\nexport const UPDATE_ALL_BRAND_INFO = 'update_all_brand_info';\nexport const UPDATE_BRAND_ATTRIBUTE = 'update_brand_attribute';\n","import { META, RESET_META } from './types';\n\nexport const updateMeta = (metaInfo) => {\n    return {type: META, payload: metaInfo};\n}\n\nexport const resetMeta = (metaInfo) => {\n    return {type: RESET_META};\n}\n","import {ENDPOINT, SEARCH_BY_QUERY, UPDATE_BRAND_ATTRIBUTE} from \"./types\";\n\n// Call API with full query string\n// REQUIRED: q= (search)\n// Optional: category, brand, page\nexport const searchByQuery = (brand, queryString) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}${queryString}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Test function, will need to update once the real endpoint is built\n// Call the API and return the default results for a given category\nexport const searchByCategory = (brand, queryString) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}${queryString}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Test function, will need to update once the real endpoint is built\n// Call the API and return the default results for a given brand \nexport const searchByBrandDefault = (brand) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Call our service to get a list of categories for the active brand\nexport const getCategoriesByBrand = (brand) => {\n    const _endpoint = `${ENDPOINT}/${brand}/categories`;\n    return dispatch => {\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                let payload = {brand: brand, attribute: 'allCategories', value: res.categories}\n\n                // If an empty response is returned, return an array with an empty object\n                // Prevent errors later on in the event chain\n                if(!res.categories[0] || Object.keys(res.categories[0]).length === 0){\n                    payload['value'] = [{}];\n                }\n                dispatch({type: UPDATE_BRAND_ATTRIBUTE, payload: payload});\n            })\n            .catch(err => {\n                console.log( `Error fetching categories for ${brand}:`, err );\n\n                // If there is an error, return an array with an empty object\n                // Prevent further errors later on in the event chain\n                let payload = {brand: brand, attribute: 'allCategories', value: [{}]};\n                dispatch({type: UPDATE_BRAND_ATTRIBUTE, payload: payload});\n            });\n    }\n}\n","import {\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO,\n    UPDATE_BRAND_ATTRIBUTE\n} from './types';\n\nexport const resetBrand = (brand) => {\n    if(brand === 'all'){\n        return {type: RESET_ALL_BRANDS}\n    }\n    return {type: RESET_BRAND, payload: brand}\n}\n\nexport const updateActiveBrand = (brand) => {\n    return {type: UPDATE_ACTIVE_BRAND, payload: brand}\n}\n\nexport const updateAllBrandInfo = (infoObj) => {\n    return {type: UPDATE_ALL_BRAND_INFO, payload: infoObj}\n}\n\nexport const updateBrandAttribute = (brand, attribute, value) => {\n    return {type: UPDATE_BRAND_ATTRIBUTE, payload: {brand, attribute, value}}\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport Feed from '../pages/Feed';\nimport NotFound from '../pages/NotFound';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport ResultsBanner from '../components/ResultsBanner';\nimport {getURLParam} from \"../utils/url\";\nimport {\n    updateAllBrandInfo,\n    updateActiveBrand,\n    updateBrandAttribute,\n    getCategoriesByBrand,\n    searchByQuery,\n    searchByCategory,\n    searchByBrandDefault\n} from '../actions';\nimport {DEFAULT_BRAND} from '../actions/types';\n\nclass Routing extends Component {\n    // Listen for changes in the URL params and update the state accordingly\n    onRouteChanged = () =>{\n        let {match, location} = this.props;\n        let urlParams = queryString.parse(this.props.location.search);\n        let activeBrand = match.params.brand || location.pathname.split('/')[1] || DEFAULT_BRAND;\n\n        // Update the global brand info\n        this.props.updateAllBrandInfo({\n            activeBrand: activeBrand,\n            page: urlParams['page'] || 1,\n            search: urlParams['q'] || '',\n            category: urlParams['category'] || '',\n            queryString: location.search || ''\n        });\n\n        // Update the active brand\n        this.props.updateActiveBrand(activeBrand);\n\n        // Check if we need to fetch the categories list\n        this.handleCategories(activeBrand);\n\n        // Wait until all brand info has been updated, then\n        // Search for results to populate the feed\n        this.delegateSearch(activeBrand, urlParams['q'], urlParams['category']);\n    }\n\n    // Decide what kind of search to perform based on url params\n    delegateSearch = (brand, query, category) => {\n        brand = brand || this.props.brands.activeBrand || process.env.REACT_APP_DEFAULT_BRAND;\n        query = query || getURLParam(this.props, 'q');\n        category = category || getURLParam(this.props, 'category');\n\n        if(query){\n            console.log('search by query: ', brand, this.props.location.search);\n            // Search by brand and full query string\n            // (May also include category and page)\n            this.props.searchByQuery(brand, this.props.location.search);\n        }\n        else if(category){\n            console.log('search by category: ', brand, category);\n            // Search by brand and category\n            // Use entire query string to allow for paginated category search \n            this.props.searchByCategory(brand, this.props.location.search);\n        }\n        else{\n            console.log('search by brand default: ', brand);\n            // If no results exist in state then\n            // call the API and get default search\n            // results by brand\n            this.props.searchByBrandDefault(brand);\n        }\n    }\n\n    // Fetch a list of categories to search based on brand\n    handleCategories = (brand) => {\n        brand = brand || this.props.providers[this.props.activeBrand];\n        let categories = brand.allCategories;\n\n        // If there are no categories, fetch and populate\n        if(!categories || categories.length === 0){\n            this.props.getCategoriesByBrand(brand);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.onRouteChanged();\n        }\n    }\n\n    componentDidMount(){\n        console.log('Router props: ', this.props);\n        this.onRouteChanged();\n    }\n\n    render(){\n        return(\n            <Switch>\n                <Route exact path=\"/\" key=\"homeFeed\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <ResultsBanner />\n                            <Feed results={this.props.api.searchResults} />\n                        </ErrorBoundary>\n                    );\n                }} />\n            <Route exact path=\"/404\" key=\"404page\" component={NotFound} />\n                <Route path=\"/:brand\" key=\"brand\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <ResultsBanner />\n                            <Feed results={this.props.api.searchResults} />\n                        </ErrorBoundary>\n                    );\n                }} />\n            <Route key=\"404fallback\" component={NotFound} />\n            </Switch>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        brands: state.brands,\n        api: state.api\n    };\n}\n\nexport default connect(mapStateToProps, {\n    updateAllBrandInfo,\n    updateActiveBrand,\n    updateBrandAttribute,\n    getCategoriesByBrand,\n    searchByQuery,\n    searchByCategory,\n    searchByBrandDefault\n})(withRouter(Routing));\n","import React from 'react';\n\nconst Logo = () => {\n    return(\n        <a className=\"home-button secondary\" href=\"/\">\n            <div id=\"logo\"> Video<span className=\"brand-color\">Feed</span> </div>\n        </a>\n    );\n}\n\nexport default Logo;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nconst BrandsList = () => {\n    const renderLinks = () => {\n        let links = [];\n        let brands = require('../data/sample/brands.json');\n\n        for(let b in brands['brands']){\n            let brand = brands['brands'][b].brand.toLowerCase();\n            links.push(\n                <NavLink to={`/${brand}`} className=\"nav-link border-bottom truncate\" activeClassName=\"active\" key={b}>{brand}</NavLink>\n            );\n        }\n\n        return links;\n    }\n\n    return(\n        <ul className=\"navbar-nav\">{}\n            {renderLinks()}\n        </ul>\n    );\n}\n\nexport default BrandsList;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n// import { NavLink } from \"react-router-dom\";\nimport {getURLParam, preservePathUpdateParams} from '../utils/url';\n\nconst ParamLink = (props) => {\n    // Get the url's value of this ParamLink's param (used for active class)\n    const urlParam = getURLParam(props, props.param);\n\n    return(\n        <div\n            className={(urlParam === props.value) ?\n                `${props.className} ${props.activeClassName}`\n            : props.className}\n            onClick={() => {\n                preservePathUpdateParams(props, {[props.param]: props.value, 'page': 1})\n            }}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default withRouter(ParamLink);\n","import React from 'react';\nimport ParamLink from \"./ParamLink\";\n\n// TODO: Error handling for bad responses \nconst CategoriesList = (props) => {\n    const renderLinks = () => {\n        let links = [];\n\n        for(let c in props.categories){\n            let category = props.categories[c].category.toLowerCase();\n            links.push(\n                <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" key={c} value={category}>{category}</ParamLink>\n            );\n        }\n\n        if(links.length === 0) links = <i style={{'fontSize': '12px'}}>No Categories Found.</i>;\n        return links;\n    }\n\n    return( <ul className=\"navbar-nav\"> {renderLinks()} </ul> );\n}\n\nexport default CategoriesList;\n","import React from 'react';\n\nconst CollapsiblePanel = ({id, title, children}) => {\n    return(\n        <div className=\"panel-group\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <div className=\"panel-title\">\n                <div className=\"nav-link truncate\" data-toggle=\"collapse\" href={`#${id}`}>\n                    {title}\n                </div>\n            </div>\n            </div>\n            <div id={id} className=\"panel-collapse collapse\">\n              <div className=\"panel-body\">{children}</div>\n            </div>\n          </div>\n      </div>\n    );\n}\n\nexport default CollapsiblePanel;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserView} from \"react-device-detect\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport BrandsList from \"./BrandsList\";\nimport CategoriesList from \"./CategoriesList\";\nimport CollapsiblePanel from \"./CollapsiblePanel\";\nimport { getCategoriesByBrand } from '../actions';\n\n// TODO: Wrap nav items in error boundary \nclass NavItems extends Component {\n\n    render(){\n        return(\n            <>\n                <BrowserView>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item border-bottom\">\n                            <Search />\n                        </li>\n                    </ul>\n                </BrowserView>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item border-bottom\">\n                        <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"default\">\n                            Home Feed\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item border-bottom truncate\">\n                        <CollapsiblePanel\n                            id=\"brands-accordion\"\n                            title=\"Brands\"\n                        >\n                            <BrandsList />\n                        </CollapsiblePanel>\n                    </li>\n                    <li className=\"nav-item border-bottom truncate\">\n                        <CollapsiblePanel\n                            id=\"categories-accordion\"\n                            title=\"Categories\"\n                        >\n                            <CategoriesList categories={\n                                this.props.providers[this.props.activeBrand].allCategories\n                            }/>\n                        </CollapsiblePanel>\n                    </li>\n                </ul>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{ ...state.brands};\n}\n\nexport default connect(mapStateToProps, {getCategoriesByBrand})(withRouter(NavItems));\n","import React, {Component} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Logo from \"./Logo\";\nimport NavItems from './NavItems';\n\nclass MobileNav extends Component {\n    state ={isOpen: false}\n\n    toggleOpen = (force) => {\n        if(typeof force !== 'undefined'){\n            this.setState({...this.state, isOpen: force});\n        }\n        else{\n            this.setState({...this.state, isOpen: !this.state.isOpen});\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.toggleOpen(false);\n        }\n    }\n\n    render(){\n        return (\n            <nav className=\"navbar\">\n\n                <Logo />\n\n                <button className=\"navbar-toggler border-top border-bottom over-5\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded={(this.state.isOpen) ? 'true' : 'false'} aria-label=\"Toggle navigation\" onClick={() => {this.toggleOpen()}}></button>\n\n                <div className={`${(this.state.isOpen) ? 'show' : 'collapse'} navbar-collapse`} id=\"navbarSupportedContent1\">\n                    <NavItems />\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(MobileNav);\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nclass PartnerLogo extends Component {\n    render(){\n        return(\n            <div className=\"dynamic-partner-logo\">\n                <NavLink to={`/${this.props.activeBrand}`} key={this.props.activeBrand}>\n                    <img\n                        id=\"partner-logo\"\n                        className={this.props.className}\n                        src={this.props.partnerLogo}\n                        alt={this.props.alt || this.props.activeBrand}\n                    />\n                </NavLink>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{ ...state.brands};\n}\n\nexport default connect(mapStateToProps, {})(withRouter(PartnerLogo));\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {MobileView, BrowserView} from \"react-device-detect\";\nimport Logo from \"../components/Logo\";\nimport MobileNav from \"../components/MobileNav\";\nimport Search from \"../components/Search\";\nimport PartnerLogo from \"../components/PartnerLogo\";\n\nconst Header = (props) => {\n    let brand = props.match.params.brand || props.location.pathname.split('/')[1];\n    return (\n        <header className=\"super container-fluid\">\n            <MobileView viewClassName=\"mobile-nav\">\n                <MobileNav />\n                <Search />\n            </MobileView>\n            <BrowserView>\n                <Logo />\n                {(brand) ? <PartnerLogo /> : <Search /> }\n            </BrowserView>\n\n        </header>\n    );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport NavItems from './NavItems';\n\nconst Nav = () => {\n    return(\n        <BrowserView viewClassName=\"siderail-nav nav-left col-lg-2 col-xl-2 float-left border-right\">\n            <nav className=\"navbar web-nav\">\n                <NavItems />\n            </nav>\n        </BrowserView>\n    );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Routing from \"./routes/Routing\";\nimport Header from \"./modules/Header\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        console.log('App props: ', this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"app clear\">\n              <Header />\n              <Nav />\n\n              <div className=\"container col-sm-12 col-md-12 col-lg-10 col-xl-10 float-right clear\">\n                <div className=\"feed-wrapper row col float-right\">\n                  <Routing />\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { META, RESET_META } from '../actions/types';\nimport { mergeObjects } from '../utils/objects';\n\nconst INITIAL_STATE = {\n    'title': 'VideoFeed | Clean React UI',\n    'description': 'Reuseable React & SASS based components',\n    'keywords': '',\n    'subject': '',\n    'robots': 'index,follow',\n    'ogTitle': 'VideoFeed',\n    'ogImage': '../../public/favicon.ico',\n    'ogDescription': 'Reuseable React & SASS based components',\n    'ogSiteName': 'VideoFeed',\n    'ogType': '',\n    'ogURL': window.location.href\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case META:\n            let metaData = mergeObjects(INITIAL_STATE, action.payload);\n            return{...state, ...metaData}\n\n        case RESET_META:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","import {\n    createHooks\n} from '@wordpress/hooks';\n\nlet HookStore = createHooks();\n\nexport default HookStore;","import {\n    SEARCH_BY_QUERY\n} from '../actions/types';\nimport HookStore from '../Hooks';\n\nconst INITIAL_STATE = {\n    searchResults: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SEARCH_BY_QUERY:\n            console.log('Got Search Results:', action.payload)\n            let payload = HookStore.applyFilters('search_results', action.payload);\n            return {\n                ...state,\n                searchResults: payload\n            }\n\n        default:\n            return state;\n    }\n}","import {\n    DEFAULT_BRAND,\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO,\n    UPDATE_BRAND_ATTRIBUTE\n} from '../actions/types';\nimport * as brands from '../data/brand-defaults';\n\nconst INITIAL_STATE = {\n    activeBrand: DEFAULT_BRAND,\n    page: 1,\n    search: '',\n    category: '',\n    queryString: '',\n    partnerLogo: null,\n    providers: {\n        youtube: brands.youtube,\n        vimeo: brands.vimeo,\n        metacafe: brands.metacafe\n    }\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case UPDATE_ACTIVE_BRAND:\n            return{\n                ...state,\n                activeBrand: action.payload,\n                partnerLogo: state.providers[action.payload].logo,\n                page: state.providers[action.payload].page,\n                search: state.providers[action.payload].search,\n                category: state.providers[action.payload].category,\n                queryString: state.providers[action.payload].queryString\n            }\n\n        case UPDATE_ALL_BRAND_INFO:\n            return{\n                ...state,\n                activeBrand: action.payload.activeBrand,\n                page: action.payload.page,\n                search: action.payload.search,\n                category: action.payload.category,\n                queryString: action.payload.queryString,\n                providers: {\n                    ...state.providers,\n                    [action.payload.activeBrand]: {\n                        ...state.providers[action.payload.activeBrand],\n                        page: action.payload.page,\n                        search: action.payload.search,\n                        category: action.payload.category,\n                        queryString: action.payload.queryString\n                    }\n                }\n            }\n\n        case UPDATE_BRAND_ATTRIBUTE:\n            return{\n                ...state,\n                providers: {\n                    ...state.providers,\n                    [action.payload.brand]: {\n                        ...state.providers[action.payload.brand],\n                        [action.payload.attribute]: action.payload.value\n                    }\n                }\n            }\n\n        case RESET_BRAND:\n            return{\n                ...state,\n                providers: {\n                    [action.payload]: INITIAL_STATE.providers[action.payload]\n                }\n            }\n\n        case RESET_ALL_BRANDS:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","export const youtube = {\n    brandName: \"youtube\",\n    logo:\n        \"https://www.freeiconspng.com/uploads/youtube-logo-png-transparent-image-5.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const vimeo = {\n    brandName: \"vimeo\",\n    logo:\n        \"https://prowly-uploads.s3.eu-west-1.amazonaws.com/uploads/PressRoom/563/cover_photo/large_slack-imgs.com.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const metacafe = {\n    brandName: \"metacafe\",\n    logo: \"https://logonoid.com/images/metacafe-logo.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","import {combineReducers} from 'redux';\nimport MetaReducer from './MetaReducer';\nimport APIReducer from './APIReducer';\nimport BrandReducer from './BrandReducer';\n\nexport default combineReducers({\n    meta: MetaReducer,\n    api: APIReducer,\n    brands: BrandReducer\n});\n","// Grab a nested object by a given key and that key's value\nexport const getObjectByKeyVal = (arr, key, val) => {\n    var index = 0;\n    var r = arr.filter((obj, i) => {\n        if(obj[key] === val) index = i;\n        return obj[key] === val\n    })\n    return {[index]: r};\n}\n\nexport const getDeepObjectByKey = (obj, deepKey, val) => {\n    var result = null;\n    if(obj instanceof Array) {\n        for(var i = 0; i < obj.length; i++) {\n            result = getDeepObjectByKey(obj[i]);\n        }\n    }\n    else{\n        for(var prop in obj) {\n            if(prop === deepKey) {\n                if(val && obj[prop] === val) {\n                    return obj;\n                }\n                return obj;\n            }\n            if(obj[prop] instanceof Object || obj[prop] instanceof Array){\n                result = getDeepObjectByKey(obj[prop], deepKey);\n            }\n        }\n    }\n    return result;\n}\n\nexport const mergeObjects = (defaultObj, argObj) => {\n    let temp = {}\n    for(let key in defaultObj){\n        (argObj[key]) ? temp[key] = argObj[key] : temp[key] = defaultObj[key];\n    }\n    return temp;\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport MetaTags from 'react-meta-tags';\n\nclass Meta extends Component {\n    render(){\n        return(\n            <MetaTags>\n                <title>{this.props.title}</title>\n                <meta name=\"description\" content={this.props.description} />\n                <meta name=\"keywords\" content={this.props.keywords} />\n                <meta name=\"subject\" content={this.props.subject} />\n                <meta name=\"robots\" content={this.props.robots} />\n                <meta property=\"og:title\" content={this.props.ogTitle} />\n                <meta property=\"og:image\" content={this.props.ogImage} />\n                <meta property=\"og:site_name\" content={this.props.ogSiteName} />\n                <meta property=\"og:description\" content={this.props.ogDescription || this.props.description} />\n                <meta property=\"og:url\" content={this.props.ogURL || window.location.href} />\n            </MetaTags>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {...state.meta};\n}\n\nexport default connect(mapStateToProps, {})(Meta);\n","import React, {Component} from 'react';\nimport HookStore from '../../Hooks';\n\nexport class TestPlugin extends Component {\n    // Adds another entry to search data as a proof of filters\n    logData = (data) => {\n        data.videos = [...data.videos, data.videos[0]];\n        console.log('Manipulated search data from plugin: ', data);\n        return data;\n    }\n\n    // Proofs-of-concept for hook-based plugin architecture\n    listen = () => {\n        HookStore.addAction('after_plugin_registry', 'TestPlugin', () => {\n            console.log('Log from plugin: after_plugin_registry');\n        });\n\n        HookStore.addFilter( 'search_results', 'TestPlugin', this.logData , 10 );\n    }\n\n    componentDidMount(){\n        console.log('Test plugin loaded.');\n        this.listen();\n    }\n\n    render(){\n        return(<div>Test Plugin</div>);\n    }\n}\n","import React, {Component} from 'react';\nimport HookStore from '../../Hooks';\n\nexport class OtherTestPlugin extends Component {\n    // Adds another entry to search data as a proof of filters\n    logData = (data) => {\n        data.videos = [...data.videos, data.videos[0]];\n        console.log('Manipulated search data from plugin: ', data);\n        return data;\n    }\n\n    // Proofs-of-concept for hook-based plugin architecture\n    listen = () => {\n        HookStore.addAction('after_plugin_registry', 'TestPlugin', () => {\n            console.log('Log from plugin: after_plugin_registry');\n        });\n\n        HookStore.addFilter( 'search_results', 'TestPlugin', this.logData , 10 );\n    }\n\n    componentDidMount(){\n        console.log('Test plugin loaded.');\n        this.listen();\n    }\n\n    render(){\n        return(<div>Test Plugin 2</div>);\n    }\n}\n","/** * This component is build under the assumption that your file structure is as follows:\n* /\n* index.js\n* app.js\n* Hooks.js\n* -- components/\n* ---- PluginStore.js\n* -- actions/\n* ---- index.js\n* ---- action1.js\n* ---- action2.js\n* -- plugins/\n* ---- index.js\n* ---- plugin1.js\n* ---- plugin2.js\n*\n* Plugins will be required to export 1 high order component from their root (index.js).\n* Their directory will be added to the plugins directory.\n* The plugin must be exported from plugins/index.js in order to be connected.\n*\n* Plugins will be provided with a variety of hooks\n* to subscribe to using the @wordpress/hooks interface.\n* https://www.ibenic.com/use-wordpress-hooks-package-javascript-apps/\n*\n* To use this component, you would nest it inside your provider (if you have one)\n* then wrap your app inside of the PluginStore component.\n*\n* <Provider store={store}>\n*   <PluginStore>\n*       <App>\n*   </PluginStore>\n* </Provider>\n**/\n\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport HookStore from '../Hooks';\nimport ErrorBoundary from './ErrorBoundary';\n\n// We'll want to hook our plugins up to all of our actions\nimport * as actions from '../actions';\n\n// Let's assume plugins are added to/imported from plugins folder just like actions\nimport * as plugins from \"../plugins\";\n\nclass PluginStore extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            children: [this.props.children]\n        }\n    }\n\n    connectPluginsToComponent = () => {\n        // Push imported plugins to array so we can iterate over them\n        let _plugins = [];\n        for(let plugin in plugins){\n            // Need to convert the component function to a React element\n            _plugins.push(React.createElement(plugins[plugin], null, null));\n        }\n\n        // Map PluginStore props to each plugin\n        const connectedPlugins = React.Children.map([..._plugins], child => {\n            return(\n                // Protect our app from broken plugins\n                <ErrorBoundary errorContent={() => {\n                    console.log(`Error loading plugin: ${child.type.name}`)\n                }}>\n                    {React.cloneElement(child, {...this.props})}\n                </ErrorBoundary>\n            );\n        });\n\n        this.setState({\n            ...this.state, children: [this.props.children, ...connectedPlugins]}, () => {\n            // Fire off an event after our plugins are added to state and rendered\n            HookStore.doAction( 'after_plugin_registry' );\n        });\n    }\n\n    componentDidMount(){\n        // Fire off an event before any plugins get loaded\n        HookStore.doAction( 'before_plugin_registry' );\n\n        this.connectPluginsToComponent();\n    }\n\n    render() {\n        return (this.state.children);\n    }\n}\n\n// Hook our plugins up to our global state\nconst mapStateToProps = (state) => {\n    return{ ...state};\n}\n\n// Export component with all state and all dispatch actions\nexport default connect(mapStateToProps, {...actions})(PluginStore);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers'\nimport Meta from './components/Meta';\nimport PluginStore from './components/PluginStore';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, {}, applyMiddleware(ReduxThunk));\nconst rootElement = document.getElementById('root');\n\nlet _app = (\n    <Provider store={store}>\n        <PluginStore>\n            <Router>\n                <Meta />\n                <App />\n            </Router>\n        </PluginStore>\n    </Provider>\n);\n\nif(rootElement.hasChildNodes()){\n    ReactDOM.hydrate(_app, rootElement);\n}\nelse{\n    ReactDOM.render(_app, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}