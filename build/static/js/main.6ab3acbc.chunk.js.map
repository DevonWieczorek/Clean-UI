{"version":3,"sources":["components/Logo.js","components/Search.js","components/NavItems.js","components/MobileNav.js","components/Header.js","components/Nav.js","components/TileHeroLink.js","components/Pagination.js","modules/Feed.js","App.js","serviceWorker.js","index.js"],"names":["Logo","react_default","a","createElement","className","href","id","class","Search","state","active","classString","searchString","concat","_this","updateSearch","value","setState","Object","objectSpread","isActive","isMobile","onSearchClick","console","log","submit","document","getElementsByClassName","focus","this","_this2","index_min_default","placeholder","onChange","event","onEnter","searchText","classNames","Component","NavItems","Fragment","dist","components_Search","data-toggle","MobileNav","components_Logo","type","data-target","aria-controls","aria-expanded","aria-label","components_NavItems","Header","viewClassName","components_MobileNav","Nav","TileHeroLink","props","link","target","src","alt","title","children","Pagination","Feed","items","i","push","components_TileHeroLink","renderFeed","components_Pagination","App","components_Header","components_Nav","modules_Feed","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ab3acbc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Logo = () => {\n    return(\n        <a className=\"home-button secondary\" href=\"#\">\n            <div id=\"logo\"> Video<span class=\"brand-color\">Feed</span> </div>\n        </a>\n    );\n}\n\nexport default Logo;\n","import React, {Component} from 'react';\nimport { isMobile } from \"react-device-detect\";\nimport SearchField from \"react-search-field\";\n\nclass Search extends Component {\n    state = {\n        active: false,\n        classString: 'search-bar',\n        searchString: ''\n    }\n\n    classString = () => {\n        return `search-bar ${(this.state.active) ? 'active' : 'hidden'}`;\n    }\n\n    updateSearch = (value) => {\n        this.setState({...this.state, searchString: value});\n    }\n\n    isActive = () => {\n        if(!isMobile){ return true; }\n        else{ return this.state.active; }\n    }\n\n    onSearchClick = (value) => {\n        console.log('search: ', value);\n        if(this.state.active){\n            if(this.state.searchString) this.submit();\n            if(isMobile) this.setState({...this.state, active: false});\n        }\n        else{\n            this.setState({\n                ...this.state,\n                active: true\n            }, () => {document.getElementsByClassName('react-search-field-input')[0].focus()});\n        }\n    }\n\n    submit = () => {\n        console.log('submit: ', this.state.searchString);\n        this.setState({...this.state, searchString: ''});\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            active: this.isActive()\n        }, this.setState({\n            ...this.state,\n            classString: this.classString()\n        }));\n    }\n\n    render(){\n        return(\n            <SearchField\n              placeholder=\"Search...\"\n              onChange={(value, event) => { this.updateSearch(value) }}\n              onEnter={(value, event) => { this.submit() }}\n              onSearchClick={(value, event) => { this.onSearchClick(value) }}\n              searchText={this.state.searchString}\n              classNames={this.classString()}\n            />\n        );\n    }\n}\n\nexport default Search;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport Search from \"./Search\";\n\nconst NavItems = () => {\n    return(\n        <>\n            <BrowserView>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item border-bottom active\">\n                        <Search />\n                    </li>\n                </ul>\n            </BrowserView>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item border-bottom active\">\n                    <a className=\"nav-link truncate\" href=\"#\">Nav 1</a>\n                </li>\n                <li className=\"nav-item border-bottom\">\n                    <a className=\"nav-link truncate\" href=\"#\">Nav 2 with very long name goes here</a>\n                </li>\n                <li className=\"nav-item border-bottom\">\n                    <a className=\"nav-link\" href=\"#\">Nav 3 also has a long name but wraps instead</a>\n                </li>\n                <li className=\"nav-item border-bottom truncate\">\n                    <div class=\"panel-group\">\n                      <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                          <div class=\"panel-title\">\n                            <a className=\"nav-link truncate\" data-toggle=\"collapse\" href=\"#collapse1\">\n                                Nav with Subnav\n                            </a>\n                        </div>\n                        </div>\n                        <div id=\"collapse1\" class=\"panel-collapse collapse\">\n                          <div class=\"panel-body\">\n                              <ul className=\"navbar-nav\">\n                                  <li className=\"nav-item border-bottom truncate\">Sub 1</li>\n                                  <li className=\"nav-item border-bottom truncate\">Sub 2</li>\n                                  <li className=\"nav-item border-bottom truncate\">Sub 3 Has a very long name</li>\n                              </ul>\n                          </div>\n                        </div>\n                      </div>\n                  </div>\n                </li>\n                <li className=\"nav-item border-bottom\">\n                    <a className=\"nav-link\" href=\"#\">Nav 5</a>\n                </li>\n            </ul>\n        </>\n    );\n}\n\nexport default NavItems;\n","import React from 'react';\nimport Logo from \"./Logo\";\nimport NavItems from './NavItems';\n\nconst MobileNav = () => {\n    return (\n        <nav className=\"navbar\">\n\n            <Logo />\n\n            <button className=\"navbar-toggler border-top border-bottom\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent1\">\n                <NavItems />\n            </div>\n\n        </nav>\n    );\n}\n\nexport default MobileNav;\n","import React from \"react\";\nimport {MobileView, BrowserView} from \"react-device-detect\";\nimport Logo from \"./Logo\";\nimport MobileNav from \"./MobileNav\";\nimport Search from \"./Search\";\n\nconst Header = () => {\n    return (\n        <header className=\"super container-fluid\">\n            <MobileView viewClassName=\"mobile-nav\">\n                <MobileNav />\n            </MobileView>\n            <BrowserView>\n                <Logo />\n            </BrowserView>\n            <Search />\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport NavItems from './NavItems';\n\nconst Nav = () => {\n    return(\n        <BrowserView viewClassName=\"siderail-nav nav-left col-lg-2 col-xl-2 float-left border-right\">\n            <nav className=\"navbar web-nav\">\n                <NavItems />\n            </nav>\n        </BrowserView>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\n\nconst TileHeroLink = (props) => {\n    return(\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-auto mr-auto ml-auto tile tile-hero-link border-all rounded\">\n          <a href={props.link || '#'} className=\"tile-link\" target={props.target || \"_blank\"}>\n            <div className=\"tile-hero\">\n              <img src={props.src || 'http://www.fillmurray.com/300/200'} alt={props.title || 'Content Unavailable'}/>\n            </div>\n            <div className=\"tile-info\">\n              <div className=\"tile-title\">{props.title || 'Content Unavailable'}</div>\n              <div className=\"tile-details\">\n                {props.children || 'Nothing to see here.'}\n              </div>\n            </div>\n          </a>\n        </div>\n    );\n}\n\nexport default TileHeroLink;\n","import React from 'react';\n\nconst Pagination = () => {\n    return(\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination\">\n            <li className=\"page-item\"><a className=\"page-link\" href=\"#\">&laquo;</a></li>\n            <li className=\"active page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n            <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n            <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n            <li className=\"page-item\"><a className=\"page-link\" href=\"#\">&raquo;</a></li>\n          </ul>\n        </nav>\n    );\n}\n\nexport default Pagination;\n","import React from 'react';\nimport TileHeroLink from '../components/TileHeroLink';\nimport Pagination from '../components/Pagination';\n\nconst Feed = () => {\n    const renderFeed = () => {\n        let items = [];\n        for(var i = 0; i < 12; i++){\n            items.push(\n                <TileHeroLink\n                    title=\"Dynamic Title\"\n                    src=\"http://www.fillmurray.com/300/200\"\n                    link=\"#\"\n                >\n                    <div className=\"row\">\n                        <div className=\"single-detail col\">21.3k Views &middot; 78.6%</div>\n                        <div className=\"single-detail col\">31:24</div>\n                    </div>\n                </TileHeroLink>\n            );\n        }\n        return items;\n    }\n\n    return(\n        <>\n            {renderFeed()}\n\n            <center className=\"clear\">\n                <Pagination />\n            </center>\n        </>\n    );\n}\n\nexport default Feed;\n","import React, { Component } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport Feed from \"./modules/Feed\";\n\nclass App extends Component {\n  componentDidMount() {\n    console.log(`Is mobile ${isMobile}`);\n  }\n\n  render() {\n    return (\n      <div className=\"app clear\">\n        <Header />\n        <Nav />\n\n        <div className=\"container col-sm-12 col-md-12 col-lg-10 col-xl-10 float-right clear\">\n          <div className=\"feed-wrapper row col float-right\">\n            <Feed />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}