{"version":3,"sources":["modules/TileHeroLink.js","helpers/url.js","components/Pagination.js","helpers/misc.js","pages/Feed.js","pages/NotFound.js","routes/Routing.js","components/Logo.js","actions/types.js","components/Search.js","actions/APIActions.js","components/ParamLink.js","components/CollapsiblePanel.js","components/NavItems.js","components/MobileNav.js","modules/Header.js","components/Nav.js","App.js","reducers/MetaReducer.js","reducers/APIReducer.js","reducers/index.js","helpers/objects.js","components/Meta.js","serviceWorker.js","index.js"],"names":["TileHeroLink","props","react_default","a","createElement","className","href","link","target","src","alt","title","children","getURLParam","ctx","param","location","search","queryString","parse","updatedURLParamString","value","url","match","urlParams","concat","stringify","updateURLParams","pathWithParams","history","push","Pagination","state","currPage","MAX_PAGES","LAST_PAGE","updatePage","page","dec","_this","handlePageUpdate","inc","setState","Object","objectSpread","parseInt","onPageUpdate","dynamicPageButtons","buttons","_loop","index","i","classNames","onClick","this","lastPage","_this2","aria-label","ariaLabel","Component","withRouter","decimal","num","rounded","Math","ceil","abbvNumber","div_k","parseFloat","div_m","div_b","div_t","Feed","Fragment","min","max","items","modules_TileHeroLink","floor","random","renderFeed","components_Pagination","NotFound","Routing","react_router","exact","path","key","component","Logo","id","ENDPOINT","Search","active","classString","searchString","updateSearch","isActive","isMobile","onSearchClick","submit","document","getElementsByClassName","focus","preservePathUpdateParams","pathname","getData","index_min_default","placeholder","onChange","event","onEnter","searchText","connect","meta","dispatch","console","log","fetch","then","res","json","type","payload","catch","err","urlParam","activeClassName","CollapsiblePanel","_ref","data-toggle","NavItems","dist","components_Search","react_router_dom","to","components_CollapsiblePanel","components_ParamLink","MobileNav","components_Logo","data-target","aria-controls","aria-expanded","components_NavItems","Header","viewClassName","components_MobileNav","Nav","App","updateURL","modules_Header","components_Nav","routes_Routing","INITIAL_STATE","description","keywords","subject","robots","ogTitle","ogImage","ogDescription","ogSiteName","ogType","ogURL","window","data","combineReducers","arguments","length","undefined","action","metaData","defaultObj","argObj","temp","mergeObjects","api","Meta","lib_default","name","content","property","Boolean","hostname","store","createStore","reducer","applyMiddleware","ReduxThunk","ReactDOM","render","es","components_Meta","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98062e5b.chunk.js","sourcesContent":["import React from 'react';\n\nconst TileHeroLink = (props) => {\n    return(\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-auto mr-auto ml-auto tile tile-hero-link border-all rounded\">\n          <a href={props.link || '#'} className=\"tile-link\" target={props.target || \"_blank\"}>\n            <div className=\"tile-hero\">\n              <img src={props.src || 'http://www.fillmurray.com/300/200'} alt={props.title || 'Content Unavailable'}/>\n            </div>\n            <div className=\"tile-info\">\n              <div className=\"tile-title\">{props.title || 'Content Unavailable'}</div>\n              <div className=\"tile-details\">\n                {props.children || 'Nothing to see here.'}\n              </div>\n            </div>\n          </a>\n        </div>\n    );\n}\n\nexport default TileHeroLink;\n","import queryString from 'query-string';\n\nexport const getURLParam = (ctx, param, location) => {\n    if(!location) location = ctx.location.search;\n    const urlParams = queryString.parse(location);\n    return urlParams[param];\n}\n\nexport const updatedURLParamString = (ctx, param, value) => {\n    const url = ctx.match.url;\n    const urlParams = queryString.parse(ctx.location.search);\n    urlParams[param] = value;\n    let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n    return pathWithParams;\n}\n\nexport const updateURLParams = (ctx, param, value) => {\n    const pathWithParams = updatedURLParamString(ctx, param, value);\n    ctx.history.push(pathWithParams);\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { updateURLParams, getURLParam } from \"../helpers/url\";\n\nclass Pagination extends Component {\n    state = {\n        currPage: 1,\n        MAX_PAGES: 3,\n        LAST_PAGE: null\n    }\n\n    updatePage = (page) => {\n        switch(page){\n            case '-1':\n                let dec = this.state.currPage - 1;\n                if(dec < 1) dec = 1;\n                this.handlePageUpdate(dec);\n                break;\n            case '+1':\n                let inc = this.state.currPage + 1;\n                this.handlePageUpdate(inc);\n                break;\n            default:\n                this.handlePageUpdate(page);\n                break;\n        }\n    }\n\n    handlePageUpdate = (page) => {\n        this.setState({\n            ...this.state,\n            currPage: parseInt(page)\n        }, () => {\n            updateURLParams(this.props, \"page\", parseInt(page));\n            if(this.props.onPageUpdate) this.props.onPageUpdate();\n        });\n    }\n\n    dynamicPageButtons = () => {\n        const buttons = []\n        for(var i = 0; i < this.state.MAX_PAGES; i++){\n            let index = this.state.currPage + i;\n            let classNames = `page-item ${(index === this.state.currPage) ? 'active' : ''}`;\n            buttons.push(\n                <li className={`${classNames}`}>\n                  <span\n                    className=\"page-link\"\n                    onClick={() => { this.updatePage(index); }}\n                    page={index}\n                  >{index}</span>\n                </li>\n            );\n        }\n        return buttons;\n    }\n\n    componentDidMount(){\n        // Accept current page as a prop otherwise grab it as a url param\n        let page = this.props.page || getURLParam(this.props, 'page');\n        if(page) this.updatePage(parseInt(page));\n\n        // Allow setting a limit on the number of pages\n        if(this.props.lastPage && (this.props.currPage <= this.props.lastPage)){\n            this.setState({...this.state, LAST_PAGE: parseInt(this.props.lastPage)});\n        }\n    }\n\n    render() {\n        return (\n          <nav className=\"pagination-holder\" aria-label={this.props.ariaLabel}>\n            <ul className=\"pagination\">\n              {(this.state.currPage > 1) ?\n                  <li className=\"page-item\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('-1'); }}\n                      page=\"-1\"\n                    >&laquo;</span>\n                  </li>\n              : null}\n\n              {this.dynamicPageButtons()}\n\n              {(!this.state.LAST_PAGE || (this.state.currPage + (this.state.MAX_PAGES - 1) < this.state.LAST_PAGE)) ?\n                  <li className=\"page-item\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('+1'); }}\n                      page=\"+1\"\n                    >&raquo;</span>\n                  </li>\n              : null}\n            </ul>\n          </nav>\n        );\n    }\n}\n\nexport default withRouter(Pagination);\n","export const randomNumber = (min, max) => {\n    min = min || 0;\n    max = max || 10;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const decimal = (num) => {\n    let rounded = Math.ceil(num * 10) / 10;\n\n    if((rounded % 1) > 0){\n        return rounded;\n    }\n    else{\n        // Strip .0 for even numbers\n        return parseInt(rounded);\n    }\n}\n\nexport const abbvNumber = (num) => {\n    let div_k = parseFloat(num / 1000);\n    let div_m = parseFloat(div_k / 1000);\n    let div_b = parseFloat(div_m / 1000);\n    let div_t = parseFloat(div_b / 1000);\n\n    if(div_k < 1000){\n        return decimal(div_k) + 'K';\n    }\n    else if(div_m < 1000){\n        return decimal(div_m) + 'M';\n    }\n    else if(div_b < 1000){\n        return decimal(div_b) + 'B';\n    }\n    else{\n        return decimal(div_t) + 'T';\n    }\n}\n","import React from 'react';\nimport TileHeroLink from '../modules/TileHeroLink';\nimport Pagination from '../components/Pagination';\nimport {randomNumber, abbvNumber} from '../helpers/misc';\n\nconst Feed = (props) => {\n    const renderFeed = () => {\n        let items = [];\n        for(var i = 0; i < 12; i++){\n            items.push(\n                <TileHeroLink\n                    title=\"Dynamic Title\"\n                    src=\"http://www.fillmurray.com/300/200\"\n                    link=\"#\"\n                >\n                    <div className=\"row\">\n                        <div className=\"single-detail col\">{abbvNumber(randomNumber(10000, 76526173))} Views &middot; <span className=\"success\">78.6%</span></div>\n                        <div className=\"single-detail col\">31:24</div>\n                    </div>\n                </TileHeroLink>\n            );\n        }\n        return items;\n    }\n\n    return(\n        <>\n            {renderFeed()}\n\n            <center className=\"clear\">\n                <Pagination\n                    ariaLabel=\"footer-pagination\"\n                    onPageUpdate={() => {}}\n                    lastPage=\"10\"\n                />\n            </center>\n        </>\n    );\n}\n\nexport default Feed;\n","import React from 'react';\n\nconst NotFound = () => {\n    return(\n        <div>\n            <h1 className=\"brand-color\">Oops!</h1>\n            <div>Looks like we couldn't find what you were looking for.</div>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport Feed from '../pages/Feed';\nimport NotFound from '../pages/NotFound';\nimport { Route, Switch } from \"react-router-dom\";\n\nconst Routing = () => {\n    return(\n        <Switch>\n            <Route exact path=\"/\" key=\"homeFeed\" component={Feed} />\n            <Route path=\"/:brand\" key=\"brand\" component={Feed} />\n            <Route key=\"404\" component={NotFound} />\n        </Switch>\n    );\n}\n\nexport default Routing;\n","import React from 'react';\n\nconst Logo = () => {\n    return(\n        <a className=\"home-button secondary\" href=\"/\">\n            <div id=\"logo\"> Video<span className=\"brand-color\">Feed</span> </div>\n        </a>\n    );\n}\n\nexport default Logo;\n","// Handle all the definitions for\n// All of the different types of dispatches\n// Prevents typos and throws more intelligent errors\n\n// Meta\nexport const META = 'meta';\nexport const RESET_META = 'reset_meta';\n\n// API\nexport const ENDPOINT = 'https://videofeed-api-git-master.devonwieczorek93.now.sh/';\nexport const GET_DATA = 'get_data';\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { isMobile } from \"react-device-detect\";\nimport SearchField from \"react-search-field\";\nimport { withRouter } from \"react-router-dom\";\nimport {updateURLParams, updatedURLParamString} from \"../helpers/url\";\nimport {getData} from \"../actions\";\n\nclass Search extends Component {\n    state = {\n        active: false,\n        classString: 'search-bar',\n        searchString: ''\n    }\n\n    // Control visibility of search field\n    classString = () => {\n        return `search-bar ${(this.state.active) ? 'active' : 'hidden'}`;\n    }\n\n    updateSearch = (value) => {\n        this.setState({...this.state, searchString: value});\n    }\n\n    isActive = () => {\n        // Web is always active, mobile toggles\n        if(!isMobile){ return true; }\n        else{ return this.state.active; }\n    }\n\n    onSearchClick = (value) => {\n        if(this.state.active){\n            if(this.state.searchString) this.submit();\n            if(isMobile) this.setState({...this.state, active: false});\n        }\n        else{\n            this.setState({\n                ...this.state,\n                active: true\n            }, () => {document.getElementsByClassName('react-search-field-input')[0].focus()});\n        }\n    }\n\n    // Preserve the active path and then update the query param\n    preservePathUpdateParams = () => {\n        this.props.match.url = this.props.location.pathname;\n        this.props.history.push(updatedURLParamString(this.props, 'q', this.state.searchString));\n    }\n\n    submit = () => {\n        // updateURLParams(this.props, 'q', this.state.searchString);\n        this.preservePathUpdateParams();\n\n        // Clear field and toggle search bar\n        this.setState({\n            ...this.state,\n            searchString: '',\n            active: (isMobile) ? false : true\n        }, () => {\n            // Wait for URL to update then make the API call\n            this.props.getData(this.props.location.search);\n        });\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            active: this.isActive()\n        }, this.setState({\n            ...this.state,\n            classString: this.classString()\n        }));\n    }\n\n    render(){\n        return(\n            <SearchField\n              placeholder=\"Search...\"\n              onChange={(value, event) => { this.updateSearch(value) }}\n              onEnter={(value, event) => { this.submit() }}\n              onSearchClick={(value, event) => { this.onSearchClick(value) }}\n              searchText={this.state.searchString}\n              classNames={this.classString()}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {...state.meta};\n}\n\nexport default connect(mapStateToProps, {getData})(withRouter(Search));\n","import {ENDPOINT, GET_DATA} from \"./types\";\n\nexport const getData = queryString => {\n    return dispatch => {\n        console.log(`Calling ${ENDPOINT}${queryString}...`);\n        fetch(`${ENDPOINT}${queryString}`)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: GET_DATA, payload: res});\n            })\n            .catch(err => {\n                console.log(\n                    `There was an error getting data from ${ENDPOINT}${queryString}:`,\n                    err\n                );\n            });\n    };\n};\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n// import { NavLink } from \"react-router-dom\";\nimport {getURLParam, updatedURLParamString} from '../helpers/url';\n\nconst ParamLink = (props) => {\n    // Get the url's value of this ParamLink's param (used for active class)\n    const urlParam = getURLParam(props, props.param);\n\n    // Preserve the active path and then update the query param\n    const preservePathUpdateParams = () => {\n        props.match.url = props.location.pathname;\n        props.history.push(updatedURLParamString(props, props.param, props.value));\n    }\n\n    /*\n        // Results in youtube?/?caregory=test&page=1&q=query\n        // Beacause of updatedURLParamString()\n        <NavLink\n            to={{\n                pathname: props.location.pathname,\n                search: updatedURLParamString(props, props.param, props.value)\n            }}\n            className={props.className}\n            activeClassName={props.activeClassName}\n        >\n            {props.children}\n        </NavLink>\n    */\n\n    return(\n        <div\n            className={(urlParam === props.value) ? `${props.className} ${props.activeClassName}` : props.className}\n            onClick={() => {preservePathUpdateParams()}}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default withRouter(ParamLink);\n","import React from 'react';\n\nconst CollapsiblePanel = ({id, title, children}) => {\n    return(\n        <div className=\"panel-group\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <div className=\"panel-title\">\n                <div className=\"nav-link truncate\" data-toggle=\"collapse\" href={`#${id}`}>\n                    {title}\n                </div>\n            </div>\n            </div>\n            <div id={id} className=\"panel-collapse collapse\">\n              <div className=\"panel-body\">{children}</div>\n            </div>\n          </div>\n      </div>\n    );\n}\n\nexport default CollapsiblePanel;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport { NavLink } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport ParamLink from \"./ParamLink\";\nimport CollapsiblePanel from \"./CollapsiblePanel\";\n\nconst NavItems = () => {\n    return(\n        <>\n            <BrowserView>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item border-bottom active\">\n                        <Search />\n                    </li>\n                </ul>\n            </BrowserView>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item border-bottom active\">\n                    <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"active\">\n                        Home Feed\n                    </NavLink>\n                </li>\n                <li className=\"nav-item border-bottom truncate\">\n                    <CollapsiblePanel\n                        id=\"brands-accordion\"\n                        title=\"Brands\"\n                    >\n                        <ul className=\"navbar-nav\">\n                            <NavLink to=\"/youtube\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Youtube</NavLink>\n                            <NavLink to=\"/vimeo\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Vimeo</NavLink>\n                            <NavLink to=\"/twitch\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Twitch</NavLink>\n                        </ul>\n                    </CollapsiblePanel>\n                </li>\n                <li className=\"nav-item border-bottom truncate\">\n                    <CollapsiblePanel\n                        id=\"categories-accordion\"\n                        title=\"Categories\"\n                    >\n                        <ul className=\"navbar-nav\">\n                            <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" value=\"sports\">\n                                Sports\n                            </ParamLink>\n                            <ParamLink className=\"nav-link border-bottom truncate\"activeClassName=\"active\"  param=\"category\" value=\"comedy\">\n                                Comedy\n                            </ParamLink>\n                            <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" value=\"action\">\n                                Action\n                            </ParamLink>\n                            <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" value=\"live\">\n                                Live\n                            </ParamLink>\n                        </ul>\n                    </CollapsiblePanel>\n                </li>\n            </ul>\n        </>\n    );\n}\n\nexport default NavItems;\n","import React from 'react';\nimport Logo from \"./Logo\";\nimport NavItems from './NavItems';\n\nconst MobileNav = () => {\n    return (\n        <nav className=\"navbar\">\n\n            <Logo />\n\n            <button className=\"navbar-toggler border-top border-bottom\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent1\">\n                <NavItems />\n            </div>\n\n        </nav>\n    );\n}\n\nexport default MobileNav;\n","import React from \"react\";\nimport {MobileView, BrowserView} from \"react-device-detect\";\nimport Logo from \"../components/Logo\";\nimport MobileNav from \"../components/MobileNav\";\nimport Search from \"../components/Search\";\n\nconst Header = () => {\n    return (\n        <header className=\"super container-fluid\">\n            <MobileView viewClassName=\"mobile-nav\">\n                <MobileNav />\n            </MobileView>\n            <BrowserView>\n                <Logo />\n            </BrowserView>\n            <Search />\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport NavItems from './NavItems';\n\nconst Nav = () => {\n    return(\n        <BrowserView viewClassName=\"siderail-nav nav-left col-lg-2 col-xl-2 float-left border-right\">\n            <nav className=\"navbar web-nav\">\n                <NavItems />\n            </nav>\n        </BrowserView>\n    );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from 'query-string'\nimport Routing from \"./routes/Routing\";\nimport Header from \"./modules/Header\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n\n    getURLParam = (param) => {\n        const urlParams = queryString.parse(this.props.location.search);\n        return urlParams[param];\n    }\n\n    updateURLParams = (param, value, updateURL) => {\n        const url = this.props.match.url;\n        const urlParams = queryString.parse(this.props.location.search);\n        urlParams[param] = value;\n        let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n\n        if(updateURL){\n            this.props.history.push(pathWithParams);\n        }\n        else{\n            return pathWithParams;\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"app clear\">\n              <Header />\n              <Nav />\n\n              <div className=\"container col-sm-12 col-md-12 col-lg-10 col-xl-10 float-right clear\">\n                <div className=\"feed-wrapper row col float-right\">\n                  <Routing />\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { META, RESET_META } from '../actions/types';\nimport { mergeObjects } from '../helpers/objects';\n\nconst INITIAL_STATE = {\n    'title': 'VideoFeed | Clean React UI',\n    'description': 'Reuseable React & SASS based components',\n    'keywords': '',\n    'subject': '',\n    'robots': 'index,follow',\n    'ogTitle': 'VideoFeed',\n    'ogImage': '../../public/favicon.ico',\n    'ogDescription': 'Reuseable React & SASS based components',\n    'ogSiteName': 'VideoFeed',\n    'ogType': '',\n    'ogURL': window.location.href\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case META:\n            let metaData = mergeObjects(INITIAL_STATE, action.payload);\n            return{...state, ...metaData}\n\n        case RESET_META:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","import { GET_DATA } from '../actions/types';\n\nconst INITIAL_STATE = {data: null}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case GET_DATA:\n            console.log('Got Data:', action.payload)\n            return{...state, data: action.payload}\n\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from 'redux';\nimport MetaReducer from './MetaReducer';\nimport APIReducer from './APIReducer';\n\nexport default combineReducers({\n    meta: MetaReducer,\n    api: APIReducer\n});\n","// Grab a nested object by a given key and that key's value\nexport const getObjectByKeyVal = (arr, key, val) => {\n    var index = 0;\n    var r = arr.filter((obj, i) => {\n        if(obj[key] === val) index = i;\n        return obj[key] === val\n    })\n    return {[index]: r};\n}\n\nexport const getDeepObjectByKey = (obj, deepKey, val) => {\n    var result = null;\n    if(obj instanceof Array) {\n        for(var i = 0; i < obj.length; i++) {\n            result = getDeepObjectByKey(obj[i]);\n        }\n    }\n    else{\n        for(var prop in obj) {\n            if(prop === deepKey) {\n                if(val && obj[prop] === val) {\n                    return obj;\n                }\n                return obj;\n            }\n            if(obj[prop] instanceof Object || obj[prop] instanceof Array){\n                result = getDeepObjectByKey(obj[prop], deepKey);\n            }\n        }\n    }\n    return result;\n}\n\nexport const mergeObjects = (defaultObj, argObj) => {\n    let temp = {}\n    for(let key in defaultObj){\n        (argObj[key]) ? temp[key] = argObj[key] : temp[key] = defaultObj[key];\n    }\n    return temp;\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport MetaTags from 'react-meta-tags';\n\nclass Meta extends Component {\n    render(){\n        return(\n            <MetaTags>\n                <title>{this.props.title}</title>\n                <meta name=\"description\" content={this.props.description} />\n                <meta name=\"keywords\" content={this.props.keywords} />\n                <meta name=\"subject\" content={this.props.subject} />\n                <meta name=\"robots\" content={this.props.robots} />\n                <meta property=\"og:title\" content={this.props.ogTitle} />\n                <meta property=\"og:image\" content={this.props.ogImage} />\n                <meta property=\"og:site_name\" content={this.props.ogSiteName} />\n                <meta property=\"og:description\" content={this.props.ogDescription || this.props.description} />\n                <meta property=\"og:url\" content={this.props.ogURL || window.location.href} />\n            </MetaTags>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {...state.meta};\n}\n\nexport default connect(mapStateToProps, {})(Meta);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers'\nimport Meta from './components/Meta';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, {}, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Meta />\n            <App />\n        </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}