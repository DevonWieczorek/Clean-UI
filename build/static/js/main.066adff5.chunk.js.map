{"version":3,"sources":["modules/TileHeroLink.js","helpers/url.js","components/Pagination.js","pages/Feed.js","pages/NotFound.js","routes/Routing.js","components/Logo.js","components/Search.js","components/CollapsiblePanel.js","components/NavItems.js","components/MobileNav.js","modules/Header.js","components/Nav.js","App.js","reducers/MetaReducer.js","reducers/index.js","actions/types.js","helpers/objects.js","components/Meta.js","serviceWorker.js","index.js"],"names":["TileHeroLink","props","react_default","a","createElement","className","href","link","target","src","alt","title","children","updateURLParams","ctx","param","value","pathWithParams","url","match","urlParams","queryString","parse","location","search","concat","stringify","updatedURLParamString","history","push","Pagination","state","currPage","MAX_PAGES","LAST_PAGE","updatePage","page","console","log","_this","dec","handlePageUpdate","inc","setState","Object","objectSpread","parseInt","onPageUpdate","dynamicPageButtons","buttons","_loop","index","i","classNames","onClick","this","lastPage","_this2","aria-label","Component","withRouter","Feed","Fragment","items","modules_TileHeroLink","renderFeed","components_Pagination","NotFound","Routing","react_router","exact","path","key","component","Logo","id","Search","active","classString","searchString","updateSearch","isActive","isMobile","onSearchClick","submit","document","getElementsByClassName","focus","index_min_default","placeholder","onChange","event","onEnter","searchText","CollapsiblePanel","_ref","data-toggle","NavItems","dist","components_Search","react_router_dom","to","activeClassName","components_CollapsiblePanel","MobileNav","components_Logo","type","data-target","aria-controls","aria-expanded","components_NavItems","Header","viewClassName","components_MobileNav","Nav","App","getURLParam","updateURL","modules_Header","components_Nav","routes_Routing","INITIAL_STATE","description","keywords","subject","robots","ogTitle","ogImage","ogDescription","ogSiteName","ogType","ogURL","window","combineReducers","meta","arguments","length","undefined","action","metaData","defaultObj","argObj","temp","mergeObjects","payload","Meta","lib_default","name","content","property","connect","Boolean","hostname","store","createStore","reducer","applyMiddleware","ReduxThunk","ReactDOM","render","es","components_Meta","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.066adff5.chunk.js","sourcesContent":["import React from 'react';\n\nconst TileHeroLink = (props) => {\n    return(\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-auto mr-auto ml-auto tile tile-hero-link border-all rounded\">\n          <a href={props.link || '#'} className=\"tile-link\" target={props.target || \"_blank\"}>\n            <div className=\"tile-hero\">\n              <img src={props.src || 'http://www.fillmurray.com/300/200'} alt={props.title || 'Content Unavailable'}/>\n            </div>\n            <div className=\"tile-info\">\n              <div className=\"tile-title\">{props.title || 'Content Unavailable'}</div>\n              <div className=\"tile-details\">\n                {props.children || 'Nothing to see here.'}\n              </div>\n            </div>\n          </a>\n        </div>\n    );\n}\n\nexport default TileHeroLink;\n","import queryString from 'query-string';\n\nexport const getURLParam = (ctx, param, location) => {\n    if(!location) location = ctx.location.search;\n    const urlParams = queryString.parse(location);\n    return urlParams[param];\n}\n\nexport const updatedURLParamString = (ctx, param, value) => {\n    const url = ctx.match.url;\n    const urlParams = queryString.parse(ctx.location.search);\n    urlParams[param] = value;\n    let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n    return pathWithParams;\n}\n\nexport const updateURLParams = (ctx, param, value) => {\n    const pathWithParams = updatedURLParamString(ctx, param, value);\n    ctx.history.push(pathWithParams);\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { updateURLParams, getURLParam } from \"../helpers/url\";\n\nclass Pagination extends Component {\n    state = {\n        currPage: 1,\n        MAX_PAGES: 3,\n        LAST_PAGE: null\n    }\n\n    updatePage = (page) => {\n        console.log('update props', this.props)\n        switch(page){\n            case '-1':\n                let dec = this.state.currPage - 1;\n                if(dec < 1) dec = 1;\n                this.handlePageUpdate(dec);\n                break;\n            case '+1':\n                let inc = this.state.currPage + 1;\n                this.handlePageUpdate(inc);\n                break;\n            default:\n                this.handlePageUpdate(page);\n                break;\n        }\n    }\n\n    handlePageUpdate = (page) => {\n        this.setState({\n            ...this.state,\n            currPage: parseInt(page)\n        }, () => {\n            updateURLParams(this.props, \"page\", parseInt(page));\n            if(this.props.onPageUpdate) this.props.onPageUpdate();\n        });\n    }\n\n    dynamicPageButtons = () => {\n        const buttons = []\n        for(var i = 0; i < this.state.MAX_PAGES; i++){\n            let index = this.state.currPage + i;\n            let classNames = `page-item ${(index === this.state.currPage) ? 'active' : ''}`;\n            buttons.push(\n                <li className={`${classNames}`}>\n                  <span\n                    className=\"page-link\"\n                    onClick={() => { this.updatePage(index); }}\n                    page={index}\n                  >{index}</span>\n                </li>\n            );\n        }\n        return buttons;\n    }\n\n    componentDidMount(){\n        // Accept current page as a prop otherwise grab it as a url param\n        let page = this.props.page || getURLParam(this.props, 'page');\n        if(page) this.updatePage(parseInt(page));\n\n        // Allow setting a limit on the number of pages\n        if(this.props.lastPage){\n            this.setState({...this.state, LAST_PAGE: parseInt(this.props.lastPage)});\n        }\n    }\n\n    render() {\n        return (\n          <nav aria-label=\"Page navigation example\">\n            <ul className=\"pagination\">\n              {(this.state.currPage > 1) ?\n                  <li className=\"page-item\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('-1'); }}\n                      page=\"-1\"\n                    >&laquo;</span>\n                  </li>\n              : null}\n\n              {this.dynamicPageButtons()}\n\n              {(!this.state.LAST_PAGE || (this.state.currPage + (this.state.MAX_PAGES - 1) < this.state.LAST_PAGE)) ?\n                  <li className=\"page-item\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('+1'); }}\n                      page=\"+1\"\n                    >&raquo;</span>\n                  </li>\n              : null}\n            </ul>\n          </nav>\n        );\n    }\n}\n\nexport default withRouter(Pagination);\n","import React from 'react';\nimport TileHeroLink from '../modules/TileHeroLink';\nimport Pagination from '../components/Pagination';\n\nconst Feed = () => {\n    const renderFeed = () => {\n        let items = [];\n        for(var i = 0; i < 12; i++){\n            items.push(\n                <TileHeroLink\n                    title=\"Dynamic Title\"\n                    src=\"http://www.fillmurray.com/300/200\"\n                    link=\"#\"\n                >\n                    <div className=\"row\">\n                        <div className=\"single-detail col\">21.3k Views &middot; <span className=\"success\">78.6%</span></div>\n                        <div className=\"single-detail col\">31:24</div>\n                    </div>\n                </TileHeroLink>\n            );\n        }\n        return items;\n    }\n\n    return(\n        <>\n            {renderFeed()}\n\n            <center className=\"clear\">\n                <Pagination />\n            </center>\n        </>\n    );\n}\n\nexport default Feed;\n","import React from 'react';\n\nconst NotFound = () => {\n    return(\n        <div>\n            <h1 className=\"brand-color\">Oops!</h1>\n            <div>Looks like we couldn't find what you were looking for.</div>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport Feed from '../pages/Feed';\nimport NotFound from '../pages/NotFound';\nimport { Route, Switch } from \"react-router-dom\";\n\nconst Routing = () => {\n    return(\n        <Switch>\n            <Route exact path=\"/\" key=\"/-Feed\" component={Feed} />\n            <Route path=\"/:subdir\" key=\"/:subdir-Feed\"component={Feed} />\n            <Route key=\"404\" component={NotFound} />\n        </Switch>\n    );\n}\n\nexport default Routing;\n","import React from 'react';\n\nconst Logo = () => {\n    return(\n        <a className=\"home-button secondary\" href=\"#\">\n            <div id=\"logo\"> Video<span className=\"brand-color\">Feed</span> </div>\n        </a>\n    );\n}\n\nexport default Logo;\n","import React, {Component} from 'react';\nimport { isMobile } from \"react-device-detect\";\nimport SearchField from \"react-search-field\";\nimport { withRouter } from \"react-router-dom\";\nimport {updateURLParams} from \"../helpers/url\";\n\nclass Search extends Component {\n    state = {\n        active: false,\n        classString: 'search-bar',\n        searchString: ''\n    }\n\n    classString = () => {\n        return `search-bar ${(this.state.active) ? 'active' : 'hidden'}`;\n    }\n\n    updateSearch = (value) => {\n        this.setState({...this.state, searchString: value});\n    }\n\n    isActive = () => {\n        if(!isMobile){ return true; }\n        else{ return this.state.active; }\n    }\n\n    onSearchClick = (value) => {\n        if(this.state.active){\n            if(this.state.searchString) this.submit();\n            if(isMobile) this.setState({...this.state, active: false});\n        }\n        else{\n            this.setState({\n                ...this.state,\n                active: true\n            }, () => {document.getElementsByClassName('react-search-field-input')[0].focus()});\n        }\n    }\n\n    submit = () => {\n        console.log('submit: ', this.state.searchString);\n        updateURLParams(this.props, 'q', this.state.searchString);\n        this.setState({...this.state, searchString: ''});\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            active: this.isActive()\n        }, this.setState({\n            ...this.state,\n            classString: this.classString()\n        }));\n    }\n\n    render(){\n        return(\n            <SearchField\n              placeholder=\"Search...\"\n              onChange={(value, event) => { this.updateSearch(value) }}\n              onEnter={(value, event) => { this.submit() }}\n              onSearchClick={(value, event) => { this.onSearchClick(value) }}\n              searchText={this.state.searchString}\n              classNames={this.classString()}\n            />\n        );\n    }\n}\n\nexport default withRouter(Search);\n","import React from 'react';\n\nconst CollapsiblePanel = ({id, title, children}) => {\n    return(\n        <div className=\"panel-group\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <div className=\"panel-title\">\n                <div className=\"nav-link truncate\" data-toggle=\"collapse\" href={`#${id}`}>\n                    {title}\n                </div>\n            </div>\n            </div>\n            <div id={id} className=\"panel-collapse collapse\">\n              <div className=\"panel-body\">{children}</div>\n            </div>\n          </div>\n      </div>\n    );\n}\n\nexport default CollapsiblePanel;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport { NavLink } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport CollapsiblePanel from \"./CollapsiblePanel\";\n\nconst NavItems = () => {\n    return(\n        <>\n            <BrowserView>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item border-bottom active\">\n                        <Search />\n                    </li>\n                </ul>\n            </BrowserView>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item border-bottom active\">\n                    <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"active\">Nav 1</NavLink>\n                </li>\n                <li className=\"nav-item border-bottom\">\n                    <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"active\">\n                        Nav 2 with very very very long name goes here\n                    </NavLink>\n                </li>\n                <li className=\"nav-item border-bottom\">\n                    <NavLink to=\"/\" className=\"nav-link\" activeClassName=\"active\">\n                        Nav 3 also has a very very long name but wraps instead\n                    </NavLink>\n                </li>\n                <li className=\"nav-item border-bottom truncate\">\n                    <CollapsiblePanel\n                        id=\"subnav1\"\n                        title=\"Nav with Subnav\"\n                    >\n                        <ul className=\"navbar-nav\">\n                            <NavLink to=\"/\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Sub 1</NavLink>\n                            <NavLink to=\"/\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Sub 2</NavLink>\n                            <NavLink to=\"/\" className=\"nav-link border-bottom truncate\" activeClassName=\"active\">Sub 3 Has a very long name</NavLink>\n                        </ul>\n                    </CollapsiblePanel>\n                </li>\n                <li className=\"nav-item border-bottom\">\n                    <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"active\">Sub 1</NavLink>\n                </li>\n            </ul>\n        </>\n    );\n}\n\nexport default NavItems;\n","import React from 'react';\nimport Logo from \"./Logo\";\nimport NavItems from './NavItems';\n\nconst MobileNav = () => {\n    return (\n        <nav className=\"navbar\">\n\n            <Logo />\n\n            <button className=\"navbar-toggler border-top border-bottom\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent1\">\n                <NavItems />\n            </div>\n\n        </nav>\n    );\n}\n\nexport default MobileNav;\n","import React from \"react\";\nimport {MobileView, BrowserView} from \"react-device-detect\";\nimport Logo from \"../components/Logo\";\nimport MobileNav from \"../components/MobileNav\";\nimport Search from \"../components/Search\";\n\nconst Header = () => {\n    return (\n        <header className=\"super container-fluid\">\n            <MobileView viewClassName=\"mobile-nav\">\n                <MobileNav />\n            </MobileView>\n            <BrowserView>\n                <Logo />\n            </BrowserView>\n            <Search />\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport NavItems from './NavItems';\n\nconst Nav = () => {\n    return(\n        <BrowserView viewClassName=\"siderail-nav nav-left col-lg-2 col-xl-2 float-left border-right\">\n            <nav className=\"navbar web-nav\">\n                <NavItems />\n            </nav>\n        </BrowserView>\n    );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from 'query-string'\nimport Routing from \"./routes/Routing\";\nimport Header from \"./modules/Header\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n\n    getURLParam = (param) => {\n        const urlParams = queryString.parse(this.props.location.search);\n        return urlParams[param];\n    }\n\n    updateURLParams = (param, value, updateURL) => {\n        const url = this.props.match.url;\n        const urlParams = queryString.parse(this.props.location.search);\n        urlParams[param] = value;\n        let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n\n        if(updateURL){\n            this.props.history.push(pathWithParams);\n        }\n        else{\n            return pathWithParams;\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"app clear\">\n              <Header />\n              <Nav />\n\n              <div className=\"container col-sm-12 col-md-12 col-lg-10 col-xl-10 float-right clear\">\n                <div className=\"feed-wrapper row col float-right\">\n                  <Routing />\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { META, RESET_META } from '../actions/types';\nimport { mergeObjects } from '../helpers/objects';\n\nconst INITIAL_STATE = {\n    'title': 'VideoFeed | Clean React UI',\n    'description': 'Reuseable React & SASS based components',\n    'keywords': '',\n    'subject': '',\n    'robots': 'index,follow',\n    'ogTitle': 'VideoFeed',\n    'ogImage': '../../public/favicon.ico',\n    'ogDescription': 'Reuseable React & SASS based components',\n    'ogSiteName': 'VideoFeed',\n    'ogType': '',\n    'ogURL': window.location.href\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case META:\n            let metaData = mergeObjects(INITIAL_STATE, action.payload);\n            return{...state, ...metaData}\n\n        case RESET_META:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from 'redux';\nimport MetaReducer from './MetaReducer';\n\nexport default combineReducers({\n    meta: MetaReducer\n});\n","// Handle all the definitions for\n// All of the different types of dispatches\n// Prevents typos and throws more intelligent errors\n\n// Meta\nexport const META = 'meta';\nexport const RESET_META = 'reset_meta';\n","// Grab a nested object by a given key and that key's value\nexport const getObjectByKeyVal = (arr, key, val) => {\n    var index = 0;\n    var r = arr.filter((obj, i) => {\n        if(obj[key] === val) index = i;\n        return obj[key] === val\n    })\n    return {[index]: r};\n}\n\nexport const getDeepObjectByKey = (obj, deepKey, val) => {\n    var result = null;\n    if(obj instanceof Array) {\n        for(var i = 0; i < obj.length; i++) {\n            result = getDeepObjectByKey(obj[i]);\n        }\n    }\n    else{\n        for(var prop in obj) {\n            if(prop === deepKey) {\n                if(val && obj[prop] === val) {\n                    return obj;\n                }\n                return obj;\n            }\n            if(obj[prop] instanceof Object || obj[prop] instanceof Array){\n                result = getDeepObjectByKey(obj[prop], deepKey);\n            }\n        }\n    }\n    return result;\n}\n\nexport const mergeObjects = (defaultObj, argObj) => {\n    let temp = {}\n    for(let key in defaultObj){\n        (argObj[key]) ? temp[key] = argObj[key] : temp[key] = defaultObj[key];\n    }\n    return temp;\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport MetaTags from 'react-meta-tags';\n\nclass Meta extends Component {\n    render(){\n        return(\n            <MetaTags>\n                <title>{this.props.title}</title>\n                <meta name=\"description\" content={this.props.description} />\n                <meta name=\"keywords\" content={this.props.keywords} />\n                <meta name=\"subject\" content={this.props.subject} />\n                <meta name=\"robots\" content={this.props.robots} />\n                <meta property=\"og:title\" content={this.props.ogTitle} />\n                <meta property=\"og:image\" content={this.props.ogImage} />\n                <meta property=\"og:site_name\" content={this.props.ogSiteName} />\n                <meta property=\"og:description\" content={this.props.ogDescription || this.props.description} />\n                <meta property=\"og:url\" content={this.props.ogURL || window.location.href} />\n            </MetaTags>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {...state.meta};\n}\n\nexport default connect(mapStateToProps, {})(Meta);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers'\nimport Meta from './components/Meta';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, {}, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Meta />\n            <App />\n        </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}