{"version":3,"sources":["utils/url.js","actions/types.js","actions/APIActions.js","components/Search.js","pages/NotFound.js","modules/TileHeroLink.js","components/Pagination.js","utils/misc.js","pages/Feed.js","components/ErrorBoundary.js","components/ResultsBanner.js","routes/Routing.js","actions/BrandActions.js","components/Logo.js","components/BrandsList.js","components/ParamLink.js","components/CategoriesList.js","components/CollapsiblePanel.js","components/NavItems.js","components/MobileNav.js","components/PartnerLogo.js","modules/Header.js","components/Nav.js","App.js","reducers/MetaReducer.js","reducers/APIReducer.js","reducers/BrandReducer.js","data/brand-defaults/youtube.js","data/brand-defaults/vimeo.js","data/brand-defaults/metacafe.js","reducers/index.js","utils/objects.js","components/Meta.js","serviceWorker.js","index.js"],"names":["getURLParam","ctx","param","location","search","queryString","parse","updatedURLParamString","value","url","match","urlParams","concat","stringify","updateURLParams","pathWithParams","history","push","ENDPOINT","process","DEFAULT_BRAND","searchByQuery","brand","dispatch","_endpoint","console","log","fetch","then","res","json","type","payload","catch","err","getCategoriesByBrand","attribute","categories","Object","keys","length","Search","state","active","classString","searchString","_this","updateSearch","setState","objectSpread","isActive","isMobile","onSearchClick","submit","document","getElementsByClassName","focus","preservePathUpdateParams","props","pathname","brands","activeBrand","this","_this2","react_default","a","createElement","index_min_default","placeholder","onChange","event","onEnter","searchText","classNames","Component","connect","meta","withRouter","NotFound","className","components_Search","TileHeroLink","href","link","target","src","alt","title","children","Pagination","currPage","MAX_PAGES","LAST_PAGE","updatePage","page","dec","handlePageUpdate","inc","INITIAL","arguments","undefined","parseInt","onPageUpdate","dynamicPageButtons","buttons","_loop","index","i","key","onClick","lastPage","aria-label","ariaLabel","rel","decimal","num","rounded","Math","ceil","abbvNumber","div_k","parseFloat","div_m","div_b","div_t","Fragment","results","pages_NotFound","items","videos","video","modules_TileHeroLink","toFixed","renderFeed","components_Pagination","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","error","info","warn","errorContent","Routing","onRouteChanged","_this$props","params","split","delegateSearch","updateAllBrandInfo","category","updateActiveBrand","handleCategories","query","searchByCategory","api","searchResults","searchByBrandDefault","providers","allCategories","prevProps","react_router","exact","path","component","components_ErrorBoundary","components_ResultsBanner","pages_Feed","infoObj","updateBrandAttribute","Logo","id","BrandsList","links","require","b","toLowerCase","react_router_dom","to","activeClassName","renderLinks","urlParam","CategoriesList","c","components_ParamLink","style","fontSize","CollapsiblePanel","_ref","data-toggle","NavItems","dist","components_CollapsiblePanel","components_BrandsList","components_CategoriesList","MobileNav","isOpen","toggleOpen","force","components_Logo","data-target","aria-controls","aria-expanded","components_NavItems","PartnerLogo","partnerLogo","viewClassName","components_MobileNav","components_PartnerLogo","Nav","App","modules_Header","components_Nav","routes_Routing","INITIAL_STATE","description","keywords","subject","robots","ogTitle","ogImage","ogDescription","ogSiteName","ogType","ogURL","window","youtube","brandName","logo","vimeo","metacafe","combineReducers","action","metaData","defaultObj","argObj","temp","mergeObjects","defineProperty","Meta","lib_default","name","content","property","Boolean","hostname","store","createStore","reducer","applyMiddleware","ReduxThunk","ReactDOM","render","es","components_Meta","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70406aea.chunk.js","sourcesContent":["import queryString from 'query-string';\n\n// Query string requires props to be able to access location.search\n// Pass in props as ctx when calling query-string related functions \n\nexport const getURLParam = (ctx, param, location) => {\n    if(!location) location = ctx.location.search;\n    const urlParams = queryString.parse(location);\n    return urlParams[param];\n}\n\nexport const updatedURLParamString = (ctx, param, value) => {\n    const url = ctx.match.url;\n    const urlParams = queryString.parse(ctx.location.search);\n    urlParams[param] = value;\n    let pathWithParams = `${url}?${queryString.stringify(urlParams)}`;\n    return pathWithParams;\n}\n\nexport const updateURLParams = (ctx, param, value) => {\n    const pathWithParams = updatedURLParamString(ctx, param, value);\n    ctx.history.push(pathWithParams);\n}\n","// Handle all the definitions for\n// All of the different types of dispatches\n// Prevents typos and throws more intelligent errors\n\n// Meta\nexport const META = 'meta';\nexport const RESET_META = 'reset_meta';\n\n// API\nexport const ENDPOINT = process.env.REACT_APP_DEFAULT_ENDPOINT;\nexport const SEARCH_BY_QUERY = 'get_data';\n\n// BRANDS\nexport const DEFAULT_BRAND = process.env.REACT_APP_DEFAULT_BRAND;\nexport const RESET_BRAND = 'reset_brand';\nexport const RESET_ALL_BRANDS = 'reset_all_brands';\nexport const UPDATE_ACTIVE_BRAND = 'update_active_brand';\nexport const UPDATE_ALL_BRAND_INFO = 'update_all_brand_info';\nexport const UPDATE_BRAND_ATTRIBUTE = 'update_brand_attribute';\n","import {ENDPOINT, SEARCH_BY_QUERY, UPDATE_BRAND_ATTRIBUTE} from \"./types\";\n\n// Call API with full query string\n// REQUIRED: q= (search)\n// Optional: category, brand, page\nexport const searchByQuery = (brand, queryString) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}${queryString}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Test function, will need to update once the real endpoint is built\nexport const searchByCategory = (brand, queryString) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}${queryString}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Test function, will need to update once the real endpoint is built\nexport const searchByBrandDefault = (brand) => {\n    return dispatch => {\n        let _endpoint = `${ENDPOINT}/${brand}`;\n        console.log(`Calling ${_endpoint}...`);\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                dispatch({type: SEARCH_BY_QUERY, payload: res});\n            })\n            .catch(err => {\n                console.log(`There was an error getting data from ${_endpoint}:`, err);\n            });\n    };\n};\n\n// Call our service to get a list of categories for the active brand\nexport const getCategoriesByBrand = (brand) => {\n    const _endpoint = `${ENDPOINT}/${brand}/categories`;\n    return dispatch => {\n        fetch(_endpoint)\n            .then(res => res.json())\n            .then(res => {\n                let payload = {brand: brand, attribute: 'allCategories', value: res.categories}\n\n                // If an empty response is returned, return an array with an empty object\n                // Prevent errors later on in the event chain\n                if(!res.categories[0] || Object.keys(res.categories[0]).length === 0){\n                    payload['value'] = [{}];\n                }\n                dispatch({type: UPDATE_BRAND_ATTRIBUTE, payload: payload});\n            })\n            .catch(err => {\n                console.log( `Error fetching categories for ${brand}:`, err );\n\n                // If there is an error, return an array with an empty object\n                // Prevent further errors later on in the event chain\n                let payload = {brand: brand, attribute: 'allCategories', value: [{}]};\n                dispatch({type: UPDATE_BRAND_ATTRIBUTE, payload: payload});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { isMobile } from \"react-device-detect\";\nimport SearchField from \"react-search-field\";\nimport { withRouter } from \"react-router-dom\";\nimport {updatedURLParamString} from \"../utils/url\";\nimport {searchByQuery} from \"../actions\";\n\nclass Search extends Component {\n    state = {\n        active: false,\n        classString: 'search-bar',\n        searchString: ''\n    }\n\n    // Control visibility of search field\n    classString = () => {\n        return `search-bar ${(this.state.active) ? 'active' : 'hidden'}`;\n    }\n\n    // Handle input typing\n    updateSearch = (value) => {\n        this.setState({...this.state, searchString: value});\n    }\n\n    isActive = () => {\n        // Web is always active, mobile toggles\n        if(!isMobile){ return true; }\n        else{ return this.state.active; }\n    }\n\n    // On click of the search icon\n    onSearchClick = (value) => {\n        if(this.state.active){\n            if(this.state.searchString) this.submit();\n\n            // Toggle search field visibility off for mobile after submit\n            if(isMobile) this.setState({...this.state, active: false});\n        }\n        else{\n            // Toggle search field visibility for mobile\n            this.setState({\n                ...this.state,\n                active: true\n            }, () => {document.getElementsByClassName('react-search-field-input')[0].focus()});\n        }\n    }\n\n    // Preserve the active path and then update the query param\n    preservePathUpdateParams = () => {\n        this.props.match.url = this.props.location.pathname;\n        this.props.history.push(updatedURLParamString(this.props, 'q', this.state.searchString));\n    }\n\n    submit = () => {\n        this.preservePathUpdateParams();\n\n        // Clear field and toggle search bar\n        this.setState({\n            ...this.state,\n            searchString: '',\n            active: (isMobile) ? false : true\n        }, () => {\n            // Wait for URL to update then make the API call\n            this.props.searchByQuery(this.props.brands.activeBrand, this.props.location.search);\n        });\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            active: this.isActive()\n        }, this.setState({\n            ...this.state,\n            classString: this.classString()\n        }));\n    }\n\n    render(){\n        return(\n            <SearchField\n              placeholder=\"Search...\"\n              onChange={(value, event) => { this.updateSearch(value) }}\n              onEnter={(value, event) => { this.submit() }}\n              onSearchClick={(value, event) => { this.onSearchClick(value) }}\n              searchText={this.state.searchString}\n              classNames={this.classString()}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        meta: state.meta,\n        brands: state.brands\n    };\n}\n\nexport default connect(mapStateToProps, { searchByQuery })(withRouter(Search));\n","import React from 'react';\nimport Search from '../components/Search';\n\nconst NotFound = () => {\n    return(\n        <div className=\"not-found\">\n            <h1 className=\"brand-color\">Oops!</h1>\n            <div>Looks like we couldn't find what you were looking for.</div>\n            <div className=\"try-search\"><Search /></div>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React from 'react';\n\nconst TileHeroLink = (props) => {\n    return(\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-auto mr-auto ml-auto tile tile-hero-link border-all rounded\">\n          <a href={props.link || '#'} className=\"tile-link\" target={props.target || \"_blank\"}>\n            <div className=\"tile-hero\">\n              <img src={props.src || 'http://www.fillmurray.com/300/200'} alt={props.title || 'Content Unavailable'}/>\n            </div>\n            <div className=\"tile-info\">\n              <div className=\"tile-title\">{props.title || 'Content Unavailable'}</div>\n              <div className=\"tile-details\">\n                {props.children || 'Nothing to see here.'}\n              </div>\n            </div>\n          </a>\n        </div>\n    );\n}\n\nexport default TileHeroLink;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { updateURLParams, getURLParam } from \"../utils/url\";\n\nclass Pagination extends Component {\n    state = {\n        currPage: 1,\n        MAX_PAGES: 3,\n        LAST_PAGE: null\n    }\n\n    updatePage = (page) => {\n        switch(page){\n            case '-1':\n                let dec = this.state.currPage - 1;\n                if(dec < 1) dec = 1;\n                this.handlePageUpdate(dec);\n                break;\n            case '+1':\n                let inc = this.state.currPage + 1;\n                this.handlePageUpdate(inc);\n                break;\n            default:\n                this.handlePageUpdate(page);\n                break;\n        }\n    }\n\n    handlePageUpdate = (page, INITIAL = false) => {\n        this.setState({\n            ...this.state,\n            currPage: parseInt(page)\n        }, () => {\n            updateURLParams(this.props, \"page\", parseInt(page));\n            // INITIAL flag was added to prevent unintentional callback on page load\n            if(!INITIAL && this.props.onPageUpdate) this.props.onPageUpdate();\n        });\n    }\n\n    dynamicPageButtons = () => {\n        const buttons = []\n        for(var i = 0; i < this.state.MAX_PAGES; i++){\n            let index = this.state.currPage + i;\n            let classNames = `page-item ${(index === this.state.currPage) ? 'active' : ''}`;\n            buttons.push(\n                <li className={`${classNames}`} key={index}>\n                  <span\n                    className=\"page-link\"\n                    onClick={() => { this.updatePage(index); }}\n                    page={index}\n                  >{index}</span>\n                </li>\n            );\n        }\n        return buttons;\n    }\n\n    componentDidMount(){\n        // Accept current page as a prop otherwise grab it as a url param\n        let page = this.props.page || getURLParam(this.props, 'page') || 1;\n        this.setState({ ...this.state, currPage: parseInt(page) });\n\n        // Allow setting a limit on the number of pages\n        if(this.props.lastPage && (this.props.currPage <= this.props.lastPage)){\n            this.setState({...this.state, LAST_PAGE: parseInt(this.props.lastPage)});\n        }\n    }\n\n    render() {\n        return (\n          <nav className=\"pagination-holder\" aria-label={this.props.ariaLabel}>\n            <ul className=\"pagination\">\n              {(this.state.currPage > 1) ?\n                  <li className=\"page-item\" key=\"-1\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('-1'); }}\n                      page=\"-1\"\n                      rel=\"previous\"\n                    >&laquo;</span>\n                  </li>\n              : null}\n\n              {this.dynamicPageButtons()}\n\n              {(!this.state.LAST_PAGE || (this.state.currPage + (this.state.MAX_PAGES - 1) < this.state.LAST_PAGE)) ?\n                  <li className=\"page-item\" key=\"+1\">\n                    <span\n                      className=\"page-link\"\n                      onClick={() => { this.updatePage('+1'); }}\n                      page=\"+1\"\n                      rel=\"next\"\n                    >&raquo;</span>\n                  </li>\n              : null}\n            </ul>\n          </nav>\n        );\n    }\n}\n\nexport default withRouter(Pagination);\n","export const randomNumber = (min, max) => {\n    min = min || 0;\n    max = max || 10;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const decimal = (num) => {\n    let rounded = Math.ceil(num * 10) / 10;\n\n    if((rounded % 1) > 0){\n        return rounded;\n    }\n    else{\n        // Strip .0 for even numbers\n        return parseInt(rounded);\n    }\n}\n\nexport const abbvNumber = (num) => {\n    let div_k = parseFloat(num / 1000);\n    let div_m = parseFloat(div_k / 1000);\n    let div_b = parseFloat(div_m / 1000);\n    let div_t = parseFloat(div_b / 1000);\n\n    if(div_k < 1000){\n        return decimal(div_k) + 'K';\n    }\n    else if(div_m < 1000){\n        return decimal(div_m) + 'M';\n    }\n    else if(div_b < 1000){\n        return decimal(div_b) + 'B';\n    }\n    else{\n        return decimal(div_t) + 'T';\n    }\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport NotFound from './NotFound';\nimport TileHeroLink from '../modules/TileHeroLink';\nimport Pagination from '../components/Pagination';\nimport {abbvNumber} from '../utils/misc';\nimport { getURLParam } from \"../utils/url\";\n\nconst Feed = (props) => {\n    const renderFeed = (results) => {\n        // Return our NotFound component if there's nothing to display\n        if(!results) return <NotFound/>;\n\n        let items = [];\n        for(var i = 0; i < 12 && i < results.videos.length; i++){\n            let video = results.videos[i];\n            items.push(\n                <TileHeroLink\n                    title={video['title']}\n                    src={video['default_thumb']}\n                    link={video['url']}\n                    key={`${video['id']}_${i}`}\n                >\n                    <div className=\"row\">\n                        <div className=\"single-detail col\">\n                            {abbvNumber(video['views'])} Views &middot; <span className=\"success\">{parseFloat(video['rating']).toFixed(1)}%</span>\n                    </div>\n                        <div className=\"single-detail col\">{video['duration']}</div>\n                    </div>\n                </TileHeroLink>\n            );\n        }\n        return items;\n    }\n\n    return(\n        <>\n            {renderFeed(props.results)}\n\n            {(props.results) ?\n                <center className=\"clear\">\n                    <Pagination\n                        ariaLabel=\"footer-pagination\"\n                        onPageUpdate={() => {}}\n                        page={getURLParam(props, 'page')}\n                        lastPage=\"10\"\n                    />\n                </center>\n            : null}\n        </>\n    );\n}\n\nexport default withRouter(Feed);\n","import React, { Component } from 'react';\n\n// https://reactjs.org/docs/error-boundaries.html\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.warn('ErrorBoundary Error:', error);\n        console.warn('ErrorBoundary Info:', info);\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.errorContent;\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport {getURLParam} from '../utils/url';\n\nconst ResultsBanner = (props) => {\n    if(getURLParam(props, 'q')){\n        return(\n            <div className=\"results-banner\">\n                Displaying Results for: <span>{getURLParam(props, 'q')}</span>\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default withRouter(ResultsBanner);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport Feed from '../pages/Feed';\nimport NotFound from '../pages/NotFound';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport ResultsBanner from '../components/ResultsBanner';\nimport {getURLParam} from \"../utils/url\";\nimport {\n    updateAllBrandInfo,\n    updateActiveBrand,\n    updateBrandAttribute,\n    getCategoriesByBrand,\n    searchByQuery,\n    searchByCategory,\n    searchByBrandDefault\n} from '../actions';\nimport {DEFAULT_BRAND} from '../actions/types';\n\nclass Routing extends Component {\n    // Listen for changes in the URL params and update the state accordingly\n    onRouteChanged = () =>{\n        let {match, location} = this.props;\n        let urlParams = queryString.parse(this.props.location.search);\n        let activeBrand = match.params.brand || location.pathname.split('/')[1] || DEFAULT_BRAND;\n\n        // Search for results to populate the feed\n        this.delegateSearch();\n\n        // Update the global brand info\n        this.props.updateAllBrandInfo({\n            activeBrand: activeBrand,\n            page: urlParams['page'] || 1,\n            search: urlParams['q'] || '',\n            category: urlParams['category'] || '',\n            queryString: location.search || ''\n        });\n\n        // Update the active brand\n        this.props.updateActiveBrand(activeBrand);\n\n        // Check if we need to fetch the categories list\n        this.handleCategories(activeBrand);\n    }\n\n    // Decide what kind of search to perform based on url params\n    delegateSearch = () => {\n        let brand = this.props.brands.activeBrand;\n        let query = getURLParam(this.props, 'q');\n        let category = getURLParam(this.props, 'category');\n\n        if(query){\n            // Search by brand and full query string\n            // (May also include category and page)\n            this.props.searchByQuery(brand, this.props.location.search);\n        }\n        else if(category){\n            // Search by brand and category\n            this.props.searchByCategory(brand, category);\n        }\n        else if(!this.props.api.searchResults){\n            // If no results exist in state then\n            // call the API and get default search\n            // results by brand\n            this.props.searchByBrandDefault(brand);\n        }\n    }\n\n    // Fetch a list of categories to search based on brand \n    handleCategories = (brand) => {\n        brand = brand || this.props.providers[this.props.activeBrand];\n        let categories = brand.allCategories;\n\n        // If there are no categories, fetch and populate\n        if(!categories || categories.length === 0){\n            this.props.getCategoriesByBrand(brand);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.onRouteChanged();\n        }\n    }\n\n    componentDidMount(){\n        this.onRouteChanged();\n    }\n\n    render(){\n        return(\n            <Switch>\n                <Route exact path=\"/\" key=\"homeFeed\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <ResultsBanner />\n                            <Feed results={this.props.api.searchResults} />\n                        </ErrorBoundary>\n                    );\n                }} />\n            <Route exact path=\"/404\" key=\"404page\" component={NotFound} />\n                <Route path=\"/:brand\" key=\"brand\" component={() => {\n                    return(\n                        <ErrorBoundary errorContent={<NotFound/>}>\n                            <ResultsBanner />\n                            <Feed results={this.props.api.searchResults} />\n                        </ErrorBoundary>\n                    );\n                }} />\n            <Route key=\"404fallback\" component={NotFound} />\n            </Switch>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        brands: state.brands,\n        api: state.api\n    };\n}\n\nexport default connect(mapStateToProps, {\n    updateAllBrandInfo,\n    updateActiveBrand,\n    updateBrandAttribute,\n    getCategoriesByBrand,\n    searchByQuery,\n    searchByCategory,\n    searchByBrandDefault\n})(withRouter(Routing));\n","import {\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO,\n    UPDATE_BRAND_ATTRIBUTE\n} from './types';\n\nexport const resetBrand = (brand) => {\n    if(brand === 'all'){\n        return {type: RESET_ALL_BRANDS}\n    }\n    return {type: RESET_BRAND, payload: brand}\n}\n\nexport const updateActiveBrand = (brand) => {\n    return {type: UPDATE_ACTIVE_BRAND, payload: brand}\n}\n\nexport const updateAllBrandInfo = (infoObj) => {\n    return {type: UPDATE_ALL_BRAND_INFO, payload: infoObj}\n}\n\nexport const updateBrandAttribute = (brand, attribute, value) => {\n    return {type: UPDATE_BRAND_ATTRIBUTE, payload: {brand, attribute, value}}\n}\n","import React from 'react';\n\nconst Logo = () => {\n    return(\n        <a className=\"home-button secondary\" href=\"/\">\n            <div id=\"logo\"> Video<span className=\"brand-color\">Feed</span> </div>\n        </a>\n    );\n}\n\nexport default Logo;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nconst BrandsList = () => {\n    const renderLinks = () => {\n        let links = [];\n        let brands = require('../data/sample/brands.json');\n\n        for(let b in brands['brands']){\n            let brand = brands['brands'][b].brand.toLowerCase();\n            links.push(\n                <NavLink to={`/${brand}`} className=\"nav-link border-bottom truncate\" activeClassName=\"active\" key={b}>{brand}</NavLink>\n            );\n        }\n\n        return links;\n    }\n\n    return(\n        <ul className=\"navbar-nav\">{}\n            {renderLinks()}\n        </ul>\n    );\n}\n\nexport default BrandsList;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n// import { NavLink } from \"react-router-dom\";\nimport {getURLParam, updatedURLParamString} from '../utils/url';\n\nconst ParamLink = (props) => {\n    // Get the url's value of this ParamLink's param (used for active class)\n    const urlParam = getURLParam(props, props.param);\n\n    // Preserve the active path and then update the query param\n    const preservePathUpdateParams = () => {\n        props.match.url = props.location.pathname;\n        props.history.push(updatedURLParamString(props, props.param, props.value));\n    }\n\n    /*\n        // Results in youtube?/?caregory=test&page=1&q=query\n        // Beacause of updatedURLParamString()\n        <NavLink\n            to={{\n                pathname: props.location.pathname,\n                search: updatedURLParamString(props, props.param, props.value)\n            }}\n            className={props.className}\n            activeClassName={props.activeClassName}\n        >\n            {props.children}\n        </NavLink>\n    */\n\n    return(\n        <div\n            className={(urlParam === props.value) ? `${props.className} ${props.activeClassName}` : props.className}\n            onClick={() => {preservePathUpdateParams()}}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default withRouter(ParamLink);\n","import React from 'react';\nimport ParamLink from \"./ParamLink\";\n\nconst CategoriesList = (props) => {\n    const renderLinks = () => {\n        let links = [];\n\n        for(let c in props.categories){\n            let category = props.categories[c].category.toLowerCase();\n            links.push(\n                <ParamLink className=\"nav-link border-bottom truncate\" activeClassName=\"active\" param=\"category\" key={c} value={category}>{category}</ParamLink>\n            );\n        }\n\n        if(links.length === 0) links = <i style={{'fontSize': '12px'}}>No Categories Found.</i>;\n        return links;\n    }\n\n    return( <ul className=\"navbar-nav\"> {renderLinks()} </ul> );\n}\n\nexport default CategoriesList;\n","import React from 'react';\n\nconst CollapsiblePanel = ({id, title, children}) => {\n    return(\n        <div className=\"panel-group\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <div className=\"panel-title\">\n                <div className=\"nav-link truncate\" data-toggle=\"collapse\" href={`#${id}`}>\n                    {title}\n                </div>\n            </div>\n            </div>\n            <div id={id} className=\"panel-collapse collapse\">\n              <div className=\"panel-body\">{children}</div>\n            </div>\n          </div>\n      </div>\n    );\n}\n\nexport default CollapsiblePanel;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserView} from \"react-device-detect\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport BrandsList from \"./BrandsList\";\nimport CategoriesList from \"./CategoriesList\";\nimport CollapsiblePanel from \"./CollapsiblePanel\";\nimport { getCategoriesByBrand } from '../actions';\n\nclass NavItems extends Component {\n\n    render(){\n        return(\n            <>\n                <BrowserView>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item border-bottom\">\n                            <Search />\n                        </li>\n                    </ul>\n                </BrowserView>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item border-bottom\">\n                        <NavLink to=\"/\" className=\"nav-link truncate\" activeClassName=\"default\">\n                            Home Feed\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item border-bottom truncate\">\n                        <CollapsiblePanel\n                            id=\"brands-accordion\"\n                            title=\"Brands\"\n                        >\n                            <BrandsList />\n                        </CollapsiblePanel>\n                    </li>\n                    <li className=\"nav-item border-bottom truncate\">\n                        <CollapsiblePanel\n                            id=\"categories-accordion\"\n                            title=\"Categories\"\n                        >\n                            <CategoriesList categories={\n                                this.props.providers[this.props.activeBrand].allCategories\n                            }/>\n                        </CollapsiblePanel>\n                    </li>\n                </ul>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{ ...state.brands};\n}\n\nexport default connect(mapStateToProps, {getCategoriesByBrand})(withRouter(NavItems));\n","import React, {Component} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Logo from \"./Logo\";\nimport NavItems from './NavItems';\n\nclass MobileNav extends Component {\n    state ={isOpen: false}\n\n    toggleOpen = (force) => {\n        if(typeof force !== 'undefined'){\n            this.setState({...this.state, isOpen: force});\n        }\n        else{\n            this.setState({...this.state, isOpen: !this.state.isOpen});\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.toggleOpen(false);\n        }\n    }\n\n    render(){\n        return (\n            <nav className=\"navbar\">\n\n                <Logo />\n\n                <button className=\"navbar-toggler border-top border-bottom over-5\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded={(this.state.isOpen) ? 'true' : 'false'} aria-label=\"Toggle navigation\" onClick={() => {this.toggleOpen()}}></button>\n\n                <div className={`${(this.state.isOpen) ? 'show' : 'collapse'} navbar-collapse`} id=\"navbarSupportedContent1\">\n                    <NavItems />\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(MobileNav);\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\nclass PartnerLogo extends Component {\n    render(){\n        return(\n            <div className=\"dynamic-partner-logo\">\n                <img\n                    id=\"partner-logo\"\n                    className={this.props.className}\n                    src={this.props.partnerLogo}\n                    alt={this.props.alt || this.props.activeBrand}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{ ...state.brands};\n}\n\nexport default connect(mapStateToProps, {})(withRouter(PartnerLogo));\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {MobileView, BrowserView} from \"react-device-detect\";\nimport Logo from \"../components/Logo\";\nimport MobileNav from \"../components/MobileNav\";\nimport Search from \"../components/Search\";\nimport PartnerLogo from \"../components/PartnerLogo\";\n\nconst Header = (props) => {\n    let brand = props.match.params.brand || props.location.pathname.split('/')[1];\n    return (\n        <header className=\"super container-fluid\">\n            <MobileView viewClassName=\"mobile-nav\">\n                <MobileNav />\n                <Search />\n            </MobileView>\n            <BrowserView>\n                <Logo />\n                {(brand) ? <PartnerLogo /> : <Search /> }\n            </BrowserView>\n\n        </header>\n    );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport {BrowserView} from \"react-device-detect\";\nimport NavItems from './NavItems';\n\nconst Nav = () => {\n    return(\n        <BrowserView viewClassName=\"siderail-nav nav-left col-lg-2 col-xl-2 float-left border-right\">\n            <nav className=\"navbar web-nav\">\n                <NavItems />\n            </nav>\n        </BrowserView>\n    );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Routing from \"./routes/Routing\";\nimport Header from \"./modules/Header\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        console.log('App props: ', this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"app clear\">\n              <Header />\n              <Nav />\n\n              <div className=\"container col-sm-12 col-md-12 col-lg-10 col-xl-10 float-right clear\">\n                <div className=\"feed-wrapper row col float-right\">\n                  <Routing />\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { META, RESET_META } from '../actions/types';\nimport { mergeObjects } from '../utils/objects';\n\nconst INITIAL_STATE = {\n    'title': 'VideoFeed | Clean React UI',\n    'description': 'Reuseable React & SASS based components',\n    'keywords': '',\n    'subject': '',\n    'robots': 'index,follow',\n    'ogTitle': 'VideoFeed',\n    'ogImage': '../../public/favicon.ico',\n    'ogDescription': 'Reuseable React & SASS based components',\n    'ogSiteName': 'VideoFeed',\n    'ogType': '',\n    'ogURL': window.location.href\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case META:\n            let metaData = mergeObjects(INITIAL_STATE, action.payload);\n            return{...state, ...metaData}\n\n        case RESET_META:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","import { SEARCH_BY_QUERY } from '../actions/types';\n\nconst INITIAL_STATE = {searchResults: null}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case SEARCH_BY_QUERY:\n            console.log('Got Search Results:', action.payload)\n            return{...state, searchResults: action.payload}\n\n        default:\n            return state;\n    }\n}\n","import {\n    DEFAULT_BRAND,\n    RESET_BRAND,\n    RESET_ALL_BRANDS,\n    UPDATE_ACTIVE_BRAND,\n    UPDATE_ALL_BRAND_INFO,\n    UPDATE_BRAND_ATTRIBUTE\n} from '../actions/types';\nimport * as brands from '../data/brand-defaults';\n\nconst INITIAL_STATE = {\n    activeBrand: DEFAULT_BRAND,\n    page: 1,\n    search: '',\n    category: '',\n    queryString: '',\n    partnerLogo: null,\n    providers: {\n        youtube: brands.youtube,\n        vimeo: brands.vimeo,\n        metacafe: brands.metacafe\n    }\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case UPDATE_ACTIVE_BRAND:\n            return{\n                ...state,\n                activeBrand: action.payload,\n                partnerLogo: state.providers[action.payload].logo,\n                page: state.providers[action.payload].page,\n                search: state.providers[action.payload].search,\n                category: state.providers[action.payload].category,\n                queryString: state.providers[action.payload].queryString\n            }\n\n        case UPDATE_ALL_BRAND_INFO:\n            return{\n                ...state,\n                activeBrand: action.payload.activeBrand,\n                page: action.payload.page,\n                search: action.payload.search,\n                category: action.payload.category,\n                queryString: action.payload.queryString,\n                providers: {\n                    ...state.providers,\n                    [action.payload.activeBrand]: {\n                        ...state.providers[action.payload.activeBrand],\n                        page: action.payload.page,\n                        search: action.payload.search,\n                        category: action.payload.category,\n                        queryString: action.payload.queryString\n                    }\n                }\n            }\n\n        case UPDATE_BRAND_ATTRIBUTE:\n            return{\n                ...state,\n                providers: {\n                    ...state.providers,\n                    [action.payload.brand]: {\n                        ...state.providers[action.payload.brand],\n                        [action.payload.attribute]: action.payload.value\n                    }\n                }\n            }\n\n        case RESET_BRAND:\n            return{\n                ...state,\n                providers: {\n                    [action.payload]: INITIAL_STATE.providers[action.payload]\n                }\n            }\n\n        case RESET_ALL_BRANDS:\n            return{...state, ...INITIAL_STATE}\n\n        default:\n            return state;\n    }\n}\n","export const youtube = {\n    brandName: \"youtube\",\n    logo:\n        \"https://www.freeiconspng.com/uploads/youtube-logo-png-transparent-image-5.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const vimeo = {\n    brandName: \"vimeo\",\n    logo:\n        \"https://prowly-uploads.s3.eu-west-1.amazonaws.com/uploads/PressRoom/563/cover_photo/large_slack-imgs.com.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","export const metacafe = {\n    brandName: \"metacafe\",\n    logo: \"https://logonoid.com/images/metacafe-logo.png\",\n    page: 1,\n    search: \"\",\n    category: \"\",\n    queryString: \"\",\n    allCategories: []\n};\n","import {combineReducers} from 'redux';\nimport MetaReducer from './MetaReducer';\nimport APIReducer from './APIReducer';\nimport BrandReducer from './BrandReducer';\n\nexport default combineReducers({\n    meta: MetaReducer,\n    api: APIReducer,\n    brands: BrandReducer\n});\n","// Grab a nested object by a given key and that key's value\nexport const getObjectByKeyVal = (arr, key, val) => {\n    var index = 0;\n    var r = arr.filter((obj, i) => {\n        if(obj[key] === val) index = i;\n        return obj[key] === val\n    })\n    return {[index]: r};\n}\n\nexport const getDeepObjectByKey = (obj, deepKey, val) => {\n    var result = null;\n    if(obj instanceof Array) {\n        for(var i = 0; i < obj.length; i++) {\n            result = getDeepObjectByKey(obj[i]);\n        }\n    }\n    else{\n        for(var prop in obj) {\n            if(prop === deepKey) {\n                if(val && obj[prop] === val) {\n                    return obj;\n                }\n                return obj;\n            }\n            if(obj[prop] instanceof Object || obj[prop] instanceof Array){\n                result = getDeepObjectByKey(obj[prop], deepKey);\n            }\n        }\n    }\n    return result;\n}\n\nexport const mergeObjects = (defaultObj, argObj) => {\n    let temp = {}\n    for(let key in defaultObj){\n        (argObj[key]) ? temp[key] = argObj[key] : temp[key] = defaultObj[key];\n    }\n    return temp;\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport MetaTags from 'react-meta-tags';\n\nclass Meta extends Component {\n    render(){\n        return(\n            <MetaTags>\n                <title>{this.props.title}</title>\n                <meta name=\"description\" content={this.props.description} />\n                <meta name=\"keywords\" content={this.props.keywords} />\n                <meta name=\"subject\" content={this.props.subject} />\n                <meta name=\"robots\" content={this.props.robots} />\n                <meta property=\"og:title\" content={this.props.ogTitle} />\n                <meta property=\"og:image\" content={this.props.ogImage} />\n                <meta property=\"og:site_name\" content={this.props.ogSiteName} />\n                <meta property=\"og:description\" content={this.props.ogDescription || this.props.description} />\n                <meta property=\"og:url\" content={this.props.ogURL || window.location.href} />\n            </MetaTags>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {...state.meta};\n}\n\nexport default connect(mapStateToProps, {})(Meta);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers'\nimport Meta from './components/Meta';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, {}, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Meta />\n            <App />\n        </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}